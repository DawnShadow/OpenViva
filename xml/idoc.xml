<members>
  <viva>
    <signature>viva</signature>
    <childcount>98</childcount>
    <type>Namespace</type>
    <name>viva</name>
    <token>namespace viva</token>
    <scope></scope>
  </viva>
  <viva.AnimationAttribute>
    <signature>viva.AnimationAttribute</signature>
    <childcount>3</childcount>
    <type>Enum</type>
    <name>AnimationAttribute</name>
    <token>[System.Flags]
public enum AnimationAttribute </token>
    <scope>viva</scope>
  </viva.AnimationAttribute>
  <viva.AnimationAttribute.NONE>
    <signature>viva.AnimationAttribute.NONE</signature>
    <childcount>0</childcount>
    <type>EnumValue</type>
    <name>NONE</name>
    <token>NONE = 0</token>
    <scope>viva.AnimationAttribute</scope>
  </viva.AnimationAttribute.NONE>
  <viva.AnimationAttribute.LEFT>
    <signature>viva.AnimationAttribute.LEFT</signature>
    <childcount>0</childcount>
    <type>EnumValue</type>
    <name>LEFT</name>
    <token>LEFT = 1</token>
    <scope>viva.AnimationAttribute</scope>
  </viva.AnimationAttribute.LEFT>
  <viva.AnimationAttribute.RIGHT>
    <signature>viva.AnimationAttribute.RIGHT</signature>
    <childcount>0</childcount>
    <type>EnumValue</type>
    <name>RIGHT</name>
    <token>RIGHT = 2</token>
    <scope>viva.AnimationAttribute</scope>
  </viva.AnimationAttribute.RIGHT>
  <viva.Animation>
    <signature>viva.Animation</signature>
    <childcount>24</childcount>
    <type>Class</type>
    <name>Animation</name>
    <token>[System.Serializable]
public class Animation : VivaEditable </token>
    <scope>viva</scope>
  </viva.Animation>
  <viva.Animation.root>
    <signature>viva.Animation.root</signature>
    <childcount>0</childcount>
    <type>Property</type>
    <name>root</name>
    <token>public static string root { get; }</token>
    <scope>viva.Animation</scope>
  </viva.Animation.root>
  <viva.Animation.GetAnimation_x0028_string_x0029_>
    <signature>viva.Animation.GetAnimation(string)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>GetAnimation</name>
    <token>public static Animation GetAnimation(string name)</token>
    <scope>viva.Animation</scope>
    <params>
      <name>string</name>
    </params>
  </viva.Animation.GetAnimation_x0028_string_x0029_>
  <viva.Animation.RegisterBuiltInAnimation_x0028_string_x0029_>
    <signature>viva.Animation.RegisterBuiltInAnimation(string)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>RegisterBuiltInAnimation</name>
    <token>public static void RegisterBuiltInAnimation(string data)</token>
    <scope>viva.Animation</scope>
    <params>
      <data>string</data>
    </params>
  </viva.Animation.RegisterBuiltInAnimation_x0028_string_x0029_>
  <viva.Animation.name>
    <signature>viva.Animation.name</signature>
    <childcount>0</childcount>
    <type>Property</type>
    <name>name</name>
    <token>public string name { get; }</token>
    <scope>viva.Animation</scope>
  </viva.Animation.name>
  <viva.Animation.duration>
    <signature>viva.Animation.duration</signature>
    <childcount>0</childcount>
    <type>Property</type>
    <name>duration</name>
    <token>public float duration { get; }</token>
    <scope>viva.Animation</scope>
  </viva.Animation.duration>
  <viva.Animation.baseFramerate>
    <signature>viva.Animation.baseFramerate</signature>
    <childcount>0</childcount>
    <type>Property</type>
    <name>baseFramerate</name>
    <token>public float baseFramerate { get; }</token>
    <scope>viva.Animation</scope>
  </viva.Animation.baseFramerate>
  <viva.Animation.channels>
    <signature>viva.Animation.channels</signature>
    <childcount>0</childcount>
    <type>Property</type>
    <name>channels</name>
    <token>public AnimationChannel[] channels { get; }</token>
    <scope>viva.Animation</scope>
  </viva.Animation.channels>
  <viva.Animation.ragdollCompatible>
    <signature>viva.Animation.ragdollCompatible</signature>
    <childcount>0</childcount>
    <type>Property</type>
    <name>ragdollCompatible</name>
    <token>public bool ragdollCompatible { get; }</token>
    <scope>viva.Animation</scope>
  </viva.Animation.ragdollCompatible>
  <viva.Animation.enableRootMotion>
    <signature>viva.Animation.enableRootMotion</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>enableRootMotion</name>
    <token>public bool enableRootMotion </token>
    <scope>viva.Animation</scope>
  </viva.Animation.enableRootMotion>
  <viva.Animation.attributes>
    <signature>viva.Animation.attributes</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>attributes</name>
    <token>public AnimationAttribute attributes </token>
    <scope>viva.Animation</scope>
  </viva.Animation.attributes>
  <viva.Animation.Animation_x0028_string_x002C__x0020_AnimationChannel_x005B__x005D__x002C__x0020_float_x002C__x0020_float_x0029_>
    <signature>viva.Animation.Animation(string, AnimationChannel[], float, float)</signature>
    <childcount>0</childcount>
    <type>Constructor</type>
    <name>Animation</name>
    <token>public  Animation(string _name, AnimationChannel[] _channels, float _duration, float _baseFramerate)</token>
    <scope>viva.Animation</scope>
    <params>
      <_name>string</_name>
      <_channels>AnimationChannel[]</_channels>
      <_duration>float</_duration>
      <_baseFramerate>float</_baseFramerate>
    </params>
  </viva.Animation.Animation_x0028_string_x002C__x0020_AnimationChannel_x005B__x005D__x002C__x0020_float_x002C__x0020_float_x0029_>
  <viva.Animation.IsValid_x0028__x0029_>
    <signature>viva.Animation.IsValid()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>IsValid</name>
    <token>public bool IsValid()</token>
    <scope>viva.Animation</scope>
  </viva.Animation.IsValid_x0028__x0029_>
  <viva.Animation.ApplyRagdollProfileOffsets_x0028_Model_x0029_>
    <signature>viva.Animation.ApplyRagdollProfileOffsets(Model)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>ApplyRagdollProfileOffsets</name>
    <token>public void ApplyRagdollProfileOffsets(Model model)</token>
    <scope>viva.Animation</scope>
    <params>
      <model>Model</model>
    </params>
  </viva.Animation.ApplyRagdollProfileOffsets_x0028_Model_x0029_>
  <viva.Animation.GetInfoHeaderTitleText_x0028__x0029_>
    <signature>viva.Animation.GetInfoHeaderTitleText()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>GetInfoHeaderTitleText</name>
    <token>public override string GetInfoHeaderTitleText()</token>
    <scope>viva.Animation</scope>
  </viva.Animation.GetInfoHeaderTitleText_x0028__x0029_>
  <viva.Animation.GenerateThumbnail_x0028_Thumbnail_x0029_>
    <signature>viva.Animation.GenerateThumbnail(Thumbnail)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>GenerateThumbnail</name>
    <token>public override void GenerateThumbnail(Thumbnail thumbnail)</token>
    <scope>viva.Animation</scope>
    <params>
      <thumbnail>Thumbnail</thumbnail>
    </params>
  </viva.Animation.GenerateThumbnail_x0028_Thumbnail_x0029_>
  <viva.Animation.GetInfoHeaderText_x0028__x0029_>
    <signature>viva.Animation.GetInfoHeaderText()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>GetInfoHeaderText</name>
    <token>public override string GetInfoHeaderText()</token>
    <scope>viva.Animation</scope>
  </viva.Animation.GetInfoHeaderText_x0028__x0029_>
  <viva.Animation.GetInfoBodyContentText_x0028__x0029_>
    <signature>viva.Animation.GetInfoBodyContentText()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>GetInfoBodyContentText</name>
    <token>public override string GetInfoBodyContentText()</token>
    <scope>viva.Animation</scope>
  </viva.Animation.GetInfoBodyContentText_x0028__x0029_>
  <viva.Animation.Save_x0028_string_x0029_>
    <signature>viva.Animation.Save(string)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>Save</name>
    <token>public void Save(string relativeFilepath)</token>
    <scope>viva.Animation</scope>
    <params>
      <relativeFilepath>string</relativeFilepath>
    </params>
  </viva.Animation.Save_x0028_string_x0029_>
  <viva.AnimationChangeCallback_x0028_AnimationState_x0029_>
    <signature>viva.AnimationChangeCallback(AnimationState)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>AnimationChangeCallback</name>
    <token>public delegate void AnimationChangeCallback(AnimationState oldState)</token>
    <scope>viva</scope>
    <params>
      <oldState>AnimationState</oldState>
    </params>
  </viva.AnimationChangeCallback_x0028_AnimationState_x0029_>
  <viva.BindStateCallback_x0028_AnimationState_x0029_>
    <signature>viva.BindStateCallback(AnimationState)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>BindStateCallback</name>
    <token>public delegate void BindStateCallback(AnimationState state)</token>
    <scope>viva</scope>
    <params>
      <state>AnimationState</state>
    </params>
  </viva.BindStateCallback_x0028_AnimationState_x0029_>
  <viva.AnimationPlayer>
    <signature>viva.AnimationPlayer</signature>
    <childcount>20</childcount>
    <type>Class</type>
    <name>AnimationPlayer</name>
    <token>public class AnimationPlayer : MonoBehaviour </token>
    <scope>viva</scope>
  </viva.AnimationPlayer>
  <viva.AnimationPlayer.targetModel>
    <signature>viva.AnimationPlayer.targetModel</signature>
    <childcount>0</childcount>
    <type>Property</type>
    <name>targetModel</name>
    <token>public Model targetModel { get; set; }</token>
    <scope>viva.AnimationPlayer</scope>
  </viva.AnimationPlayer.targetModel>
  <viva.AnimationPlayer.lastState>
    <signature>viva.AnimationPlayer.lastState</signature>
    <childcount>0</childcount>
    <type>Property</type>
    <name>lastState</name>
    <token>public AnimationState lastState { get; set; }</token>
    <scope>viva.AnimationPlayer</scope>
  </viva.AnimationPlayer.lastState>
  <viva.AnimationPlayer.currentState>
    <signature>viva.AnimationPlayer.currentState</signature>
    <childcount>0</childcount>
    <type>Property</type>
    <name>currentState</name>
    <token>public AnimationState currentState { get; set; }</token>
    <scope>viva.AnimationPlayer</scope>
  </viva.AnimationPlayer.currentState>
  <viva.AnimationPlayer.activeState>
    <signature>viva.AnimationPlayer.activeState</signature>
    <childcount>0</childcount>
    <type>Property</type>
    <name>activeState</name>
    <token>public AnimationState activeState { get; set; }</token>
    <scope>viva.AnimationPlayer</scope>
  </viva.AnimationPlayer.activeState>
  <viva.AnimationPlayer.activeBindings>
    <signature>viva.AnimationPlayer.activeBindings</signature>
    <childcount>0</childcount>
    <type>Property</type>
    <name>activeBindings</name>
    <token>public Transform[] activeBindings { get; set; }</token>
    <scope>viva.AnimationPlayer</scope>
  </viva.AnimationPlayer.activeBindings>
  <viva.AnimationPlayer.onAnimate>
    <signature>viva.AnimationPlayer.onAnimate</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>onAnimate</name>
    <token>public GenericCallback onAnimate </token>
    <scope>viva.AnimationPlayer</scope>
  </viva.AnimationPlayer.onAnimate>
  <viva.AnimationPlayer.onModifyAnimation>
    <signature>viva.AnimationPlayer.onModifyAnimation</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>onModifyAnimation</name>
    <token>public GenericCallback onModifyAnimation </token>
    <scope>viva.AnimationPlayer</scope>
  </viva.AnimationPlayer.onModifyAnimation>
  <viva.AnimationPlayer.onAnimationChange>
    <signature>viva.AnimationPlayer.onAnimationChange</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>onAnimationChange</name>
    <token>public GenericCallback onAnimationChange </token>
    <scope>viva.AnimationPlayer</scope>
  </viva.AnimationPlayer.onAnimationChange>
  <viva.AnimationPlayer.currentContext>
    <signature>viva.AnimationPlayer.currentContext</signature>
    <childcount>0</childcount>
    <type>Property</type>
    <name>currentContext</name>
    <token>public AnimationContext currentContext { get; set; }</token>
    <scope>viva.AnimationPlayer</scope>
  </viva.AnimationPlayer.currentContext>
  <viva.AnimationPlayer.BindModel_x0028_Model_x0029_>
    <signature>viva.AnimationPlayer.BindModel(Model)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>BindModel</name>
    <token>public void BindModel(Model _targetModel)</token>
    <scope>viva.AnimationPlayer</scope>
    <params>
      <_targetModel>Model</_targetModel>
    </params>
  </viva.AnimationPlayer.BindModel_x0028_Model_x0029_>
  <viva.AnimationPlayer.GetWeight_x0028_string_x0029_>
    <signature>viva.AnimationPlayer.GetWeight(string)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>GetWeight</name>
    <token>public AnimationWeight GetWeight(string name)</token>
    <scope>viva.AnimationPlayer</scope>
    <params>
      <name>string</name>
    </params>
  </viva.AnimationPlayer.GetWeight_x0028_string_x0029_>
  <viva.AnimationPlayer.Play_x0028_AnimationState_x0029_>
    <signature>viva.AnimationPlayer.Play(AnimationState)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>Play</name>
    <token>public void Play(AnimationState newState)</token>
    <scope>viva.AnimationPlayer</scope>
    <params>
      <newState>AnimationState</newState>
    </params>
  </viva.AnimationPlayer.Play_x0028_AnimationState_x0029_>
  <viva.AnimationPlayer.Stop_x0028__x0029_>
    <signature>viva.AnimationPlayer.Stop()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>Stop</name>
    <token>public void Stop()</token>
    <scope>viva.AnimationPlayer</scope>
  </viva.AnimationPlayer.Stop_x0028__x0029_>
  <viva.AnimationPlayer.SetNormalizedTime_x0028_float_x0029_>
    <signature>viva.AnimationPlayer.SetNormalizedTime(float)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>SetNormalizedTime</name>
    <token>public void SetNormalizedTime(float normTime)</token>
    <scope>viva.AnimationPlayer</scope>
    <params>
      <normTime>float</normTime>
    </params>
  </viva.AnimationPlayer.SetNormalizedTime_x0028_float_x0029_>
  <viva.AnimationPlayer.FixedUpdate_x0028__x0029_>
    <signature>viva.AnimationPlayer.FixedUpdate()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>FixedUpdate</name>
    <token>public void FixedUpdate()</token>
    <scope>viva.AnimationPlayer</scope>
  </viva.AnimationPlayer.FixedUpdate_x0028__x0029_>
  <viva.AnimationPlayer.Animate_x0028__x0029_>
    <signature>viva.AnimationPlayer.Animate()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>Animate</name>
    <token>public void Animate()</token>
    <scope>viva.AnimationPlayer</scope>
  </viva.AnimationPlayer.Animate_x0028__x0029_>
  <viva.AnimationFrameSet>
    <signature>viva.AnimationFrameSet</signature>
    <childcount>6</childcount>
    <type>Class</type>
    <name>AnimationFrameSet</name>
    <token>[System.Serializable]
public class AnimationFrameSet </token>
    <scope>viva</scope>
  </viva.AnimationFrameSet>
  <viva.AnimationFrameSet.frames>
    <signature>viva.AnimationFrameSet.frames</signature>
    <childcount>0</childcount>
    <type>Property</type>
    <name>frames</name>
    <token>public float[] frames { get; }</token>
    <scope>viva.AnimationFrameSet</scope>
  </viva.AnimationFrameSet.frames>
  <viva.AnimationFrameSet.AnimationFrameSet_x0028_float_x005B__x005D__x0029_>
    <signature>viva.AnimationFrameSet.AnimationFrameSet(float[])</signature>
    <childcount>0</childcount>
    <type>Constructor</type>
    <name>AnimationFrameSet</name>
    <token>public  AnimationFrameSet(float[] _frames)</token>
    <scope>viva.AnimationFrameSet</scope>
    <params>
      <_frames>float[]</_frames>
    </params>
  </viva.AnimationFrameSet.AnimationFrameSet_x0028_float_x005B__x005D__x0029_>
  <viva.AnimationFrameSet.Sample_x0028_int_x002C__x0020_int_x002C__x0020_float_x0029_>
    <signature>viva.AnimationFrameSet.Sample(int, int, float)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>Sample</name>
    <token>public float Sample(int frameA, int frameB, float ratio)</token>
    <scope>viva.AnimationFrameSet</scope>
    <params>
      <frameA>int</frameA>
      <frameB>int</frameB>
      <ratio>float</ratio>
    </params>
  </viva.AnimationFrameSet.Sample_x0028_int_x002C__x0020_int_x002C__x0020_float_x0029_>
  <viva.AnimationFrameSet.Sample_x0028_int_x002C__x0020_int_x002C__x0020_float_x002C__x0020_float_x002C__x0020_float_x0029_>
    <signature>viva.AnimationFrameSet.Sample(int, int, float, float, float)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>Sample</name>
    <token>public float Sample(int frameA, int frameB, float ratio, float offsetA, float offsetB)</token>
    <scope>viva.AnimationFrameSet</scope>
    <params>
      <frameA>int</frameA>
      <frameB>int</frameB>
      <ratio>float</ratio>
      <offsetA>float</offsetA>
      <offsetB>float</offsetB>
    </params>
  </viva.AnimationFrameSet.Sample_x0028_int_x002C__x0020_int_x002C__x0020_float_x002C__x0020_float_x002C__x0020_float_x0029_>
  <viva.AnimationFrameSet.Sample_x0028_int_x0029_>
    <signature>viva.AnimationFrameSet.Sample(int)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>Sample</name>
    <token>public float Sample(int frame)</token>
    <scope>viva.AnimationFrameSet</scope>
    <params>
      <frame>int</frame>
    </params>
  </viva.AnimationFrameSet.Sample_x0028_int_x0029_>
  <viva.AnimationChannel>
    <signature>viva.AnimationChannel</signature>
    <childcount>14</childcount>
    <type>Class</type>
    <name>AnimationChannel</name>
    <token>[System.Serializable]
public class AnimationChannel </token>
    <scope>viva</scope>
  </viva.AnimationChannel>
  <viva.AnimationChannel.Channel>
    <signature>viva.AnimationChannel.Channel</signature>
    <childcount>4</childcount>
    <type>Enum</type>
    <name>Channel</name>
    <token>public enum Channel </token>
    <scope>viva.AnimationChannel</scope>
  </viva.AnimationChannel.Channel>
  <viva.AnimationChannel.Channel.POSITION>
    <signature>viva.AnimationChannel.Channel.POSITION</signature>
    <childcount>0</childcount>
    <type>EnumValue</type>
    <name>POSITION</name>
    <token>POSITION</token>
    <scope>viva.AnimationChannel.Channel</scope>
  </viva.AnimationChannel.Channel.POSITION>
  <viva.AnimationChannel.Channel.ROTATION>
    <signature>viva.AnimationChannel.Channel.ROTATION</signature>
    <childcount>0</childcount>
    <type>EnumValue</type>
    <name>ROTATION</name>
    <token>ROTATION</token>
    <scope>viva.AnimationChannel.Channel</scope>
  </viva.AnimationChannel.Channel.ROTATION>
  <viva.AnimationChannel.Channel.SCALE>
    <signature>viva.AnimationChannel.Channel.SCALE</signature>
    <childcount>0</childcount>
    <type>EnumValue</type>
    <name>SCALE</name>
    <token>SCALE</token>
    <scope>viva.AnimationChannel.Channel</scope>
  </viva.AnimationChannel.Channel.SCALE>
  <viva.AnimationChannel.Channel.SHAPEKEY>
    <signature>viva.AnimationChannel.Channel.SHAPEKEY</signature>
    <childcount>0</childcount>
    <type>EnumValue</type>
    <name>SHAPEKEY</name>
    <token>SHAPEKEY</token>
    <scope>viva.AnimationChannel.Channel</scope>
  </viva.AnimationChannel.Channel.SHAPEKEY>
  <viva.AnimationChannel.channel>
    <signature>viva.AnimationChannel.channel</signature>
    <childcount>0</childcount>
    <type>Property</type>
    <name>channel</name>
    <token>public Channel channel { get; }</token>
    <scope>viva.AnimationChannel</scope>
  </viva.AnimationChannel.channel>
  <viva.AnimationChannel.bindTarget>
    <signature>viva.AnimationChannel.bindTarget</signature>
    <childcount>0</childcount>
    <type>Property</type>
    <name>bindTarget</name>
    <token>public string bindTarget { get; }</token>
    <scope>viva.AnimationChannel</scope>
  </viva.AnimationChannel.bindTarget>
  <viva.AnimationChannel.frameSets>
    <signature>viva.AnimationChannel.frameSets</signature>
    <childcount>0</childcount>
    <type>Property</type>
    <name>frameSets</name>
    <token>public AnimationFrameSet[] frameSets { get; }</token>
    <scope>viva.AnimationChannel</scope>
  </viva.AnimationChannel.frameSets>
  <viva.AnimationChannel.bindTargetHash>
    <signature>viva.AnimationChannel.bindTargetHash</signature>
    <childcount>0</childcount>
    <type>Property</type>
    <name>bindTargetHash</name>
    <token>public int bindTargetHash { get; }</token>
    <scope>viva.AnimationChannel</scope>
  </viva.AnimationChannel.bindTargetHash>
  <viva.AnimationChannel.hasDeltas>
    <signature>viva.AnimationChannel.hasDeltas</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>hasDeltas</name>
    <token>public readonly bool hasDeltas = false;</token>
    <scope>viva.AnimationChannel</scope>
  </viva.AnimationChannel.hasDeltas>
  <viva.AnimationChannel.AnimationChannel_x0028_Channel_x002C__x0020_string_x002C__x0020_AnimationFrameSet_x005B__x005D__x0029_>
    <signature>viva.AnimationChannel.AnimationChannel(Channel, string, AnimationFrameSet[])</signature>
    <childcount>0</childcount>
    <type>Constructor</type>
    <name>AnimationChannel</name>
    <token>public  AnimationChannel(Channel _channel, string _bindTarget, AnimationFrameSet[] _frameSets)</token>
    <scope>viva.AnimationChannel</scope>
    <params>
      <_channel>Channel</_channel>
      <_bindTarget>string</_bindTarget>
      <_frameSets>AnimationFrameSet[]</_frameSets>
    </params>
  </viva.AnimationChannel.AnimationChannel_x0028_Channel_x002C__x0020_string_x002C__x0020_AnimationFrameSet_x005B__x005D__x0029_>
  <viva.AnimationChannel.GetRequiredDataCount_x0028__x0029_>
    <signature>viva.AnimationChannel.GetRequiredDataCount()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>GetRequiredDataCount</name>
    <token>public int GetRequiredDataCount()</token>
    <scope>viva.AnimationChannel</scope>
  </viva.AnimationChannel.GetRequiredDataCount_x0028__x0029_>
  <viva.AnimationChannel.Sample_x0028_float_x005B__x005D__x002C__x0020_int_x002C__x0020_int_x002C__x0020_float_x0029_>
    <signature>viva.AnimationChannel.Sample(float[], int, int, float)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>Sample</name>
    <token>public void Sample(float[] data, int frameA, int frameB, float ratio)</token>
    <scope>viva.AnimationChannel</scope>
    <params>
      <data>float[]</data>
      <frameA>int</frameA>
      <frameB>int</frameB>
      <ratio>float</ratio>
    </params>
  </viva.AnimationChannel.Sample_x0028_float_x005B__x005D__x002C__x0020_int_x002C__x0020_int_x002C__x0020_float_x0029_>
  <viva.AnimationChannel.Sample_x0028_float_x005B__x005D__x002C__x0020_int_x002C__x0020_int_x002C__x0020_float_x002C__x0020_Vector3_x002C__x0020_Vector3_x0029_>
    <signature>viva.AnimationChannel.Sample(float[], int, int, float, Vector3, Vector3)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>Sample</name>
    <token>public void Sample(float[] data, int frameA, int frameB, float ratio, Vector3 offsetA, Vector3 offsetB)</token>
    <scope>viva.AnimationChannel</scope>
    <params>
      <data>float[]</data>
      <frameA>int</frameA>
      <frameB>int</frameB>
      <ratio>float</ratio>
      <offsetA>Vector3</offsetA>
      <offsetB>Vector3</offsetB>
    </params>
  </viva.AnimationChannel.Sample_x0028_float_x005B__x005D__x002C__x0020_int_x002C__x0020_int_x002C__x0020_float_x002C__x0020_Vector3_x002C__x0020_Vector3_x0029_>
  <viva.BindSample>
    <signature>viva.BindSample</signature>
    <childcount>7</childcount>
    <type>Class</type>
    <name>BindSample</name>
    <token>public class BindSample </token>
    <scope>viva</scope>
  </viva.BindSample>
  <viva.BindSample.bindHash>
    <signature>viva.BindSample.bindHash</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>bindHash</name>
    <token>public readonly int bindHash = </token>
    <scope>viva.BindSample</scope>
  </viva.BindSample.bindHash>
  <viva.BindSample.channel>
    <signature>viva.BindSample.channel</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>channel</name>
    <token>public readonly AnimationChannel.Channel channel = </token>
    <scope>viva.BindSample</scope>
  </viva.BindSample.channel>
  <viva.BindSample.data>
    <signature>viva.BindSample.data</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>data</name>
    <token>public readonly float[] data = </token>
    <scope>viva.BindSample</scope>
  </viva.BindSample.data>
  <viva.BindSample.source>
    <signature>viva.BindSample.source</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>source</name>
    <token>public readonly object source = </token>
    <scope>viva.BindSample</scope>
  </viva.BindSample.source>
  <viva.BindSample.bindID>
    <signature>viva.BindSample.bindID</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>bindID</name>
    <token>public int bindID </token>
    <scope>viva.BindSample</scope>
  </viva.BindSample.bindID>
  <viva.BindSample.bindCounter>
    <signature>viva.BindSample.bindCounter</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>bindCounter</name>
    <token>public static int bindCounter </token>
    <scope>viva.BindSample</scope>
  </viva.BindSample.bindCounter>
  <viva.BindSample.BindSample_x0028_int_x002C__x0020_AnimationChannel.Channel_x002C__x0020_object_x002C__x0020_int_x0029_>
    <signature>viva.BindSample.BindSample(int, AnimationChannel.Channel, object, int)</signature>
    <childcount>0</childcount>
    <type>Constructor</type>
    <name>BindSample</name>
    <token>public  BindSample(int _bindHash, AnimationChannel.Channel _channel, object _source, int dataLength)</token>
    <scope>viva.BindSample</scope>
    <params>
      <_bindHash>int</_bindHash>
      <_channel>AnimationChannel.Channel</_channel>
      <_source>object</_source>
      <dataLength>int</dataLength>
    </params>
  </viva.BindSample.BindSample_x0028_int_x002C__x0020_AnimationChannel.Channel_x002C__x0020_object_x002C__x0020_int_x0029_>
  <viva.AnimationState>
    <signature>viva.AnimationState</signature>
    <childcount>7</childcount>
    <type>Class</type>
    <name>AnimationState</name>
    <token>public abstract class AnimationState </token>
    <scope>viva</scope>
  </viva.AnimationState>
  <viva.AnimationState.name>
    <signature>viva.AnimationState.name</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>name</name>
    <token>public readonly string name = </token>
    <scope>viva.AnimationState</scope>
  </viva.AnimationState.name>
  <viva.AnimationState.samples>
    <signature>viva.AnimationState.samples</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>samples</name>
    <token>public List&lt;BindSample&gt; samples </token>
    <scope>viva.AnimationState</scope>
  </viva.AnimationState.samples>
  <viva.AnimationState.deltaPosition>
    <signature>viva.AnimationState.deltaPosition</signature>
    <childcount>0</childcount>
    <type>Property</type>
    <name>deltaPosition</name>
    <token>public Vector3 deltaPosition { get; set; }</token>
    <scope>viva.AnimationState</scope>
  </viva.AnimationState.deltaPosition>
  <viva.AnimationState.AnimationState_x0028_string_x0029_>
    <signature>viva.AnimationState.AnimationState(string)</signature>
    <childcount>0</childcount>
    <type>Constructor</type>
    <name>AnimationState</name>
    <token>public  AnimationState(string _name)</token>
    <scope>viva.AnimationState</scope>
    <params>
      <_name>string</_name>
    </params>
  </viva.AnimationState.AnimationState_x0028_string_x0029_>
  <viva.AnimationState.Read_x0028_AnimationContext_x0029_>
    <signature>viva.AnimationState.Read(AnimationContext)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>Read</name>
    <token>public abstract void Read(AnimationContext context)</token>
    <scope>viva.AnimationState</scope>
    <params>
      <context>AnimationContext</context>
    </params>
  </viva.AnimationState.Read_x0028_AnimationContext_x0029_>
  <viva.AnimationState.AddToContextStack_x0028_AnimationContext_x0029_>
    <signature>viva.AnimationState.AddToContextStack(AnimationContext)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>AddToContextStack</name>
    <token>public abstract void AddToContextStack(AnimationContext context)</token>
    <scope>viva.AnimationState</scope>
    <params>
      <context>AnimationContext</context>
    </params>
  </viva.AnimationState.AddToContextStack_x0028_AnimationContext_x0029_>
  <viva.AnimationState.RemoveFromContextStack_x0028_AnimationContext_x0029_>
    <signature>viva.AnimationState.RemoveFromContextStack(AnimationContext)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>RemoveFromContextStack</name>
    <token>public abstract void RemoveFromContextStack(AnimationContext context)</token>
    <scope>viva.AnimationState</scope>
    <params>
      <context>AnimationContext</context>
    </params>
  </viva.AnimationState.RemoveFromContextStack_x0028_AnimationContext_x0029_>
  <viva.AnimationContext>
    <signature>viva.AnimationContext</signature>
    <childcount>9</childcount>
    <type>Class</type>
    <name>AnimationContext</name>
    <token>public class AnimationContext </token>
    <scope>viva</scope>
  </viva.AnimationContext>
  <viva.AnimationContext.root>
    <signature>viva.AnimationContext.root</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>root</name>
    <token>public AnimationState root </token>
    <scope>viva.AnimationContext</scope>
  </viva.AnimationContext.root>
  <viva.AnimationContext.AnimationContext_x0028__x0029_>
    <signature>viva.AnimationContext.AnimationContext()</signature>
    <childcount>0</childcount>
    <type>Constructor</type>
    <name>AnimationContext</name>
    <token>public  AnimationContext()</token>
    <scope>viva.AnimationContext</scope>
  </viva.AnimationContext.AnimationContext_x0028__x0029_>
  <viva.AnimationContext.Restart_x0028__x0029_>
    <signature>viva.AnimationContext.Restart()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>Restart</name>
    <token>public void Restart()</token>
    <scope>viva.AnimationContext</scope>
  </viva.AnimationContext.Restart_x0028__x0029_>
  <viva.AnimationContext.Clear_x0028__x0029_>
    <signature>viva.AnimationContext.Clear()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>Clear</name>
    <token>public void Clear()</token>
    <scope>viva.AnimationContext</scope>
  </viva.AnimationContext.Clear_x0028__x0029_>
  <viva.AnimationContext.Add_x0028_PlaybackState_x0029_>
    <signature>viva.AnimationContext.Add(PlaybackState)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>Add</name>
    <token>public void Add(PlaybackState playbackState)</token>
    <scope>viva.AnimationContext</scope>
    <params>
      <playbackState>PlaybackState</playbackState>
    </params>
  </viva.AnimationContext.Add_x0028_PlaybackState_x0029_>
  <viva.AnimationContext.Pop_x0028__x0029_>
    <signature>viva.AnimationContext.Pop()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>Pop</name>
    <token>public void Pop()</token>
    <scope>viva.AnimationContext</scope>
  </viva.AnimationContext.Pop_x0028__x0029_>
  <viva.AnimationContext.Next_x0028__x0029_>
    <signature>viva.AnimationContext.Next()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>Next</name>
    <token>public PlaybackState Next()</token>
    <scope>viva.AnimationContext</scope>
  </viva.AnimationContext.Next_x0028__x0029_>
  <viva.PlaybackState>
    <signature>viva.PlaybackState</signature>
    <childcount>12</childcount>
    <type>Class</type>
    <name>PlaybackState</name>
    <token>public class PlaybackState </token>
    <scope>viva</scope>
  </viva.PlaybackState>
  <viva.PlaybackState.maxFrames>
    <signature>viva.PlaybackState.maxFrames</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>maxFrames</name>
    <token>public readonly int maxFrames = </token>
    <scope>viva.PlaybackState</scope>
  </viva.PlaybackState.maxFrames>
  <viva.PlaybackState.frame>
    <signature>viva.PlaybackState.frame</signature>
    <childcount>0</childcount>
    <type>Property</type>
    <name>frame</name>
    <token>public float frame { get; set; }</token>
    <scope>viva.PlaybackState</scope>
  </viva.PlaybackState.frame>
  <viva.PlaybackState.frameA>
    <signature>viva.PlaybackState.frameA</signature>
    <childcount>0</childcount>
    <type>Property</type>
    <name>frameA</name>
    <token>public int frameA { get; set; }</token>
    <scope>viva.PlaybackState</scope>
  </viva.PlaybackState.frameA>
  <viva.PlaybackState.frameB>
    <signature>viva.PlaybackState.frameB</signature>
    <childcount>0</childcount>
    <type>Property</type>
    <name>frameB</name>
    <token>public int frameB { get; set; }</token>
    <scope>viva.PlaybackState</scope>
  </viva.PlaybackState.frameB>
  <viva.PlaybackState.ratio>
    <signature>viva.PlaybackState.ratio</signature>
    <childcount>0</childcount>
    <type>Property</type>
    <name>ratio</name>
    <token>public float ratio { get; set; }</token>
    <scope>viva.PlaybackState</scope>
  </viva.PlaybackState.ratio>
  <viva.PlaybackState.loopsA>
    <signature>viva.PlaybackState.loopsA</signature>
    <childcount>0</childcount>
    <type>Property</type>
    <name>loopsA</name>
    <token>public int loopsA { get; set; }</token>
    <scope>viva.PlaybackState</scope>
  </viva.PlaybackState.loopsA>
  <viva.PlaybackState.loopsB>
    <signature>viva.PlaybackState.loopsB</signature>
    <childcount>0</childcount>
    <type>Property</type>
    <name>loopsB</name>
    <token>public int loopsB { get; set; }</token>
    <scope>viva.PlaybackState</scope>
  </viva.PlaybackState.loopsB>
  <viva.PlaybackState.lastDeltaLocalPos>
    <signature>viva.PlaybackState.lastDeltaLocalPos</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>lastDeltaLocalPos</name>
    <token>public Vector3 lastDeltaLocalPos </token>
    <scope>viva.PlaybackState</scope>
  </viva.PlaybackState.lastDeltaLocalPos>
  <viva.PlaybackState.PlaybackState_x0028_float_x002C__x0020_int_x0029_>
    <signature>viva.PlaybackState.PlaybackState(float, int)</signature>
    <childcount>0</childcount>
    <type>Constructor</type>
    <name>PlaybackState</name>
    <token>public  PlaybackState(float _frame, int _maxFrames)</token>
    <scope>viva.PlaybackState</scope>
    <params>
      <_frame>float</_frame>
      <_maxFrames>int</_maxFrames>
    </params>
  </viva.PlaybackState.PlaybackState_x0028_float_x002C__x0020_int_x0029_>
  <viva.PlaybackState.SetNormalizedTime_x0028_float_x0029_>
    <signature>viva.PlaybackState.SetNormalizedTime(float)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>SetNormalizedTime</name>
    <token>public void SetNormalizedTime(float normTime)</token>
    <scope>viva.PlaybackState</scope>
    <params>
      <normTime>float</normTime>
    </params>
  </viva.PlaybackState.SetNormalizedTime_x0028_float_x0029_>
  <viva.PlaybackState.ConstrainFrames_x0028__x0029_>
    <signature>viva.PlaybackState.ConstrainFrames()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>ConstrainFrames</name>
    <token>public void ConstrainFrames()</token>
    <scope>viva.PlaybackState</scope>
  </viva.PlaybackState.ConstrainFrames_x0028__x0029_>
  <viva.PlaybackState.Advance_x0028_float_x0029_>
    <signature>viva.PlaybackState.Advance(float)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>Advance</name>
    <token>public void Advance(float frameStep)</token>
    <scope>viva.PlaybackState</scope>
    <params>
      <frameStep>float</frameStep>
    </params>
  </viva.PlaybackState.Advance_x0028_float_x0029_>
  <viva.AnimationWeight>
    <signature>viva.AnimationWeight</signature>
    <childcount>1</childcount>
    <type>Class</type>
    <name>AnimationWeight</name>
    <token>public class AnimationWeight </token>
    <scope>viva</scope>
  </viva.AnimationWeight>
  <viva.AnimationWeight.value>
    <signature>viva.AnimationWeight.value</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>value</name>
    <token>public float value </token>
    <scope>viva.AnimationWeight</scope>
  </viva.AnimationWeight.value>
  <viva.AnimationStateClip>
    <signature>viva.AnimationStateClip</signature>
    <childcount>9</childcount>
    <type>Class</type>
    <name>AnimationStateClip</name>
    <token>public class AnimationStateClip : AnimationState </token>
    <scope>viva</scope>
  </viva.AnimationStateClip>
  <viva.AnimationStateClip.animation>
    <signature>viva.AnimationStateClip.animation</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>animation</name>
    <token>public Animation animation </token>
    <scope>viva.AnimationStateClip</scope>
  </viva.AnimationStateClip.animation>
  <viva.AnimationStateClip.maxFrames>
    <signature>viva.AnimationStateClip.maxFrames</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>maxFrames</name>
    <token>public readonly int maxFrames = </token>
    <scope>viva.AnimationStateClip</scope>
  </viva.AnimationStateClip.maxFrames>
  <viva.AnimationStateClip.AnimationStateClip_x0028_Animation_x002C__x0020_Model_x0029_>
    <signature>viva.AnimationStateClip.AnimationStateClip(Animation, Model)</signature>
    <childcount>0</childcount>
    <type>Constructor</type>
    <name>AnimationStateClip</name>
    <token>public  AnimationStateClip(Animation _animation, Model model):base(_animation.name)</token>
    <scope>viva.AnimationStateClip</scope>
    <params>
      <_animation>Animation</_animation>
      <model>Model</model>
    </params>
  </viva.AnimationStateClip.AnimationStateClip_x0028_Animation_x002C__x0020_Model_x0029_>
  <viva.AnimationStateClip.AddToContextStack_x0028_AnimationContext_x0029_>
    <signature>viva.AnimationStateClip.AddToContextStack(AnimationContext)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>AddToContextStack</name>
    <token>public override void AddToContextStack(AnimationContext context)</token>
    <scope>viva.AnimationStateClip</scope>
    <params>
      <context>AnimationContext</context>
    </params>
  </viva.AnimationStateClip.AddToContextStack_x0028_AnimationContext_x0029_>
  <viva.AnimationStateClip.RemoveFromContextStack_x0028_AnimationContext_x0029_>
    <signature>viva.AnimationStateClip.RemoveFromContextStack(AnimationContext)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>RemoveFromContextStack</name>
    <token>public override void RemoveFromContextStack(AnimationContext context)</token>
    <scope>viva.AnimationStateClip</scope>
    <params>
      <context>AnimationContext</context>
    </params>
  </viva.AnimationStateClip.RemoveFromContextStack_x0028_AnimationContext_x0029_>
  <viva.AnimationStateClip.Read_x0028_AnimationContext_x0029_>
    <signature>viva.AnimationStateClip.Read(AnimationContext)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>Read</name>
    <token>public override void Read(AnimationContext context)</token>
    <scope>viva.AnimationStateClip</scope>
    <params>
      <context>AnimationContext</context>
    </params>
  </viva.AnimationStateClip.Read_x0028_AnimationContext_x0029_>
  <viva.AnimationBlender>
    <signature>viva.AnimationBlender</signature>
    <childcount>8</childcount>
    <type>Class</type>
    <name>AnimationBlender</name>
    <token>public class AnimationBlender : AnimationState </token>
    <scope>viva</scope>
  </viva.AnimationBlender>
  <viva.AnimationBlender.SampleGroup>
    <signature>viva.AnimationBlender.SampleGroup</signature>
    <childcount>2</childcount>
    <type>Class</type>
    <name>SampleGroup</name>
    <token>public class SampleGroup </token>
    <scope>viva.AnimationBlender</scope>
  </viva.AnimationBlender.SampleGroup>
  <viva.AnimationBlender.SampleGroup.samples>
    <signature>viva.AnimationBlender.SampleGroup.samples</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>samples</name>
    <token>public List&lt;BindSample&gt; samples </token>
    <scope>viva.AnimationBlender.SampleGroup</scope>
  </viva.AnimationBlender.SampleGroup.samples>
  <viva.AnimationBlender.SampleGroup.weights>
    <signature>viva.AnimationBlender.SampleGroup.weights</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>weights</name>
    <token>public List&lt;AnimationWeight&gt; weights </token>
    <scope>viva.AnimationBlender.SampleGroup</scope>
  </viva.AnimationBlender.SampleGroup.weights>
  <viva.AnimationBlender.states>
    <signature>viva.AnimationBlender.states</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>states</name>
    <token>public readonly AnimationState[] states = </token>
    <scope>viva.AnimationBlender</scope>
  </viva.AnimationBlender.states>
  <viva.AnimationBlender.AnimationBlender_x0028_string_x002C__x0020_AnimationState_x005B__x005D__x002C__x0020_AnimationWeight_x005B__x005D__x0029_>
    <signature>viva.AnimationBlender.AnimationBlender(string, AnimationState[], AnimationWeight[])</signature>
    <childcount>0</childcount>
    <type>Constructor</type>
    <name>AnimationBlender</name>
    <token>public  AnimationBlender(string _name, AnimationState[] _states, AnimationWeight[] _weights):base(_name)</token>
    <scope>viva.AnimationBlender</scope>
    <params>
      <_name>string</_name>
      <_states>AnimationState[]</_states>
      <_weights>AnimationWeight[]</_weights>
    </params>
  </viva.AnimationBlender.AnimationBlender_x0028_string_x002C__x0020_AnimationState_x005B__x005D__x002C__x0020_AnimationWeight_x005B__x005D__x0029_>
  <viva.AnimationBlender.AddToContextStack_x0028_AnimationContext_x0029_>
    <signature>viva.AnimationBlender.AddToContextStack(AnimationContext)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>AddToContextStack</name>
    <token>public override void AddToContextStack(AnimationContext context)</token>
    <scope>viva.AnimationBlender</scope>
    <params>
      <context>AnimationContext</context>
    </params>
  </viva.AnimationBlender.AddToContextStack_x0028_AnimationContext_x0029_>
  <viva.AnimationBlender.RemoveFromContextStack_x0028_AnimationContext_x0029_>
    <signature>viva.AnimationBlender.RemoveFromContextStack(AnimationContext)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>RemoveFromContextStack</name>
    <token>public override void RemoveFromContextStack(AnimationContext context)</token>
    <scope>viva.AnimationBlender</scope>
    <params>
      <context>AnimationContext</context>
    </params>
  </viva.AnimationBlender.RemoveFromContextStack_x0028_AnimationContext_x0029_>
  <viva.AnimationBlender.Read_x0028_AnimationContext_x0029_>
    <signature>viva.AnimationBlender.Read(AnimationContext)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>Read</name>
    <token>public override void Read(AnimationContext context)</token>
    <scope>viva.AnimationBlender</scope>
    <params>
      <context>AnimationContext</context>
    </params>
  </viva.AnimationBlender.Read_x0028_AnimationContext_x0029_>
  <viva.AnimationTransition>
    <signature>viva.AnimationTransition</signature>
    <childcount>8</childcount>
    <type>Class</type>
    <name>AnimationTransition</name>
    <token>public class AnimationTransition : AnimationBlender </token>
    <scope>viva</scope>
  </viva.AnimationTransition>
  <viva.AnimationTransition.transitionDuration>
    <signature>viva.AnimationTransition.transitionDuration</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>transitionDuration</name>
    <token>public readonly float transitionDuration = </token>
    <scope>viva.AnimationTransition</scope>
  </viva.AnimationTransition.transitionDuration>
  <viva.AnimationTransition.transitionTime>
    <signature>viva.AnimationTransition.transitionTime</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>transitionTime</name>
    <token>public float transitionTime </token>
    <scope>viva.AnimationTransition</scope>
  </viva.AnimationTransition.transitionTime>
  <viva.AnimationTransition.AnimationTransition_x0028_AnimationState_x002C__x0020_AnimationState_x002C__x0020_float_x002C__x0020_BindStateCallback_x0029_>
    <signature>viva.AnimationTransition.AnimationTransition(AnimationState, AnimationState, float, BindStateCallback)</signature>
    <childcount>0</childcount>
    <type>Constructor</type>
    <name>AnimationTransition</name>
    <token>public  AnimationTransition(AnimationState _startState, AnimationState _endState, float _transitionDuration, BindStateCallback _onFinishTransitionBind):base("transition",new AnimationState[]{ _startState, _endState }, new AnimationWeight[]{ new AnimationWeight(), new AnimationWeight() } )</token>
    <scope>viva.AnimationTransition</scope>
    <params>
      <_startState>AnimationState</_startState>
      <_endState>AnimationState</_endState>
      <_transitionDuration>float</_transitionDuration>
      <_onFinishTransitionBind>BindStateCallback</_onFinishTransitionBind>
    </params>
  </viva.AnimationTransition.AnimationTransition_x0028_AnimationState_x002C__x0020_AnimationState_x002C__x0020_float_x002C__x0020_BindStateCallback_x0029_>
  <viva.AnimationTransition.Read_x0028_AnimationContext_x0029_>
    <signature>viva.AnimationTransition.Read(AnimationContext)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>Read</name>
    <token>public override void Read(AnimationContext context)</token>
    <scope>viva.AnimationTransition</scope>
    <params>
      <context>AnimationContext</context>
    </params>
  </viva.AnimationTransition.Read_x0028_AnimationContext_x0029_>
  <viva.AssetProcessor>
    <signature>viva.AssetProcessor</signature>
    <childcount>8</childcount>
    <type>Class</type>
    <name>AssetProcessor</name>
    <token>public class AssetProcessor </token>
    <scope>viva</scope>
  </viva.AssetProcessor>
  <viva.AssetProcessor.AssetProcessor_x0028_List_x003C_ImportRequest_x003E__x0029_>
    <signature>viva.AssetProcessor.AssetProcessor(List&lt;ImportRequest&gt;)</signature>
    <childcount>0</childcount>
    <type>Constructor</type>
    <name>AssetProcessor</name>
    <token>public  AssetProcessor(List&lt;ImportRequest&gt; _requests)</token>
    <scope>viva.AssetProcessor</scope>
    <params>
      <_requests>List&lt;ImportRequest&gt;</_requests>
    </params>
  </viva.AssetProcessor.AssetProcessor_x0028_List_x003C_ImportRequest_x003E__x0029_>
  <viva.AssetProcessor.ProcessAll_x0028_GenericCallback_x0029_>
    <signature>viva.AssetProcessor.ProcessAll(GenericCallback)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>ProcessAll</name>
    <token>public void ProcessAll(GenericCallback _onFinished=null)</token>
    <scope>viva.AssetProcessor</scope>
    <params>
      <_onFinished>GenericCallback</_onFinished>
    </params>
  </viva.AssetProcessor.ProcessAll_x0028_GenericCallback_x0029_>
  <viva.AssetUnpackHandler>
    <signature>viva.AssetUnpackHandler</signature>
    <childcount>5</childcount>
    <type>Class</type>
    <name>AssetUnpackHandler</name>
    <token>public class AssetUnpackHandler : MonoBehaviour </token>
    <scope>viva</scope>
  </viva.AssetUnpackHandler>
  <viva.AssetUnpackHandler.Handle_x0028_ImportRequest_x0029_>
    <signature>viva.AssetUnpackHandler.Handle(ImportRequest)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>Handle</name>
    <token>public void Handle(ImportRequest request)</token>
    <scope>viva.AssetUnpackHandler</scope>
    <params>
      <request>ImportRequest</request>
    </params>
  </viva.AssetUnpackHandler.Handle_x0028_ImportRequest_x0029_>
  <viva.AsyncUtil>
    <signature>viva.AsyncUtil</signature>
    <childcount>0</childcount>
    <type>Class</type>
    <name>AsyncUtil</name>
    <token>public static class AsyncUtil </token>
    <scope>viva</scope>
  </viva.AsyncUtil>
  <viva.BlackWhiteList>
    <signature>viva.BlackWhiteList</signature>
    <childcount>16</childcount>
    <type>Class</type>
    <name>BlackWhiteList</name>
    <token>public class BlackWhiteList : MonoBehaviour </token>
    <scope>viva</scope>
  </viva.BlackWhiteList>
  <viva.BlackWhiteList.StringListReturnFunc_x0028_List_x003C_string_x003E__x0029_>
    <signature>viva.BlackWhiteList.StringListReturnFunc(List&lt;string&gt;)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>StringListReturnFunc</name>
    <token>public delegate void StringListReturnFunc(List&lt;string&gt; result)</token>
    <scope>viva.BlackWhiteList</scope>
    <params>
      <result>List&lt;string&gt;</result>
    </params>
  </viva.BlackWhiteList.StringListReturnFunc_x0028_List_x003C_string_x003E__x0029_>
  <viva.BlackWhiteList.whitelist>
    <signature>viva.BlackWhiteList.whitelist</signature>
    <childcount>0</childcount>
    <type>Property</type>
    <name>whitelist</name>
    <token>public List&lt;string&gt; whitelist { get; set; }</token>
    <scope>viva.BlackWhiteList</scope>
  </viva.BlackWhiteList.whitelist>
  <viva.BlackWhiteList.SetupBlackWhiteList_x0028_string_x002C__x0020_string_x002C__x0020_List_x003C_string_x003E__x002C__x0020_List_x003C_string_x003E__x0029_>
    <signature>viva.BlackWhiteList.SetupBlackWhiteList(string, string, List&lt;string&gt;, List&lt;string&gt;)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>SetupBlackWhiteList</name>
    <token>public void SetupBlackWhiteList(string _instruction1, string _instruction2, List&lt;string&gt; _whitelist, List&lt;string&gt; _blacklist)</token>
    <scope>viva.BlackWhiteList</scope>
    <params>
      <_instruction1>string</_instruction1>
      <_instruction2>string</_instruction2>
      <_whitelist>List&lt;string&gt;</_whitelist>
      <_blacklist>List&lt;string&gt;</_blacklist>
    </params>
  </viva.BlackWhiteList.SetupBlackWhiteList_x0028_string_x002C__x0020_string_x002C__x0020_List_x003C_string_x003E__x002C__x0020_List_x003C_string_x003E__x0029_>
  <viva.BlackWhiteList.Add_x0028__x0029_>
    <signature>viva.BlackWhiteList.Add()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>Add</name>
    <token>public void Add()</token>
    <scope>viva.BlackWhiteList</scope>
  </viva.BlackWhiteList.Add_x0028__x0029_>
  <viva.BlackWhiteList.Remove_x0028__x0029_>
    <signature>viva.BlackWhiteList.Remove()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>Remove</name>
    <token>public void Remove()</token>
    <scope>viva.BlackWhiteList</scope>
  </viva.BlackWhiteList.Remove_x0028__x0029_>
  <viva.BufferUtil>
    <signature>viva.BufferUtil</signature>
    <childcount>18</childcount>
    <type>Class</type>
    <name>BufferUtil</name>
    <token>public class BufferUtil </token>
    <scope>viva</scope>
  </viva.BufferUtil>
  <viva.BufferUtil.manifestHeaderCount>
    <signature>viva.BufferUtil.manifestHeaderCount</signature>
    <childcount>0</childcount>
    <type>Property</type>
    <name>manifestHeaderCount</name>
    <token>public static int manifestHeaderCount { get; }</token>
    <scope>viva.BufferUtil</scope>
  </viva.BufferUtil.manifestHeaderCount>
  <viva.BufferUtil.ExtractHeaderError_x0028_NativeArray_x003C_byte_x003E__x002C__x0020_string_x0029_>
    <signature>viva.BufferUtil.ExtractHeaderError(NativeArray&lt;byte&gt;, string)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>ExtractHeaderError</name>
    <token>public static byte[] ExtractHeaderError(NativeArray&lt;byte&gt; buffer, out string error)</token>
    <scope>viva.BufferUtil</scope>
    <params>
      <buffer>NativeArray&lt;byte&gt;</buffer>
      <error>string</error>
    </params>
  </viva.BufferUtil.ExtractHeaderError_x0028_NativeArray_x003C_byte_x003E__x002C__x0020_string_x0029_>
  <viva.BufferUtil.IncreaseHeaderEntry_x0028_NativeArray_x003C_byte_x003E__x002C__x0020_int_x002C__x0020_int_x002C__x0020_int_x0029_>
    <signature>viva.BufferUtil.IncreaseHeaderEntry(NativeArray&lt;byte&gt;, int, int, int)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>IncreaseHeaderEntry</name>
    <token>public static void IncreaseHeaderEntry(NativeArray&lt;byte&gt; result, ref int index, int type, int amount)</token>
    <scope>viva.BufferUtil</scope>
    <params>
      <result>NativeArray&lt;byte&gt;</result>
      <index>int</index>
      <type>int</type>
      <amount>int</amount>
    </params>
  </viva.BufferUtil.IncreaseHeaderEntry_x0028_NativeArray_x003C_byte_x003E__x002C__x0020_int_x002C__x0020_int_x002C__x0020_int_x0029_>
  <viva.BufferUtil.GetManifestHeader_x0028_int_x002C__x0020_NativeArray_x003C_byte_x003E__x0029_>
    <signature>viva.BufferUtil.GetManifestHeader(int, NativeArray&lt;byte&gt;)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>GetManifestHeader</name>
    <token>public static int GetManifestHeader(int type, NativeArray&lt;byte&gt; array)</token>
    <scope>viva.BufferUtil</scope>
    <params>
      <type>int</type>
      <array>NativeArray&lt;byte&gt;</array>
    </params>
  </viva.BufferUtil.GetManifestHeader_x0028_int_x002C__x0020_NativeArray_x003C_byte_x003E__x0029_>
  <viva.BufferUtil.GetManifestHeader_x0028_int_x002C__x0020_byte_x005B__x005D__x0029_>
    <signature>viva.BufferUtil.GetManifestHeader(int, byte[])</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>GetManifestHeader</name>
    <token>public static int GetManifestHeader(int type, byte[] array)</token>
    <scope>viva.BufferUtil</scope>
    <params>
      <type>int</type>
      <array>byte[]</array>
    </params>
  </viva.BufferUtil.GetManifestHeader_x0028_int_x002C__x0020_byte_x005B__x005D__x0029_>
  <viva.BufferUtil.InitializeHeader_x0028_NativeArray_x003C_byte_x003E__x002C__x0020_int_x002C__x0020_int_x0029_>
    <signature>viva.BufferUtil.InitializeHeader(NativeArray&lt;byte&gt;, int, int)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>InitializeHeader</name>
    <token>public static void InitializeHeader(NativeArray&lt;byte&gt; result, ref int index, int headerCount)</token>
    <scope>viva.BufferUtil</scope>
    <params>
      <result>NativeArray&lt;byte&gt;</result>
      <index>int</index>
      <headerCount>int</headerCount>
    </params>
  </viva.BufferUtil.InitializeHeader_x0028_NativeArray_x003C_byte_x003E__x002C__x0020_int_x002C__x0020_int_x0029_>
  <viva.BufferUtil.WriteByte_x0028_NativeArray_x003C_byte_x003E__x002C__x0020_int_x002C__x0020_byte_x0029_>
    <signature>viva.BufferUtil.WriteByte(NativeArray&lt;byte&gt;, int, byte)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>WriteByte</name>
    <token>public static void WriteByte(NativeArray&lt;byte&gt; result, ref int index, byte b)</token>
    <scope>viva.BufferUtil</scope>
    <params>
      <result>NativeArray&lt;byte&gt;</result>
      <index>int</index>
      <b>byte</b>
    </params>
  </viva.BufferUtil.WriteByte_x0028_NativeArray_x003C_byte_x003E__x002C__x0020_int_x002C__x0020_byte_x0029_>
  <viva.BufferUtil.WriteBytes_x0028_NativeArray_x003C_byte_x003E__x002C__x0020_int_x002C__x0020_byte_x005B__x005D__x0029_>
    <signature>viva.BufferUtil.WriteBytes(NativeArray&lt;byte&gt;, int, byte[])</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>WriteBytes</name>
    <token>public static void WriteBytes(NativeArray&lt;byte&gt; result, ref int index, byte[] bytes)</token>
    <scope>viva.BufferUtil</scope>
    <params>
      <result>NativeArray&lt;byte&gt;</result>
      <index>int</index>
      <bytes>byte[]</bytes>
    </params>
  </viva.BufferUtil.WriteBytes_x0028_NativeArray_x003C_byte_x003E__x002C__x0020_int_x002C__x0020_byte_x005B__x005D__x0029_>
  <viva.BufferUtil.WriteInt_x0028_NativeArray_x003C_byte_x003E__x002C__x0020_int_x002C__x0020_int_x0029_>
    <signature>viva.BufferUtil.WriteInt(NativeArray&lt;byte&gt;, int, int)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>WriteInt</name>
    <token>public static void WriteInt(NativeArray&lt;byte&gt; result, ref int index, int i)</token>
    <scope>viva.BufferUtil</scope>
    <params>
      <result>NativeArray&lt;byte&gt;</result>
      <index>int</index>
      <i>int</i>
    </params>
  </viva.BufferUtil.WriteInt_x0028_NativeArray_x003C_byte_x003E__x002C__x0020_int_x002C__x0020_int_x0029_>
  <viva.BufferUtil.WriteFloat_x0028_NativeArray_x003C_byte_x003E__x002C__x0020_int_x002C__x0020_float_x0029_>
    <signature>viva.BufferUtil.WriteFloat(NativeArray&lt;byte&gt;, int, float)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>WriteFloat</name>
    <token>public static void WriteFloat(NativeArray&lt;byte&gt; result, ref int index, float f)</token>
    <scope>viva.BufferUtil</scope>
    <params>
      <result>NativeArray&lt;byte&gt;</result>
      <index>int</index>
      <f>float</f>
    </params>
  </viva.BufferUtil.WriteFloat_x0028_NativeArray_x003C_byte_x003E__x002C__x0020_int_x002C__x0020_float_x0029_>
  <viva.BufferUtil.WriteLong_x0028_NativeArray_x003C_byte_x003E__x002C__x0020_int_x002C__x0020_long_x0029_>
    <signature>viva.BufferUtil.WriteLong(NativeArray&lt;byte&gt;, int, long)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>WriteLong</name>
    <token>public static void WriteLong(NativeArray&lt;byte&gt; result, ref int index, long l)</token>
    <scope>viva.BufferUtil</scope>
    <params>
      <result>NativeArray&lt;byte&gt;</result>
      <index>int</index>
      <l>long</l>
    </params>
  </viva.BufferUtil.WriteLong_x0028_NativeArray_x003C_byte_x003E__x002C__x0020_int_x002C__x0020_long_x0029_>
  <viva.BufferUtil.WriteFloatArray_x0028_NativeArray_x003C_byte_x003E__x002C__x0020_int_x002C__x0020_float_x005B__x005D__x0029_>
    <signature>viva.BufferUtil.WriteFloatArray(NativeArray&lt;byte&gt;, int, float[])</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>WriteFloatArray</name>
    <token>public static void WriteFloatArray(NativeArray&lt;byte&gt; result, ref int index, float[] array)</token>
    <scope>viva.BufferUtil</scope>
    <params>
      <result>NativeArray&lt;byte&gt;</result>
      <index>int</index>
      <array>float[]</array>
    </params>
  </viva.BufferUtil.WriteFloatArray_x0028_NativeArray_x003C_byte_x003E__x002C__x0020_int_x002C__x0020_float_x005B__x005D__x0029_>
  <viva.BufferUtil.WriteBoolArrayAsByteArray_x0028_NativeArray_x003C_byte_x003E__x002C__x0020_int_x002C__x0020_bool_x005B__x005D__x0029_>
    <signature>viva.BufferUtil.WriteBoolArrayAsByteArray(NativeArray&lt;byte&gt;, int, bool[])</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>WriteBoolArrayAsByteArray</name>
    <token>public static void WriteBoolArrayAsByteArray(NativeArray&lt;byte&gt; result, ref int index, bool[] array)</token>
    <scope>viva.BufferUtil</scope>
    <params>
      <result>NativeArray&lt;byte&gt;</result>
      <index>int</index>
      <array>bool[]</array>
    </params>
  </viva.BufferUtil.WriteBoolArrayAsByteArray_x0028_NativeArray_x003C_byte_x003E__x002C__x0020_int_x002C__x0020_bool_x005B__x005D__x0029_>
  <viva.BufferUtil.WriteDoubleArrayAsFloatArray_x0028_NativeArray_x003C_byte_x003E__x002C__x0020_int_x002C__x0020_double_x005B__x005D__x0029_>
    <signature>viva.BufferUtil.WriteDoubleArrayAsFloatArray(NativeArray&lt;byte&gt;, int, double[])</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>WriteDoubleArrayAsFloatArray</name>
    <token>public static void WriteDoubleArrayAsFloatArray(NativeArray&lt;byte&gt; result, ref int index, double[] array)</token>
    <scope>viva.BufferUtil</scope>
    <params>
      <result>NativeArray&lt;byte&gt;</result>
      <index>int</index>
      <array>double[]</array>
    </params>
  </viva.BufferUtil.WriteDoubleArrayAsFloatArray_x0028_NativeArray_x003C_byte_x003E__x002C__x0020_int_x002C__x0020_double_x005B__x005D__x0029_>
  <viva.BufferUtil.WriteFloatList_x0028_NativeArray_x003C_byte_x003E__x002C__x0020_int_x002C__x0020_List_x003C_float_x003E__x0029_>
    <signature>viva.BufferUtil.WriteFloatList(NativeArray&lt;byte&gt;, int, List&lt;float&gt;)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>WriteFloatList</name>
    <token>public static void WriteFloatList(NativeArray&lt;byte&gt; result, ref int index, List&lt;float&gt; list)</token>
    <scope>viva.BufferUtil</scope>
    <params>
      <result>NativeArray&lt;byte&gt;</result>
      <index>int</index>
      <list>List&lt;float&gt;</list>
    </params>
  </viva.BufferUtil.WriteFloatList_x0028_NativeArray_x003C_byte_x003E__x002C__x0020_int_x002C__x0020_List_x003C_float_x003E__x0029_>
  <viva.BufferUtil.WriteIntArray_x0028_NativeArray_x003C_byte_x003E__x002C__x0020_int_x002C__x0020_int_x005B__x005D__x0029_>
    <signature>viva.BufferUtil.WriteIntArray(NativeArray&lt;byte&gt;, int, int[])</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>WriteIntArray</name>
    <token>public static void WriteIntArray(NativeArray&lt;byte&gt; result, ref int index, int[] array)</token>
    <scope>viva.BufferUtil</scope>
    <params>
      <result>NativeArray&lt;byte&gt;</result>
      <index>int</index>
      <array>int[]</array>
    </params>
  </viva.BufferUtil.WriteIntArray_x0028_NativeArray_x003C_byte_x003E__x002C__x0020_int_x002C__x0020_int_x005B__x005D__x0029_>
  <viva.BufferUtil.WriteIntList_x0028_NativeArray_x003C_byte_x003E__x002C__x0020_int_x002C__x0020_List_x003C_int_x003E__x0029_>
    <signature>viva.BufferUtil.WriteIntList(NativeArray&lt;byte&gt;, int, List&lt;int&gt;)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>WriteIntList</name>
    <token>public static void WriteIntList(NativeArray&lt;byte&gt; result, ref int index, List&lt;int&gt; array)</token>
    <scope>viva.BufferUtil</scope>
    <params>
      <result>NativeArray&lt;byte&gt;</result>
      <index>int</index>
      <array>List&lt;int&gt;</array>
    </params>
  </viva.BufferUtil.WriteIntList_x0028_NativeArray_x003C_byte_x003E__x002C__x0020_int_x002C__x0020_List_x003C_int_x003E__x0029_>
  <viva.BufferUtil.WriteString_x0028_NativeArray_x003C_byte_x003E__x002C__x0020_int_x002C__x0020_string_x0029_>
    <signature>viva.BufferUtil.WriteString(NativeArray&lt;byte&gt;, int, string)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>WriteString</name>
    <token>public static void WriteString(NativeArray&lt;byte&gt; result, ref int index, string s)</token>
    <scope>viva.BufferUtil</scope>
    <params>
      <result>NativeArray&lt;byte&gt;</result>
      <index>int</index>
      <s>string</s>
    </params>
  </viva.BufferUtil.WriteString_x0028_NativeArray_x003C_byte_x003E__x002C__x0020_int_x002C__x0020_string_x0029_>
  <viva.BuiltInAssetManager>
    <signature>viva.BuiltInAssetManager</signature>
    <childcount>4</childcount>
    <type>Class</type>
    <name>BuiltInAssetManager</name>
    <token>public class BuiltInAssetManager : MonoBehaviour </token>
    <scope>viva</scope>
  </viva.BuiltInAssetManager>
  <viva.BuiltInAssetManager.main>
    <signature>viva.BuiltInAssetManager.main</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>main</name>
    <token>public static BuiltInAssetManager main </token>
    <scope>viva.BuiltInAssetManager</scope>
  </viva.BuiltInAssetManager.main>
  <viva.BuiltInAssetManager.Awake_x0028__x0029_>
    <signature>viva.BuiltInAssetManager.Awake()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>Awake</name>
    <token>public void Awake()</token>
    <scope>viva.BuiltInAssetManager</scope>
  </viva.BuiltInAssetManager.Awake_x0028__x0029_>
  <viva.BuiltInAssetManager.SetupBuiltInAnimationSets_x0028_AnimationSet_x002C__x0020_Model_x0029_>
    <signature>viva.BuiltInAssetManager.SetupBuiltInAnimationSets(AnimationSet, Model)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>SetupBuiltInAnimationSets</name>
    <token>public void SetupBuiltInAnimationSets(AnimationSet animationSet, Model model)</token>
    <scope>viva.BuiltInAssetManager</scope>
    <params>
      <animationSet>AnimationSet</animationSet>
      <model>Model</model>
    </params>
  </viva.BuiltInAssetManager.SetupBuiltInAnimationSets_x0028_AnimationSet_x002C__x0020_Model_x0029_>
  <viva.BuiltInVivaObject>
    <signature>viva.BuiltInVivaObject</signature>
    <childcount>1</childcount>
    <type>Class</type>
    <name>BuiltInVivaObject</name>
    <token>[CreateAssetMenu(fileName = "file", menuName = "VivaEditable/Built-In VivaEditable", order = 1)]
public class BuiltInVivaObject : ScriptableObject </token>
    <scope>viva</scope>
  </viva.BuiltInVivaObject>
  <viva.BuiltInVivaObject.fileData>
    <signature>viva.BuiltInVivaObject.fileData</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>fileData</name>
    <token>public string fileData </token>
    <scope>viva.BuiltInVivaObject</scope>
  </viva.BuiltInVivaObject.fileData>
  <viva.ButtonToggleSet>
    <signature>viva.ButtonToggleSet</signature>
    <childcount>6</childcount>
    <type>Class</type>
    <name>ButtonToggleSet</name>
    <token>public class ButtonToggleSet : MonoBehaviour </token>
    <scope>viva</scope>
  </viva.ButtonToggleSet>
  <viva.ButtonToggleSet.Select_x0028_int_x0029_>
    <signature>viva.ButtonToggleSet.Select(int)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>Select</name>
    <token>public void Select(int index)</token>
    <scope>viva.ButtonToggleSet</scope>
    <params>
      <index>int</index>
    </params>
  </viva.ButtonToggleSet.Select_x0028_int_x0029_>
  <viva.ByteBufferedReader>
    <signature>viva.ByteBufferedReader</signature>
    <childcount>22</childcount>
    <type>Class</type>
    <name>ByteBufferedReader</name>
    <token>public class ByteBufferedReader </token>
    <scope>viva</scope>
  </viva.ByteBufferedReader>
  <viva.ByteBufferedReader.index>
    <signature>viva.ByteBufferedReader.index</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>index</name>
    <token>public int index </token>
    <scope>viva.ByteBufferedReader</scope>
  </viva.ByteBufferedReader.index>
  <viva.ByteBufferedReader.finished>
    <signature>viva.ByteBufferedReader.finished</signature>
    <childcount>0</childcount>
    <type>Property</type>
    <name>finished</name>
    <token>public bool finished { get; }</token>
    <scope>viva.ByteBufferedReader</scope>
  </viva.ByteBufferedReader.finished>
  <viva.ByteBufferedReader.bufferLength>
    <signature>viva.ByteBufferedReader.bufferLength</signature>
    <childcount>0</childcount>
    <type>Property</type>
    <name>bufferLength</name>
    <token>public int bufferLength { get; }</token>
    <scope>viva.ByteBufferedReader</scope>
  </viva.ByteBufferedReader.bufferLength>
  <viva.ByteBufferedReader.nextType>
    <signature>viva.ByteBufferedReader.nextType</signature>
    <childcount>0</childcount>
    <type>Property</type>
    <name>nextType</name>
    <token>public FBXRequest.Read nextType { get; set; }</token>
    <scope>viva.ByteBufferedReader</scope>
  </viva.ByteBufferedReader.nextType>
  <viva.ByteBufferedReader.ByteBufferedReader_x0028_byte_x005B__x005D__x0029_>
    <signature>viva.ByteBufferedReader.ByteBufferedReader(byte[])</signature>
    <childcount>0</childcount>
    <type>Constructor</type>
    <name>ByteBufferedReader</name>
    <token>public  ByteBufferedReader(byte[] _buffer)</token>
    <scope>viva.ByteBufferedReader</scope>
    <params>
      <_buffer>byte[]</_buffer>
    </params>
  </viva.ByteBufferedReader.ByteBufferedReader_x0028_byte_x005B__x005D__x0029_>
  <viva.ByteBufferedReader.ReadNextType_x0028__x0029_>
    <signature>viva.ByteBufferedReader.ReadNextType()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>ReadNextType</name>
    <token>public void ReadNextType()</token>
    <scope>viva.ByteBufferedReader</scope>
  </viva.ByteBufferedReader.ReadNextType_x0028__x0029_>
  <viva.ByteBufferedReader.ReadNextByte_x0028__x0029_>
    <signature>viva.ByteBufferedReader.ReadNextByte()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>ReadNextByte</name>
    <token>public byte ReadNextByte()</token>
    <scope>viva.ByteBufferedReader</scope>
  </viva.ByteBufferedReader.ReadNextByte_x0028__x0029_>
  <viva.ByteBufferedReader.ReadNextInt_x0028__x0029_>
    <signature>viva.ByteBufferedReader.ReadNextInt()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>ReadNextInt</name>
    <token>public int ReadNextInt()</token>
    <scope>viva.ByteBufferedReader</scope>
  </viva.ByteBufferedReader.ReadNextInt_x0028__x0029_>
  <viva.ByteBufferedReader.ReadNextIntArray_x0028__x0029_>
    <signature>viva.ByteBufferedReader.ReadNextIntArray()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>ReadNextIntArray</name>
    <token>public int[] ReadNextIntArray()</token>
    <scope>viva.ByteBufferedReader</scope>
  </viva.ByteBufferedReader.ReadNextIntArray_x0028__x0029_>
  <viva.ByteBufferedReader.ReadNextFloatArray_x0028__x0029_>
    <signature>viva.ByteBufferedReader.ReadNextFloatArray()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>ReadNextFloatArray</name>
    <token>public float[] ReadNextFloatArray()</token>
    <scope>viva.ByteBufferedReader</scope>
  </viva.ByteBufferedReader.ReadNextFloatArray_x0028__x0029_>
  <viva.ByteBufferedReader.ReadNextByteArray_x0028__x0029_>
    <signature>viva.ByteBufferedReader.ReadNextByteArray()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>ReadNextByteArray</name>
    <token>public byte[] ReadNextByteArray()</token>
    <scope>viva.ByteBufferedReader</scope>
  </viva.ByteBufferedReader.ReadNextByteArray_x0028__x0029_>
  <viva.ByteBufferedReader.ReadNextFloatArrayAsMatrix_x0028__x0029_>
    <signature>viva.ByteBufferedReader.ReadNextFloatArrayAsMatrix()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>ReadNextFloatArrayAsMatrix</name>
    <token>public Matrix4x4 ReadNextFloatArrayAsMatrix()</token>
    <scope>viva.ByteBufferedReader</scope>
  </viva.ByteBufferedReader.ReadNextFloatArrayAsMatrix_x0028__x0029_>
  <viva.ByteBufferedReader.ReadNextFloatArrayAsTransform_x0028_Vector3_x002C__x0020_Vector3_x002C__x0020_Vector3_x0029_>
    <signature>viva.ByteBufferedReader.ReadNextFloatArrayAsTransform(Vector3, Vector3, Vector3)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>ReadNextFloatArrayAsTransform</name>
    <token>public void ReadNextFloatArrayAsTransform(out Vector3 pos, out Vector3 euler, out Vector3 scale)</token>
    <scope>viva.ByteBufferedReader</scope>
    <params>
      <pos>Vector3</pos>
      <euler>Vector3</euler>
      <scale>Vector3</scale>
    </params>
  </viva.ByteBufferedReader.ReadNextFloatArrayAsTransform_x0028_Vector3_x002C__x0020_Vector3_x002C__x0020_Vector3_x0029_>
  <viva.ByteBufferedReader.ReadNextFloatArrayAsVector3Array_x0028__x0029_>
    <signature>viva.ByteBufferedReader.ReadNextFloatArrayAsVector3Array()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>ReadNextFloatArrayAsVector3Array</name>
    <token>public Vector3[] ReadNextFloatArrayAsVector3Array()</token>
    <scope>viva.ByteBufferedReader</scope>
  </viva.ByteBufferedReader.ReadNextFloatArrayAsVector3Array_x0028__x0029_>
  <viva.ByteBufferedReader.ReadNextFloatArrayAsVector2Array_x0028__x0029_>
    <signature>viva.ByteBufferedReader.ReadNextFloatArrayAsVector2Array()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>ReadNextFloatArrayAsVector2Array</name>
    <token>public Vector2[] ReadNextFloatArrayAsVector2Array()</token>
    <scope>viva.ByteBufferedReader</scope>
  </viva.ByteBufferedReader.ReadNextFloatArrayAsVector2Array_x0028__x0029_>
  <viva.ByteBufferedReader.ReadNextFloat_x0028__x0029_>
    <signature>viva.ByteBufferedReader.ReadNextFloat()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>ReadNextFloat</name>
    <token>public float ReadNextFloat()</token>
    <scope>viva.ByteBufferedReader</scope>
  </viva.ByteBufferedReader.ReadNextFloat_x0028__x0029_>
  <viva.ByteBufferedReader.ReadNextFloatAsVector3_x0028__x0029_>
    <signature>viva.ByteBufferedReader.ReadNextFloatAsVector3()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>ReadNextFloatAsVector3</name>
    <token>public Vector3 ReadNextFloatAsVector3()</token>
    <scope>viva.ByteBufferedReader</scope>
  </viva.ByteBufferedReader.ReadNextFloatAsVector3_x0028__x0029_>
  <viva.ByteBufferedReader.ReadNextLong_x0028__x0029_>
    <signature>viva.ByteBufferedReader.ReadNextLong()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>ReadNextLong</name>
    <token>public long ReadNextLong()</token>
    <scope>viva.ByteBufferedReader</scope>
  </viva.ByteBufferedReader.ReadNextLong_x0028__x0029_>
  <viva.ByteBufferedReader.ReadNextString_x0028__x0029_>
    <signature>viva.ByteBufferedReader.ReadNextString()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>ReadNextString</name>
    <token>public string ReadNextString()</token>
    <scope>viva.ByteBufferedReader</scope>
  </viva.ByteBufferedReader.ReadNextString_x0028__x0029_>
  <viva.ByteBufferedReader.ReadNewGameObject_x0028__x0029_>
    <signature>viva.ByteBufferedReader.ReadNewGameObject()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>ReadNewGameObject</name>
    <token>public GameObject ReadNewGameObject()</token>
    <scope>viva.ByteBufferedReader</scope>
  </viva.ByteBufferedReader.ReadNewGameObject_x0028__x0029_>
  <viva.ByteBufferedReader.ReadNewGameObjectInfo_x0028_Vector3_x002C__x0020_Vector3_x002C__x0020_Vector3_x0029_>
    <signature>viva.ByteBufferedReader.ReadNewGameObjectInfo(Vector3, Vector3, Vector3)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>ReadNewGameObjectInfo</name>
    <token>public void ReadNewGameObjectInfo(out Vector3 pos, out Vector3 euler, out Vector3 scale)</token>
    <scope>viva.ByteBufferedReader</scope>
    <params>
      <pos>Vector3</pos>
      <euler>Vector3</euler>
      <scale>Vector3</scale>
    </params>
  </viva.ByteBufferedReader.ReadNewGameObjectInfo_x0028_Vector3_x002C__x0020_Vector3_x002C__x0020_Vector3_x0029_>
  <viva.Character>
    <signature>viva.Character</signature>
    <childcount>24</childcount>
    <type>Class</type>
    <name>Character</name>
    <token>public partial class Character : VivaEditable </token>
    <scope>viva</scope>
  </viva.Character>
  <viva.Character.activeCharacterCount>
    <signature>viva.Character.activeCharacterCount</signature>
    <childcount>0</childcount>
    <type>Property</type>
    <name>activeCharacterCount</name>
    <token>public static int activeCharacterCount { get; }</token>
    <scope>viva.Character</scope>
  </viva.Character.activeCharacterCount>
  <viva.Character.GetActiveCharacter_x0028_int_x0029_>
    <signature>viva.Character.GetActiveCharacter(int)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>GetActiveCharacter</name>
    <token>public static Character GetActiveCharacter(int index)</token>
    <scope>viva.Character</scope>
    <params>
      <index>int</index>
    </params>
  </viva.Character.GetActiveCharacter_x0028_int_x0029_>
  <viva.Character.root>
    <signature>viva.Character.root</signature>
    <childcount>0</childcount>
    <type>Property</type>
    <name>root</name>
    <token>public static string root { get; }</token>
    <scope>viva.Character</scope>
  </viva.Character.root>
  <viva.Character.name>
    <signature>viva.Character.name</signature>
    <childcount>0</childcount>
    <type>Property</type>
    <name>name</name>
    <token>public string name { get; set; }</token>
    <scope>viva.Character</scope>
  </viva.Character.name>
  <viva.Character.model>
    <signature>viva.Character.model</signature>
    <childcount>0</childcount>
    <type>Property</type>
    <name>model</name>
    <token>public Model model { get; set; }</token>
    <scope>viva.Character</scope>
  </viva.Character.model>
  <viva.Character.autonomy>
    <signature>viva.Character.autonomy</signature>
    <childcount>0</childcount>
    <type>Property</type>
    <name>autonomy</name>
    <token>public Autonomy autonomy { get; set; }</token>
    <scope>viva.Character</scope>
  </viva.Character.autonomy>
  <viva.Character.scriptManager>
    <signature>viva.Character.scriptManager</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>scriptManager</name>
    <token>public readonly ScriptManager scriptManager = </token>
    <scope>viva.Character</scope>
  </viva.Character.scriptManager>
  <viva.Character.ragdoll>
    <signature>viva.Character.ragdoll</signature>
    <childcount>0</childcount>
    <type>Property</type>
    <name>ragdoll</name>
    <token>public Ragdoll ragdoll { get; set; }</token>
    <scope>viva.Character</scope>
  </viva.Character.ragdoll>
  <viva.Character.animationSet>
    <signature>viva.Character.animationSet</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>animationSet</name>
    <token>public readonly AnimationSet animationSet = </token>
    <scope>viva.Character</scope>
  </viva.Character.animationSet>
  <viva.Character.blinkBlendshape>
    <signature>viva.Character.blinkBlendshape</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>blinkBlendshape</name>
    <token>public string blinkBlendshape </token>
    <scope>viva.Character</scope>
  </viva.Character.blinkBlendshape>
  <viva.Character.height>
    <signature>viva.Character.height</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>height</name>
    <token>public float height </token>
    <scope>viva.Character</scope>
  </viva.Character.height>
  <viva.Character.headLookAt>
    <signature>viva.Character.headLookAt</signature>
    <childcount>0</childcount>
    <type>Property</type>
    <name>headLookAt</name>
    <token>public HeadLookAt headLookAt { get; set; }</token>
    <scope>viva.Character</scope>
  </viva.Character.headLookAt>
  <viva.Character.Character_x0028_Model_x002C__x0020_string_x0029_>
    <signature>viva.Character.Character(Model, string)</signature>
    <childcount>0</childcount>
    <type>Constructor</type>
    <name>Character</name>
    <token>public  Character(Model _model, string _name)</token>
    <scope>viva.Character</scope>
    <params>
      <_model>Model</_model>
      <_name>string</_name>
    </params>
  </viva.Character.Character_x0028_Model_x002C__x0020_string_x0029_>
  <viva.Character.Save_x0028_string_x0029_>
    <signature>viva.Character.Save(string)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>Save</name>
    <token>public void Save(string relativeFilepath)</token>
    <scope>viva.Character</scope>
    <params>
      <relativeFilepath>string</relativeFilepath>
    </params>
  </viva.Character.Save_x0028_string_x0029_>
  <viva.Character.OnCreateMenuSelected_x0028__x0029_>
    <signature>viva.Character.OnCreateMenuSelected()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>OnCreateMenuSelected</name>
    <token>public override void OnCreateMenuSelected()</token>
    <scope>viva.Character</scope>
  </viva.Character.OnCreateMenuSelected_x0028__x0029_>
  <viva.Character.OnCreateMenuDeselected_x0028__x0029_>
    <signature>viva.Character.OnCreateMenuDeselected()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>OnCreateMenuDeselected</name>
    <token>public override void OnCreateMenuDeselected()</token>
    <scope>viva.Character</scope>
  </viva.Character.OnCreateMenuDeselected_x0028__x0029_>
  <viva.Character.GetInfoHeaderTitleText_x0028__x0029_>
    <signature>viva.Character.GetInfoHeaderTitleText()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>GetInfoHeaderTitleText</name>
    <token>public override string GetInfoHeaderTitleText()</token>
    <scope>viva.Character</scope>
  </viva.Character.GetInfoHeaderTitleText_x0028__x0029_>
  <viva.Character.GetInfoHeaderText_x0028__x0029_>
    <signature>viva.Character.GetInfoHeaderText()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>GetInfoHeaderText</name>
    <token>public override string GetInfoHeaderText()</token>
    <scope>viva.Character</scope>
  </viva.Character.GetInfoHeaderText_x0028__x0029_>
  <viva.Character.GetInfoBodyContentText_x0028__x0029_>
    <signature>viva.Character.GetInfoBodyContentText()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>GetInfoBodyContentText</name>
    <token>public override string GetInfoBodyContentText()</token>
    <scope>viva.Character</scope>
  </viva.Character.GetInfoBodyContentText_x0028__x0029_>
  <viva.Character.GenerateThumbnail_x0028_Thumbnail_x0029_>
    <signature>viva.Character.GenerateThumbnail(Thumbnail)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>GenerateThumbnail</name>
    <token>public override void GenerateThumbnail(Thumbnail thumbnail)</token>
    <scope>viva.Character</scope>
    <params>
      <thumbnail>Thumbnail</thumbnail>
    </params>
  </viva.Character.GenerateThumbnail_x0028_Thumbnail_x0029_>
  <viva.Character.OnScriptFailure_x0028__x0029_>
    <signature>viva.Character.OnScriptFailure()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>OnScriptFailure</name>
    <token>public void OnScriptFailure()</token>
    <scope>viva.Character</scope>
  </viva.Character.OnScriptFailure_x0028__x0029_>
  <viva.Character.OnScriptSuccess_x0028__x0029_>
    <signature>viva.Character.OnScriptSuccess()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>OnScriptSuccess</name>
    <token>public void OnScriptSuccess()</token>
    <scope>viva.Character</scope>
  </viva.Character.OnScriptSuccess_x0028__x0029_>
  <viva.Character.CreateRagdoll_x0028__x0029_>
    <signature>viva.Character.CreateRagdoll()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>CreateRagdoll</name>
    <token>public void CreateRagdoll()</token>
    <scope>viva.Character</scope>
  </viva.Character.CreateRagdoll_x0028__x0029_>
  <viva.CharacterFile>
    <signature>viva.CharacterFile</signature>
    <childcount>13</childcount>
    <type>Class</type>
    <name>CharacterFile</name>
    <token>[System.Serializable]
public class CharacterFile </token>
    <scope>viva</scope>
  </viva.CharacterFile>
  <viva.CharacterFile.name>
    <signature>viva.CharacterFile.name</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>name</name>
    <token>public string name </token>
    <scope>viva.CharacterFile</scope>
  </viva.CharacterFile.name>
  <viva.CharacterFile.fbx>
    <signature>viva.CharacterFile.fbx</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>fbx</name>
    <token>public string fbx </token>
    <scope>viva.CharacterFile</scope>
  </viva.CharacterFile.fbx>
  <viva.CharacterFile.modelName>
    <signature>viva.CharacterFile.modelName</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>modelName</name>
    <token>public string modelName </token>
    <scope>viva.CharacterFile</scope>
  </viva.CharacterFile.modelName>
  <viva.CharacterFile.hipHeight>
    <signature>viva.CharacterFile.hipHeight</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>hipHeight</name>
    <token>public float hipHeight </token>
    <scope>viva.CharacterFile</scope>
  </viva.CharacterFile.hipHeight>
  <viva.CharacterFile.boneBindings>
    <signature>viva.CharacterFile.boneBindings</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>boneBindings</name>
    <token>public string[] boneBindings </token>
    <scope>viva.CharacterFile</scope>
  </viva.CharacterFile.boneBindings>
  <viva.CharacterFile.scripts>
    <signature>viva.CharacterFile.scripts</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>scripts</name>
    <token>public string[] scripts </token>
    <scope>viva.CharacterFile</scope>
  </viva.CharacterFile.scripts>
  <viva.CharacterFile.thumbnailResolution>
    <signature>viva.CharacterFile.thumbnailResolution</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>thumbnailResolution</name>
    <token>public int thumbnailResolution </token>
    <scope>viva.CharacterFile</scope>
  </viva.CharacterFile.thumbnailResolution>
  <viva.CharacterFile.textures>
    <signature>viva.CharacterFile.textures</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>textures</name>
    <token>public string[] textures </token>
    <scope>viva.CharacterFile</scope>
  </viva.CharacterFile.textures>
  <viva.CharacterFile.blinkBlendshape>
    <signature>viva.CharacterFile.blinkBlendshape</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>blinkBlendshape</name>
    <token>public string blinkBlendshape </token>
    <scope>viva.CharacterFile</scope>
  </viva.CharacterFile.blinkBlendshape>
  <viva.CharacterFile.thumbnailTexData>
    <signature>viva.CharacterFile.thumbnailTexData</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>thumbnailTexData</name>
    <token>public string thumbnailTexData </token>
    <scope>viva.CharacterFile</scope>
  </viva.CharacterFile.thumbnailTexData>
  <viva.CharacterFile.height>
    <signature>viva.CharacterFile.height</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>height</name>
    <token>public float height </token>
    <scope>viva.CharacterFile</scope>
  </viva.CharacterFile.height>
  <viva.CharacterFile.CharacterFile_x0028_Character_x0029_>
    <signature>viva.CharacterFile.CharacterFile(Character)</signature>
    <childcount>0</childcount>
    <type>Constructor</type>
    <name>CharacterFile</name>
    <token>public  CharacterFile(Character character)</token>
    <scope>viva.CharacterFile</scope>
    <params>
      <character>Character</character>
    </params>
  </viva.CharacterFile.CharacterFile_x0028_Character_x0029_>
  <viva.CharacterFile.CreateThumbnailTexture_x0028__x0029_>
    <signature>viva.CharacterFile.CreateThumbnailTexture()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>CreateThumbnailTexture</name>
    <token>public Texture2D CreateThumbnailTexture()</token>
    <scope>viva.CharacterFile</scope>
  </viva.CharacterFile.CreateThumbnailTexture_x0028__x0029_>
  <viva.CharacterEntry>
    <signature>viva.CharacterEntry</signature>
    <childcount>4</childcount>
    <type>Class</type>
    <name>CharacterEntry</name>
    <token>public class CharacterEntry : MonoBehaviour </token>
    <scope>viva</scope>
  </viva.CharacterEntry>
  <viva.CharacterEntry.button>
    <signature>viva.CharacterEntry.button</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>button</name>
    <token>[SerializeField]
public Button button </token>
    <scope>viva.CharacterEntry</scope>
  </viva.CharacterEntry.button>
  <viva.CharacterEntry.thumbnail>
    <signature>viva.CharacterEntry.thumbnail</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>thumbnail</name>
    <token>[SerializeField]
public Image thumbnail </token>
    <scope>viva.CharacterEntry</scope>
  </viva.CharacterEntry.thumbnail>
  <viva.CharacterEntry.label>
    <signature>viva.CharacterEntry.label</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>label</name>
    <token>[SerializeField]
public Text label </token>
    <scope>viva.CharacterEntry</scope>
  </viva.CharacterEntry.label>
  <viva.CharacterEntry.loadingDots>
    <signature>viva.CharacterEntry.loadingDots</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>loadingDots</name>
    <token>[SerializeField]
public LoadingDots loadingDots </token>
    <scope>viva.CharacterEntry</scope>
  </viva.CharacterEntry.loadingDots>
  <viva.CharacterRequest>
    <signature>viva.CharacterRequest</signature>
    <childcount>15</childcount>
    <type>Class</type>
    <name>CharacterRequest</name>
    <token>public class CharacterRequest : ImportRequest </token>
    <scope>viva</scope>
  </viva.CharacterRequest>
  <viva.CharacterRequest.characterFile>
    <signature>viva.CharacterRequest.characterFile</signature>
    <childcount>0</childcount>
    <type>Property</type>
    <name>characterFile</name>
    <token>public CharacterFile characterFile { get; set; }</token>
    <scope>viva.CharacterRequest</scope>
  </viva.CharacterRequest.characterFile>
  <viva.CharacterRequest.character>
    <signature>viva.CharacterRequest.character</signature>
    <childcount>0</childcount>
    <type>Property</type>
    <name>character</name>
    <token>public Character character { get; set; }</token>
    <scope>viva.CharacterRequest</scope>
  </viva.CharacterRequest.character>
  <viva.CharacterRequest.root>
    <signature>viva.CharacterRequest.root</signature>
    <childcount>0</childcount>
    <type>Property</type>
    <name>root</name>
    <token>public static string root { get; }</token>
    <scope>viva.CharacterRequest</scope>
  </viva.CharacterRequest.root>
  <viva.CharacterRequest.CharacterRequest_x0028_string_x0029_>
    <signature>viva.CharacterRequest.CharacterRequest(string)</signature>
    <childcount>0</childcount>
    <type>Constructor</type>
    <name>CharacterRequest</name>
    <token>public  CharacterRequest(string _filepath):base( _filepath, RequestType.CHARACTER )</token>
    <scope>viva.CharacterRequest</scope>
    <params>
      <_filepath>string</_filepath>
    </params>
  </viva.CharacterRequest.CharacterRequest_x0028_string_x0029_>
  <viva.CharacterRequest.CharacterRequest_x0028_Character_x002C__x0020_string_x0029_>
    <signature>viva.CharacterRequest.CharacterRequest(Character, string)</signature>
    <childcount>0</childcount>
    <type>Constructor</type>
    <name>CharacterRequest</name>
    <token>public  CharacterRequest(Character _character, string _filepath):base( _filepath, RequestType.CHARACTER )</token>
    <scope>viva.CharacterRequest</scope>
    <params>
      <_character>Character</_character>
      <_filepath>string</_filepath>
    </params>
  </viva.CharacterRequest.CharacterRequest_x0028_Character_x002C__x0020_string_x0029_>
  <viva.CharacterRequest.OnCreateMenuSelected_x0028__x0029_>
    <signature>viva.CharacterRequest.OnCreateMenuSelected()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>OnCreateMenuSelected</name>
    <token>public override void OnCreateMenuSelected()</token>
    <scope>viva.CharacterRequest</scope>
  </viva.CharacterRequest.OnCreateMenuSelected_x0028__x0029_>
  <viva.CharacterRequest.OnCreateMenuDeselected_x0028__x0029_>
    <signature>viva.CharacterRequest.OnCreateMenuDeselected()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>OnCreateMenuDeselected</name>
    <token>public override void OnCreateMenuDeselected()</token>
    <scope>viva.CharacterRequest</scope>
  </viva.CharacterRequest.OnCreateMenuDeselected_x0028__x0029_>
  <viva.CharacterRequest.Import_x0028__x0029_>
    <signature>viva.CharacterRequest.Import()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>Import</name>
    <token>public override void Import()</token>
    <scope>viva.CharacterRequest</scope>
  </viva.CharacterRequest.Import_x0028__x0029_>
  <viva.CharacterRequest.LoadSourceCharacterFile_x0028__x0029_>
    <signature>viva.CharacterRequest.LoadSourceCharacterFile()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>LoadSourceCharacterFile</name>
    <token>public void LoadSourceCharacterFile()</token>
    <scope>viva.CharacterRequest</scope>
  </viva.CharacterRequest.LoadSourceCharacterFile_x0028__x0029_>
  <viva.CharacterRequest.GetInfoHeaderTitleText_x0028__x0029_>
    <signature>viva.CharacterRequest.GetInfoHeaderTitleText()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>GetInfoHeaderTitleText</name>
    <token>public override string GetInfoHeaderTitleText()</token>
    <scope>viva.CharacterRequest</scope>
  </viva.CharacterRequest.GetInfoHeaderTitleText_x0028__x0029_>
  <viva.CharacterRequest.GetInfoHeaderText_x0028__x0029_>
    <signature>viva.CharacterRequest.GetInfoHeaderText()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>GetInfoHeaderText</name>
    <token>public override string GetInfoHeaderText()</token>
    <scope>viva.CharacterRequest</scope>
  </viva.CharacterRequest.GetInfoHeaderText_x0028__x0029_>
  <viva.CharacterRequest.GetInfoBodyContentText_x0028__x0029_>
    <signature>viva.CharacterRequest.GetInfoBodyContentText()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>GetInfoBodyContentText</name>
    <token>public override string GetInfoBodyContentText()</token>
    <scope>viva.CharacterRequest</scope>
  </viva.CharacterRequest.GetInfoBodyContentText_x0028__x0029_>
  <viva.CharacterRequest.GenerateThumbnail_x0028_Thumbnail_x0029_>
    <signature>viva.CharacterRequest.GenerateThumbnail(Thumbnail)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>GenerateThumbnail</name>
    <token>public override void GenerateThumbnail(Thumbnail thumbnail)</token>
    <scope>viva.CharacterRequest</scope>
    <params>
      <thumbnail>Thumbnail</thumbnail>
    </params>
  </viva.CharacterRequest.GenerateThumbnail_x0028_Thumbnail_x0029_>
  <viva.CreateMenu>
    <signature>viva.CreateMenu</signature>
    <childcount>51</childcount>
    <type>Class</type>
    <name>CreateMenu</name>
    <token>public partial class CreateMenu : MonoBehaviour </token>
    <scope>viva</scope>
  </viva.CreateMenu>
  <viva.CreateMenu.ToggleCallback_x0028_bool_x0029_>
    <signature>viva.CreateMenu.ToggleCallback(bool)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>ToggleCallback</name>
    <token>public delegate void ToggleCallback(bool value)</token>
    <scope>viva.CreateMenu</scope>
    <params>
      <value>bool</value>
    </params>
  </viva.CreateMenu.ToggleCallback_x0028_bool_x0029_>
  <viva.CreateMenu.StringCallback_x0028_string_x0029_>
    <signature>viva.CreateMenu.StringCallback(string)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>StringCallback</name>
    <token>public delegate string StringCallback(string value)</token>
    <scope>viva.CreateMenu</scope>
    <params>
      <value>string</value>
    </params>
  </viva.CreateMenu.StringCallback_x0028_string_x0029_>
  <viva.CreateMenu.OptionInfo>
    <signature>viva.CreateMenu.OptionInfo</signature>
    <childcount>4</childcount>
    <type>Class</type>
    <name>OptionInfo</name>
    <token>public class OptionInfo </token>
    <scope>viva.CreateMenu</scope>
  </viva.CreateMenu.OptionInfo>
  <viva.CreateMenu.OptionInfo.title>
    <signature>viva.CreateMenu.OptionInfo.title</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>title</name>
    <token>public string title </token>
    <scope>viva.CreateMenu.OptionInfo</scope>
  </viva.CreateMenu.OptionInfo.title>
  <viva.CreateMenu.OptionInfo.on>
    <signature>viva.CreateMenu.OptionInfo.on</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>on</name>
    <token>public bool on </token>
    <scope>viva.CreateMenu.OptionInfo</scope>
  </viva.CreateMenu.OptionInfo.on>
  <viva.CreateMenu.OptionInfo.onToggle>
    <signature>viva.CreateMenu.OptionInfo.onToggle</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>onToggle</name>
    <token>public ToggleCallback onToggle </token>
    <scope>viva.CreateMenu.OptionInfo</scope>
  </viva.CreateMenu.OptionInfo.onToggle>
  <viva.CreateMenu.OptionInfo.OptionInfo_x0028_string_x002C__x0020_bool_x002C__x0020_ToggleCallback_x0029_>
    <signature>viva.CreateMenu.OptionInfo.OptionInfo(string, bool, ToggleCallback)</signature>
    <childcount>0</childcount>
    <type>Constructor</type>
    <name>OptionInfo</name>
    <token>public  OptionInfo(string _title, bool _on, ToggleCallback _onToggle)</token>
    <scope>viva.CreateMenu.OptionInfo</scope>
    <params>
      <_title>string</_title>
      <_on>bool</_on>
      <_onToggle>ToggleCallback</_onToggle>
    </params>
  </viva.CreateMenu.OptionInfo.OptionInfo_x0028_string_x002C__x0020_bool_x002C__x0020_ToggleCallback_x0029_>
  <viva.CreateMenu.InputInfo>
    <signature>viva.CreateMenu.InputInfo</signature>
    <childcount>4</childcount>
    <type>Class</type>
    <name>InputInfo</name>
    <token>public class InputInfo </token>
    <scope>viva.CreateMenu</scope>
  </viva.CreateMenu.InputInfo>
  <viva.CreateMenu.InputInfo.title>
    <signature>viva.CreateMenu.InputInfo.title</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>title</name>
    <token>public string title </token>
    <scope>viva.CreateMenu.InputInfo</scope>
  </viva.CreateMenu.InputInfo.title>
  <viva.CreateMenu.InputInfo.initValue>
    <signature>viva.CreateMenu.InputInfo.initValue</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>initValue</name>
    <token>public string initValue </token>
    <scope>viva.CreateMenu.InputInfo</scope>
  </viva.CreateMenu.InputInfo.initValue>
  <viva.CreateMenu.InputInfo.onChange>
    <signature>viva.CreateMenu.InputInfo.onChange</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>onChange</name>
    <token>public StringCallback onChange </token>
    <scope>viva.CreateMenu.InputInfo</scope>
  </viva.CreateMenu.InputInfo.onChange>
  <viva.CreateMenu.InputInfo.InputInfo_x0028_string_x002C__x0020_string_x002C__x0020_StringCallback_x0029_>
    <signature>viva.CreateMenu.InputInfo.InputInfo(string, string, StringCallback)</signature>
    <childcount>0</childcount>
    <type>Constructor</type>
    <name>InputInfo</name>
    <token>public  InputInfo(string _title, string _initValue, StringCallback _onChange)</token>
    <scope>viva.CreateMenu.InputInfo</scope>
    <params>
      <_title>string</_title>
      <_initValue>string</_initValue>
      <_onChange>StringCallback</_onChange>
    </params>
  </viva.CreateMenu.InputInfo.InputInfo_x0028_string_x002C__x0020_string_x002C__x0020_StringCallback_x0029_>
  <viva.CreateMenu.InputFieldEntry>
    <signature>viva.CreateMenu.InputFieldEntry</signature>
    <childcount>3</childcount>
    <type>Class</type>
    <name>InputFieldEntry</name>
    <token>[System.Serializable]
public class InputFieldEntry </token>
    <scope>viva.CreateMenu</scope>
  </viva.CreateMenu.InputFieldEntry>
  <viva.CreateMenu.InputFieldEntry.container>
    <signature>viva.CreateMenu.InputFieldEntry.container</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>container</name>
    <token>public GameObject container </token>
    <scope>viva.CreateMenu.InputFieldEntry</scope>
  </viva.CreateMenu.InputFieldEntry.container>
  <viva.CreateMenu.InputFieldEntry.label>
    <signature>viva.CreateMenu.InputFieldEntry.label</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>label</name>
    <token>public Text label </token>
    <scope>viva.CreateMenu.InputFieldEntry</scope>
  </viva.CreateMenu.InputFieldEntry.label>
  <viva.CreateMenu.InputFieldEntry.field>
    <signature>viva.CreateMenu.InputFieldEntry.field</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>field</name>
    <token>public InputField field </token>
    <scope>viva.CreateMenu.InputFieldEntry</scope>
  </viva.CreateMenu.InputFieldEntry.field>
  <viva.CreateMenu.defaultFBXThumbnail>
    <signature>viva.CreateMenu.defaultFBXThumbnail</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>defaultFBXThumbnail</name>
    <token>[SerializeField]
public Texture2D defaultFBXThumbnail </token>
    <scope>viva.CreateMenu</scope>
  </viva.CreateMenu.defaultFBXThumbnail>
  <viva.CreateMenu.defaultScriptThumbnail>
    <signature>viva.CreateMenu.defaultScriptThumbnail</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>defaultScriptThumbnail</name>
    <token>[SerializeField]
public Texture2D defaultScriptThumbnail </token>
    <scope>viva.CreateMenu</scope>
  </viva.CreateMenu.defaultScriptThumbnail>
  <viva.CreateMenu.CreateAssetProcessor_x0028_List_x003C_string_x003E__x0029_>
    <signature>viva.CreateMenu.CreateAssetProcessor(List&lt;string&gt;)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>CreateAssetProcessor</name>
    <token>public AssetProcessor CreateAssetProcessor(List&lt;string&gt; filepaths)</token>
    <scope>viva.CreateMenu</scope>
    <params>
      <filepaths>List&lt;string&gt;</filepaths>
    </params>
  </viva.CreateMenu.CreateAssetProcessor_x0028_List_x003C_string_x003E__x0029_>
  <viva.CreateMenu.OpenCreateMenu_x0028__x0029_>
    <signature>viva.CreateMenu.OpenCreateMenu()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>OpenCreateMenu</name>
    <token>public void OpenCreateMenu()</token>
    <scope>viva.CreateMenu</scope>
  </viva.CreateMenu.OpenCreateMenu_x0028__x0029_>
  <viva.CreateMenu.CloseCreateMenu_x0028__x0029_>
    <signature>viva.CreateMenu.CloseCreateMenu()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>CloseCreateMenu</name>
    <token>public void CloseCreateMenu()</token>
    <scope>viva.CreateMenu</scope>
  </viva.CreateMenu.CloseCreateMenu_x0028__x0029_>
  <viva.CreateMenu.DisplayInfoHierarchy_x0028__x0029_>
    <signature>viva.CreateMenu.DisplayInfoHierarchy()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>DisplayInfoHierarchy</name>
    <token>public void DisplayInfoHierarchy()</token>
    <scope>viva.CreateMenu</scope>
  </viva.CreateMenu.DisplayInfoHierarchy_x0028__x0029_>
  <viva.CreateMenu.DisplayVivaObjectInfo_x0028_VivaObject_x002C__x0020_bool_x002C__x0020_bool_x002C__x0020_bool_x002C__x0020_bool_x002C__x0020_OptionInfo_x005B__x005D__x002C__x0020_InputInfo_x005B__x005D__x0029_>
    <signature>viva.CreateMenu.DisplayVivaObjectInfo(VivaEditable, bool, bool, bool, bool, OptionInfo[], InputInfo[])</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>DisplayVivaObjectInfo</name>
    <token>public void DisplayVivaObjectInfo(VivaEditable obj, bool showEditRagdoll=false, bool showCreateCharacter=false, bool showAddLogic=false, bool showExport=false, OptionInfo[] optionInfos=null, InputInfo[] inputInfos=null)</token>
    <scope>viva.CreateMenu</scope>
    <params>
      <obj>VivaEditable</obj>
      <showEditRagdoll>bool</showEditRagdoll>
      <showCreateCharacter>bool</showCreateCharacter>
      <showAddLogic>bool</showAddLogic>
      <showExport>bool</showExport>
      <optionInfos>OptionInfo[]</optionInfos>
      <inputInfos>InputInfo[]</inputInfos>
    </params>
  </viva.CreateMenu.DisplayVivaObjectInfo_x0028_VivaObject_x002C__x0020_bool_x002C__x0020_bool_x002C__x0020_bool_x002C__x0020_bool_x002C__x0020_OptionInfo_x005B__x005D__x002C__x0020_InputInfo_x005B__x005D__x0029_>
  <viva.CreateMenu.InfoColor>
    <signature>viva.CreateMenu.InfoColor</signature>
    <childcount>9</childcount>
    <type>Enum</type>
    <name>InfoColor</name>
    <token>public enum InfoColor </token>
    <scope>viva.CreateMenu</scope>
  </viva.CreateMenu.InfoColor>
  <viva.CreateMenu.InfoColor.ERROR>
    <signature>viva.CreateMenu.InfoColor.ERROR</signature>
    <childcount>0</childcount>
    <type>EnumValue</type>
    <name>ERROR</name>
    <token>ERROR = 0xff2f2f</token>
    <scope>viva.CreateMenu.InfoColor</scope>
  </viva.CreateMenu.InfoColor.ERROR>
  <viva.CreateMenu.InfoColor.FBX_REQUEST>
    <signature>viva.CreateMenu.InfoColor.FBX_REQUEST</signature>
    <childcount>0</childcount>
    <type>EnumValue</type>
    <name>FBX_REQUEST</name>
    <token>FBX_REQUEST = 0x66efff</token>
    <scope>viva.CreateMenu.InfoColor</scope>
  </viva.CreateMenu.InfoColor.FBX_REQUEST>
  <viva.CreateMenu.InfoColor.MODEL>
    <signature>viva.CreateMenu.InfoColor.MODEL</signature>
    <childcount>0</childcount>
    <type>EnumValue</type>
    <name>MODEL</name>
    <token>MODEL = 0x98d5ff</token>
    <scope>viva.CreateMenu.InfoColor</scope>
  </viva.CreateMenu.InfoColor.MODEL>
  <viva.CreateMenu.InfoColor.ANIMATION>
    <signature>viva.CreateMenu.InfoColor.ANIMATION</signature>
    <childcount>0</childcount>
    <type>EnumValue</type>
    <name>ANIMATION</name>
    <token>ANIMATION = 0x8bb4ff</token>
    <scope>viva.CreateMenu.InfoColor</scope>
  </viva.CreateMenu.InfoColor.ANIMATION>
  <viva.CreateMenu.InfoColor.TEXTURE_REQUEST>
    <signature>viva.CreateMenu.InfoColor.TEXTURE_REQUEST</signature>
    <childcount>0</childcount>
    <type>EnumValue</type>
    <name>TEXTURE_REQUEST</name>
    <token>TEXTURE_REQUEST = 0x6dffc3</token>
    <scope>viva.CreateMenu.InfoColor</scope>
  </viva.CreateMenu.InfoColor.TEXTURE_REQUEST>
  <viva.CreateMenu.InfoColor.TEXTURE>
    <signature>viva.CreateMenu.InfoColor.TEXTURE</signature>
    <childcount>0</childcount>
    <type>EnumValue</type>
    <name>TEXTURE</name>
    <token>TEXTURE = 0x6dffc4</token>
    <scope>viva.CreateMenu.InfoColor</scope>
  </viva.CreateMenu.InfoColor.TEXTURE>
  <viva.CreateMenu.InfoColor.SCRIPT>
    <signature>viva.CreateMenu.InfoColor.SCRIPT</signature>
    <childcount>0</childcount>
    <type>EnumValue</type>
    <name>SCRIPT</name>
    <token>SCRIPT = 0xffd800</token>
    <scope>viva.CreateMenu.InfoColor</scope>
  </viva.CreateMenu.InfoColor.SCRIPT>
  <viva.CreateMenu.InfoColor.CHARACTER_REQUEST>
    <signature>viva.CreateMenu.InfoColor.CHARACTER_REQUEST</signature>
    <childcount>0</childcount>
    <type>EnumValue</type>
    <name>CHARACTER_REQUEST</name>
    <token>CHARACTER_REQUEST = 0xdeff00</token>
    <scope>viva.CreateMenu.InfoColor</scope>
  </viva.CreateMenu.InfoColor.CHARACTER_REQUEST>
  <viva.CreateMenu.InfoColor.SCRIPT_REQUEST>
    <signature>viva.CreateMenu.InfoColor.SCRIPT_REQUEST</signature>
    <childcount>0</childcount>
    <type>EnumValue</type>
    <name>SCRIPT_REQUEST</name>
    <token>SCRIPT_REQUEST = 0xffd801</token>
    <scope>viva.CreateMenu.InfoColor</scope>
  </viva.CreateMenu.InfoColor.SCRIPT_REQUEST>
  <viva.CreateMenu.InfoTypeToColor_x0028_InfoColor_x0029_>
    <signature>viva.CreateMenu.InfoTypeToColor(InfoColor)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>InfoTypeToColor</name>
    <token>public static string InfoTypeToColor(InfoColor type)</token>
    <scope>viva.CreateMenu</scope>
    <params>
      <type>InfoColor</type>
    </params>
  </viva.CreateMenu.InfoTypeToColor_x0028_InfoColor_x0029_>
  <viva.CreateMenu.RequestTypeToInfoType_x0028_RequestType_x0029_>
    <signature>viva.CreateMenu.RequestTypeToInfoType(RequestType)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>RequestTypeToInfoType</name>
    <token>public static InfoColor RequestTypeToInfoType(RequestType reqType)</token>
    <scope>viva.CreateMenu</scope>
    <params>
      <reqType>RequestType</reqType>
    </params>
  </viva.CreateMenu.RequestTypeToInfoType_x0028_RequestType_x0029_>
  <viva.CreateMenu.Info>
    <signature>viva.CreateMenu.Info</signature>
    <childcount>4</childcount>
    <type>Class</type>
    <name>Info</name>
    <token>public class Info </token>
    <scope>viva.CreateMenu</scope>
  </viva.CreateMenu.Info>
  <viva.CreateMenu.Info.type>
    <signature>viva.CreateMenu.Info.type</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>type</name>
    <token>public readonly InfoColor type = </token>
    <scope>viva.CreateMenu.Info</scope>
  </viva.CreateMenu.Info.type>
  <viva.CreateMenu.Info.source>
    <signature>viva.CreateMenu.Info.source</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>source</name>
    <token>public readonly object source = </token>
    <scope>viva.CreateMenu.Info</scope>
  </viva.CreateMenu.Info.source>
  <viva.CreateMenu.Info.label>
    <signature>viva.CreateMenu.Info.label</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>label</name>
    <token>public string label </token>
    <scope>viva.CreateMenu.Info</scope>
  </viva.CreateMenu.Info.label>
  <viva.CreateMenu.Info.Info_x0028_InfoColor_x002C__x0020_object_x002C__x0020_string_x0029_>
    <signature>viva.CreateMenu.Info.Info(InfoColor, object, string)</signature>
    <childcount>0</childcount>
    <type>Constructor</type>
    <name>Info</name>
    <token>public  Info(InfoColor _type, object _source, string _label)</token>
    <scope>viva.CreateMenu.Info</scope>
    <params>
      <_type>InfoColor</_type>
      <_source>object</_source>
      <_label>string</_label>
    </params>
  </viva.CreateMenu.Info.Info_x0028_InfoColor_x002C__x0020_object_x002C__x0020_string_x0029_>
  <viva.CreateMenu.RequestInfo>
    <signature>viva.CreateMenu.RequestInfo</signature>
    <childcount>4</childcount>
    <type>Class</type>
    <name>RequestInfo</name>
    <token>public class RequestInfo </token>
    <scope>viva.CreateMenu</scope>
  </viva.CreateMenu.RequestInfo>
  <viva.CreateMenu.RequestInfo.request>
    <signature>viva.CreateMenu.RequestInfo.request</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>request</name>
    <token>public readonly ImportRequest request = </token>
    <scope>viva.CreateMenu.RequestInfo</scope>
  </viva.CreateMenu.RequestInfo.request>
  <viva.CreateMenu.RequestInfo.infoLabels>
    <signature>viva.CreateMenu.RequestInfo.infoLabels</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>infoLabels</name>
    <token>public List&lt;Info&gt; infoLabels </token>
    <scope>viva.CreateMenu.RequestInfo</scope>
  </viva.CreateMenu.RequestInfo.infoLabels>
  <viva.CreateMenu.RequestInfo.RequestInfo_x0028_ImportRequest_x0029_>
    <signature>viva.CreateMenu.RequestInfo.RequestInfo(ImportRequest)</signature>
    <childcount>0</childcount>
    <type>Constructor</type>
    <name>RequestInfo</name>
    <token>public  RequestInfo(ImportRequest _request)</token>
    <scope>viva.CreateMenu.RequestInfo</scope>
    <params>
      <_request>ImportRequest</_request>
    </params>
  </viva.CreateMenu.RequestInfo.RequestInfo_x0028_ImportRequest_x0029_>
  <viva.CreateMenu.RequestInfo.RefreshInfoLabels_x0028__x0029_>
    <signature>viva.CreateMenu.RequestInfo.RefreshInfoLabels()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>RefreshInfoLabels</name>
    <token>public void RefreshInfoLabels()</token>
    <scope>viva.CreateMenu.RequestInfo</scope>
  </viva.CreateMenu.RequestInfo.RefreshInfoLabels_x0028__x0029_>
  <viva.FaceCamera>
    <signature>viva.FaceCamera</signature>
    <childcount>1</childcount>
    <type>Class</type>
    <name>FaceCamera</name>
    <token>public class FaceCamera : MonoBehaviour </token>
    <scope>viva</scope>
  </viva.FaceCamera>
  <viva.FBXRequest>
    <signature>viva.FBXRequest</signature>
    <childcount>25</childcount>
    <type>Class</type>
    <name>FBXRequest</name>
    <token>public partial class FBXRequest : ImportRequest </token>
    <scope>viva</scope>
  </viva.FBXRequest>
  <viva.FBXRequest.ModelGroup>
    <signature>viva.FBXRequest.ModelGroup</signature>
    <childcount>3</childcount>
    <type>Class</type>
    <name>ModelGroup</name>
    <token>public class ModelGroup </token>
    <scope>viva.FBXRequest</scope>
  </viva.FBXRequest.ModelGroup>
  <viva.FBXRequest.ModelGroup.model>
    <signature>viva.FBXRequest.ModelGroup.model</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>model</name>
    <token>public readonly Model model = </token>
    <scope>viva.FBXRequest.ModelGroup</scope>
  </viva.FBXRequest.ModelGroup.model>
  <viva.FBXRequest.ModelGroup.animations>
    <signature>viva.FBXRequest.ModelGroup.animations</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>animations</name>
    <token>public readonly Animation[] animations = new Animation[0];</token>
    <scope>viva.FBXRequest.ModelGroup</scope>
  </viva.FBXRequest.ModelGroup.animations>
  <viva.FBXRequest.ModelGroup.ModelGroup_x0028_Model_x002C__x0020_Animation_x005B__x005D__x0029_>
    <signature>viva.FBXRequest.ModelGroup.ModelGroup(Model, Animation[])</signature>
    <childcount>0</childcount>
    <type>Constructor</type>
    <name>ModelGroup</name>
    <token>public  ModelGroup(Model _model, Animation[] _animations)</token>
    <scope>viva.FBXRequest.ModelGroup</scope>
    <params>
      <_model>Model</_model>
      <_animations>Animation[]</_animations>
    </params>
  </viva.FBXRequest.ModelGroup.ModelGroup_x0028_Model_x002C__x0020_Animation_x005B__x005D__x0029_>
  <viva.FBXRequest.ReimportData>
    <signature>viva.FBXRequest.ReimportData</signature>
    <childcount>4</childcount>
    <type>Class</type>
    <name>ReimportData</name>
    <token>public class ReimportData </token>
    <scope>viva.FBXRequest</scope>
  </viva.FBXRequest.ReimportData>
  <viva.FBXRequest.ReimportData.name>
    <signature>viva.FBXRequest.ReimportData.name</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>name</name>
    <token>public string name </token>
    <scope>viva.FBXRequest.ReimportData</scope>
  </viva.FBXRequest.ReimportData.name>
  <viva.FBXRequest.ReimportData.ragdollProfileBoneNames>
    <signature>viva.FBXRequest.ReimportData.ragdollProfileBoneNames</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>ragdollProfileBoneNames</name>
    <token>public string[] ragdollProfileBoneNames </token>
    <scope>viva.FBXRequest.ReimportData</scope>
  </viva.FBXRequest.ReimportData.ragdollProfileBoneNames>
  <viva.FBXRequest.ReimportData.textureBindings>
    <signature>viva.FBXRequest.ReimportData.textureBindings</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>textureBindings</name>
    <token>public List&lt;TextureBinding&gt; textureBindings </token>
    <scope>viva.FBXRequest.ReimportData</scope>
  </viva.FBXRequest.ReimportData.textureBindings>
  <viva.FBXRequest.ReimportData.ReimportData_x0028_Model_x0029_>
    <signature>viva.FBXRequest.ReimportData.ReimportData(Model)</signature>
    <childcount>0</childcount>
    <type>Constructor</type>
    <name>ReimportData</name>
    <token>public  ReimportData(Model model)</token>
    <scope>viva.FBXRequest.ReimportData</scope>
    <params>
      <model>Model</model>
    </params>
  </viva.FBXRequest.ReimportData.ReimportData_x0028_Model_x0029_>
  <viva.FBXRequest.content>
    <signature>viva.FBXRequest.content</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>content</name>
    <token>public readonly FBXContent content = </token>
    <scope>viva.FBXRequest</scope>
  </viva.FBXRequest.content>
  <viva.FBXRequest.mainRoot>
    <signature>viva.FBXRequest.mainRoot</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>mainRoot</name>
    <token>public Transform mainRoot </token>
    <scope>viva.FBXRequest</scope>
  </viva.FBXRequest.mainRoot>
  <viva.FBXRequest.modelGroups>
    <signature>viva.FBXRequest.modelGroups</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>modelGroups</name>
    <token>public ModelGroup[] modelGroups </token>
    <scope>viva.FBXRequest</scope>
  </viva.FBXRequest.modelGroups>
  <viva.FBXRequest.FBXRequest_x0028_string_x002C__x0020_FBXContent_x0029_>
    <signature>viva.FBXRequest.FBXRequest(string, FBXContent)</signature>
    <childcount>0</childcount>
    <type>Constructor</type>
    <name>FBXRequest</name>
    <token>public  FBXRequest(string _filepath, FBXContent _content):base( _filepath, RequestType.FBX )</token>
    <scope>viva.FBXRequest</scope>
    <params>
      <_filepath>string</_filepath>
      <_content>FBXContent</_content>
    </params>
  </viva.FBXRequest.FBXRequest_x0028_string_x002C__x0020_FBXContent_x0029_>
  <viva.FBXRequest.OnCreateMenuSelected_x0028__x0029_>
    <signature>viva.FBXRequest.OnCreateMenuSelected()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>OnCreateMenuSelected</name>
    <token>public override void OnCreateMenuSelected()</token>
    <scope>viva.FBXRequest</scope>
  </viva.FBXRequest.OnCreateMenuSelected_x0028__x0029_>
  <viva.FBXRequest.OnCreateMenuDeselected_x0028__x0029_>
    <signature>viva.FBXRequest.OnCreateMenuDeselected()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>OnCreateMenuDeselected</name>
    <token>public override void OnCreateMenuDeselected()</token>
    <scope>viva.FBXRequest</scope>
  </viva.FBXRequest.OnCreateMenuDeselected_x0028__x0029_>
  <viva.FBXRequest.Import_x0028__x0029_>
    <signature>viva.FBXRequest.Import()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>Import</name>
    <token>public override void Import()</token>
    <scope>viva.FBXRequest</scope>
  </viva.FBXRequest.Import_x0028__x0029_>
  <viva.FBXRequest.GetModel_x0028_string_x0029_>
    <signature>viva.FBXRequest.GetModel(string)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>GetModel</name>
    <token>public Model GetModel(string name)</token>
    <scope>viva.FBXRequest</scope>
    <params>
      <name>string</name>
    </params>
  </viva.FBXRequest.GetModel_x0028_string_x0029_>
  <viva.FBXRequest.GetAnimation_x0028_string_x0029_>
    <signature>viva.FBXRequest.GetAnimation(string)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>GetAnimation</name>
    <token>public Animation GetAnimation(string name)</token>
    <scope>viva.FBXRequest</scope>
    <params>
      <name>string</name>
    </params>
  </viva.FBXRequest.GetAnimation_x0028_string_x0029_>
  <viva.FBXRequest.GenerateThumbnail_x0028_Thumbnail_x0029_>
    <signature>viva.FBXRequest.GenerateThumbnail(Thumbnail)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>GenerateThumbnail</name>
    <token>public override void GenerateThumbnail(Thumbnail thumbnail)</token>
    <scope>viva.FBXRequest</scope>
    <params>
      <thumbnail>Thumbnail</thumbnail>
    </params>
  </viva.FBXRequest.GenerateThumbnail_x0028_Thumbnail_x0029_>
  <viva.FBXRequest.GetInfoHeaderText_x0028__x0029_>
    <signature>viva.FBXRequest.GetInfoHeaderText()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>GetInfoHeaderText</name>
    <token>public override string GetInfoHeaderText()</token>
    <scope>viva.FBXRequest</scope>
  </viva.FBXRequest.GetInfoHeaderText_x0028__x0029_>
  <viva.FBXRequest.GetInfoBodyContentText_x0028__x0029_>
    <signature>viva.FBXRequest.GetInfoBodyContentText()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>GetInfoBodyContentText</name>
    <token>public override string GetInfoBodyContentText()</token>
    <scope>viva.FBXRequest</scope>
  </viva.FBXRequest.GetInfoBodyContentText_x0028__x0029_>
  <viva.FBXRequest.ExecuteImportFBX_x0028_GenericCallback_x0029_>
    <signature>viva.FBXRequest.ExecuteImportFBX(GenericCallback)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>ExecuteImportFBX</name>
    <token>public IEnumerator ExecuteImportFBX(GenericCallback postProcessImport=null)</token>
    <scope>viva.FBXRequest</scope>
    <params>
      <postProcessImport>GenericCallback</postProcessImport>
    </params>
  </viva.FBXRequest.ExecuteImportFBX_x0028_GenericCallback_x0029_>
  <viva.FBXContent>
    <signature>viva.FBXContent</signature>
    <childcount>2</childcount>
    <type>Enum</type>
    <name>FBXContent</name>
    <token>[System.Flags]
public enum FBXContent </token>
    <scope>viva</scope>
  </viva.FBXContent>
  <viva.FBXContent.MODEL>
    <signature>viva.FBXContent.MODEL</signature>
    <childcount>0</childcount>
    <type>EnumValue</type>
    <name>MODEL</name>
    <token>MODEL = 1</token>
    <scope>viva.FBXContent</scope>
  </viva.FBXContent.MODEL>
  <viva.FBXContent.ANIMATON>
    <signature>viva.FBXContent.ANIMATON</signature>
    <childcount>0</childcount>
    <type>EnumValue</type>
    <name>ANIMATON</name>
    <token>ANIMATON = 2</token>
    <scope>viva.FBXContent</scope>
  </viva.FBXContent.ANIMATON>
  <viva.FileDragAndDrop>
    <signature>viva.FileDragAndDrop</signature>
    <childcount>3</childcount>
    <type>Class</type>
    <name>FileDragAndDrop</name>
    <token>public static class FileDragAndDrop </token>
    <scope>viva</scope>
  </viva.FileDragAndDrop>
  <viva.FileDragAndDrop.EnableDragAndDrop_x0028_UnityDragAndDropHook.DroppedFilesEvent_x0029_>
    <signature>viva.FileDragAndDrop.EnableDragAndDrop(UnityDragAndDropHook.DroppedFilesEvent)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>EnableDragAndDrop</name>
    <token>public static bool EnableDragAndDrop(UnityDragAndDropHook.DroppedFilesEvent callback)</token>
    <scope>viva.FileDragAndDrop</scope>
    <params>
      <callback>UnityDragAndDropHook.DroppedFilesEvent</callback>
    </params>
  </viva.FileDragAndDrop.EnableDragAndDrop_x0028_UnityDragAndDropHook.DroppedFilesEvent_x0029_>
  <viva.FileDragAndDrop.DisableDragAndDrop_x0028__x0029_>
    <signature>viva.FileDragAndDrop.DisableDragAndDrop()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>DisableDragAndDrop</name>
    <token>public static void DisableDragAndDrop()</token>
    <scope>viva.FileDragAndDrop</scope>
  </viva.FileDragAndDrop.DisableDragAndDrop_x0028__x0029_>
  <viva.FileWatcherManager>
    <signature>viva.FileWatcherManager</signature>
    <childcount>9</childcount>
    <type>Class</type>
    <name>FileWatcherManager</name>
    <token>public class FileWatcherManager : MonoBehaviour </token>
    <scope>viva</scope>
  </viva.FileWatcherManager>
  <viva.FileWatcherManager.FileWatcher>
    <signature>viva.FileWatcherManager.FileWatcher</signature>
    <childcount>5</childcount>
    <type>Class</type>
    <name>FileWatcher</name>
    <token>public class FileWatcher </token>
    <scope>viva.FileWatcherManager</scope>
  </viva.FileWatcherManager.FileWatcher>
  <viva.FileWatcherManager.FileWatcher.watcher>
    <signature>viva.FileWatcherManager.FileWatcher.watcher</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>watcher</name>
    <token>public FileSystemWatcher watcher </token>
    <scope>viva.FileWatcherManager.FileWatcher</scope>
  </viva.FileWatcherManager.FileWatcher.watcher>
  <viva.FileWatcherManager.FileWatcher.onFileChange>
    <signature>viva.FileWatcherManager.FileWatcher.onFileChange</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>onFileChange</name>
    <token>public StringReturnFunc onFileChange </token>
    <scope>viva.FileWatcherManager.FileWatcher</scope>
  </viva.FileWatcherManager.FileWatcher.onFileChange>
  <viva.FileWatcherManager.FileWatcher.alwaysOn>
    <signature>viva.FileWatcherManager.FileWatcher.alwaysOn</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>alwaysOn</name>
    <token>public bool alwaysOn </token>
    <scope>viva.FileWatcherManager.FileWatcher</scope>
  </viva.FileWatcherManager.FileWatcher.alwaysOn>
  <viva.FileWatcherManager.FileWatcher.filepathChanges>
    <signature>viva.FileWatcherManager.FileWatcher.filepathChanges</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>filepathChanges</name>
    <token>public List&lt;string&gt; filepathChanges </token>
    <scope>viva.FileWatcherManager.FileWatcher</scope>
  </viva.FileWatcherManager.FileWatcher.filepathChanges>
  <viva.FileWatcherManager.FileWatcher.FileWatcher_x0028_string_x0029_>
    <signature>viva.FileWatcherManager.FileWatcher.FileWatcher(string)</signature>
    <childcount>0</childcount>
    <type>Constructor</type>
    <name>FileWatcher</name>
    <token>public  FileWatcher(string directory)</token>
    <scope>viva.FileWatcherManager.FileWatcher</scope>
    <params>
      <directory>string</directory>
    </params>
  </viva.FileWatcherManager.FileWatcher.FileWatcher_x0028_string_x0029_>
  <viva.FileWatcherManager.ignoreChanges>
    <signature>viva.FileWatcherManager.ignoreChanges</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>ignoreChanges</name>
    <token>public static List&lt;string&gt; ignoreChanges </token>
    <scope>viva.FileWatcherManager</scope>
  </viva.FileWatcherManager.ignoreChanges>
  <viva.FileWatcherManager.main>
    <signature>viva.FileWatcherManager.main</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>main</name>
    <token>public static FileWatcherManager main </token>
    <scope>viva.FileWatcherManager</scope>
  </viva.FileWatcherManager.main>
  <viva.FileWatcherManager.Awake_x0028__x0029_>
    <signature>viva.FileWatcherManager.Awake()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>Awake</name>
    <token>public void Awake()</token>
    <scope>viva.FileWatcherManager</scope>
  </viva.FileWatcherManager.Awake_x0028__x0029_>
  <viva.FileWatcherManager.GetFileWatcher_x0028_string_x0029_>
    <signature>viva.FileWatcherManager.GetFileWatcher(string)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>GetFileWatcher</name>
    <token>public FileWatcher GetFileWatcher(string directory)</token>
    <scope>viva.FileWatcherManager</scope>
    <params>
      <directory>string</directory>
    </params>
  </viva.FileWatcherManager.GetFileWatcher_x0028_string_x0029_>
  <viva.FileWatcherManager.StopWatching_x0028__x0029_>
    <signature>viva.FileWatcherManager.StopWatching()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>StopWatching</name>
    <token>public void StopWatching()</token>
    <scope>viva.FileWatcherManager</scope>
  </viva.FileWatcherManager.StopWatching_x0028__x0029_>
  <viva.HeadLookAt>
    <signature>viva.HeadLookAt</signature>
    <childcount>6</childcount>
    <type>Class</type>
    <name>HeadLookAt</name>
    <token>public class HeadLookAt </token>
    <scope>viva</scope>
  </viva.HeadLookAt>
  <viva.HeadLookAt.target>
    <signature>viva.HeadLookAt.target</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>target</name>
    <token>public readonly TaskTarget target = new TaskTarget();</token>
    <scope>viva.HeadLookAt</scope>
  </viva.HeadLookAt.target>
  <viva.HeadLookAt.HeadLookAt_x0028_Character_x0029_>
    <signature>viva.HeadLookAt.HeadLookAt(Character)</signature>
    <childcount>0</childcount>
    <type>Constructor</type>
    <name>HeadLookAt</name>
    <token>public  HeadLookAt(Character _self)</token>
    <scope>viva.HeadLookAt</scope>
    <params>
      <_self>Character</_self>
    </params>
  </viva.HeadLookAt.HeadLookAt_x0028_Character_x0029_>
  <viva.HeadLookAt.ApplyToAnimation_x0028__x0029_>
    <signature>viva.HeadLookAt.ApplyToAnimation()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>ApplyToAnimation</name>
    <token>public void ApplyToAnimation()</token>
    <scope>viva.HeadLookAt</scope>
  </viva.HeadLookAt.ApplyToAnimation_x0028__x0029_>
  <viva.RequestType>
    <signature>viva.RequestType</signature>
    <childcount>5</childcount>
    <type>Enum</type>
    <name>RequestType</name>
    <token>public enum RequestType </token>
    <scope>viva</scope>
  </viva.RequestType>
  <viva.RequestType.FBX>
    <signature>viva.RequestType.FBX</signature>
    <childcount>0</childcount>
    <type>EnumValue</type>
    <name>FBX</name>
    <token>FBX</token>
    <scope>viva.RequestType</scope>
  </viva.RequestType.FBX>
  <viva.RequestType.TEXTURE>
    <signature>viva.RequestType.TEXTURE</signature>
    <childcount>0</childcount>
    <type>EnumValue</type>
    <name>TEXTURE</name>
    <token>TEXTURE</token>
    <scope>viva.RequestType</scope>
  </viva.RequestType.TEXTURE>
  <viva.RequestType.SCRIPT>
    <signature>viva.RequestType.SCRIPT</signature>
    <childcount>0</childcount>
    <type>EnumValue</type>
    <name>SCRIPT</name>
    <token>SCRIPT</token>
    <scope>viva.RequestType</scope>
  </viva.RequestType.SCRIPT>
  <viva.RequestType.CHARACTER>
    <signature>viva.RequestType.CHARACTER</signature>
    <childcount>0</childcount>
    <type>EnumValue</type>
    <name>CHARACTER</name>
    <token>CHARACTER</token>
    <scope>viva.RequestType</scope>
  </viva.RequestType.CHARACTER>
  <viva.RequestType.SOUND>
    <signature>viva.RequestType.SOUND</signature>
    <childcount>0</childcount>
    <type>EnumValue</type>
    <name>SOUND</name>
    <token>SOUND</token>
    <scope>viva.RequestType</scope>
  </viva.RequestType.SOUND>
  <viva.ImportRequest>
    <signature>viva.ImportRequest</signature>
    <childcount>9</childcount>
    <type>Class</type>
    <name>ImportRequest</name>
    <token>public abstract class ImportRequest : VivaEditable </token>
    <scope>viva</scope>
  </viva.ImportRequest>
  <viva.ImportRequest.filepath>
    <signature>viva.ImportRequest.filepath</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>filepath</name>
    <token>public readonly string filepath = </token>
    <scope>viva.ImportRequest</scope>
  </viva.ImportRequest.filepath>
  <viva.ImportRequest.type>
    <signature>viva.ImportRequest.type</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>type</name>
    <token>public readonly RequestType type = </token>
    <scope>viva.ImportRequest</scope>
  </viva.ImportRequest.type>
  <viva.ImportRequest.error>
    <signature>viva.ImportRequest.error</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>error</name>
    <token>public string error </token>
    <scope>viva.ImportRequest</scope>
  </viva.ImportRequest.error>
  <viva.ImportRequest.onFinished>
    <signature>viva.ImportRequest.onFinished</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>onFinished</name>
    <token>public GenericCallback onFinished </token>
    <scope>viva.ImportRequest</scope>
  </viva.ImportRequest.onFinished>
  <viva.ImportRequest.finished>
    <signature>viva.ImportRequest.finished</signature>
    <childcount>0</childcount>
    <type>Property</type>
    <name>finished</name>
    <token>public bool finished { get; set; }</token>
    <scope>viva.ImportRequest</scope>
  </viva.ImportRequest.finished>
  <viva.ImportRequest.ImportRequest_x0028_string_x002C__x0020_RequestType_x0029_>
    <signature>viva.ImportRequest.ImportRequest(string, RequestType)</signature>
    <childcount>0</childcount>
    <type>Constructor</type>
    <name>ImportRequest</name>
    <token>public  ImportRequest(string _filepath, RequestType _type)</token>
    <scope>viva.ImportRequest</scope>
    <params>
      <_filepath>string</_filepath>
      <_type>RequestType</_type>
    </params>
  </viva.ImportRequest.ImportRequest_x0028_string_x002C__x0020_RequestType_x0029_>
  <viva.ImportRequest.Finish_x0028__x0029_>
    <signature>viva.ImportRequest.Finish()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>Finish</name>
    <token>public void Finish()</token>
    <scope>viva.ImportRequest</scope>
  </viva.ImportRequest.Finish_x0028__x0029_>
  <viva.ImportRequest.Import_x0028__x0029_>
    <signature>viva.ImportRequest.Import()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>Import</name>
    <token>public abstract void Import()</token>
    <scope>viva.ImportRequest</scope>
  </viva.ImportRequest.Import_x0028__x0029_>
  <viva.ImportRequest.GetInfoHeaderTitleText_x0028__x0029_>
    <signature>viva.ImportRequest.GetInfoHeaderTitleText()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>GetInfoHeaderTitleText</name>
    <token>public override string GetInfoHeaderTitleText()</token>
    <scope>viva.ImportRequest</scope>
  </viva.ImportRequest.GetInfoHeaderTitleText_x0028__x0029_>
  <viva.GenericCallback_x0028__x0029_>
    <signature>viva.GenericCallback()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>GenericCallback</name>
    <token>public delegate void GenericCallback()</token>
    <scope>viva</scope>
  </viva.GenericCallback_x0028__x0029_>
  <viva.StringReturnFunc_x0028_string_x0029_>
    <signature>viva.StringReturnFunc(string)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>StringReturnFunc</name>
    <token>public delegate void StringReturnFunc(string value)</token>
    <scope>viva</scope>
    <params>
      <value>string</value>
    </params>
  </viva.StringReturnFunc_x0028_string_x0029_>
  <viva.StringListReturnFunc_x0028_List_x003C_string_x003E__x0029_>
    <signature>viva.StringListReturnFunc(List&lt;string&gt;)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>StringListReturnFunc</name>
    <token>public delegate void StringListReturnFunc(List&lt;string&gt; values)</token>
    <scope>viva</scope>
    <params>
      <values>List&lt;string&gt;</values>
    </params>
  </viva.StringListReturnFunc_x0028_List_x003C_string_x003E__x0029_>
  <viva.Key>
    <signature>viva.Key</signature>
    <childcount>6</childcount>
    <type>Class</type>
    <name>Key</name>
    <token>public sealed class Key </token>
    <scope>viva</scope>
  </viva.Key>
  <viva.Key.Callback>
    <signature>viva.Key.Callback</signature>
    <childcount>2</childcount>
    <type>Enum</type>
    <name>Callback</name>
    <token>public enum Callback </token>
    <scope>viva.Key</scope>
  </viva.Key.Callback>
  <viva.Key.Callback.DOWN>
    <signature>viva.Key.Callback.DOWN</signature>
    <childcount>0</childcount>
    <type>EnumValue</type>
    <name>DOWN</name>
    <token>DOWN</token>
    <scope>viva.Key.Callback</scope>
  </viva.Key.Callback.DOWN>
  <viva.Key.Callback.UP>
    <signature>viva.Key.Callback.UP</signature>
    <childcount>0</childcount>
    <type>EnumValue</type>
    <name>UP</name>
    <token>UP</token>
    <scope>viva.Key.Callback</scope>
  </viva.Key.Callback.UP>
  <viva.Key.Key_x0028_string_x0029_>
    <signature>viva.Key.Key(string)</signature>
    <childcount>0</childcount>
    <type>Constructor</type>
    <name>Key</name>
    <token>public  Key(string _name)</token>
    <scope>viva.Key</scope>
    <params>
      <_name>string</_name>
    </params>
  </viva.Key.Key_x0028_string_x0029_>
  <viva.Key.name>
    <signature>viva.Key.name</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>name</name>
    <token>public readonly string name = </token>
    <scope>viva.Key</scope>
  </viva.Key.name>
  <viva.Key.bound>
    <signature>viva.Key.bound</signature>
    <childcount>0</childcount>
    <type>Property</type>
    <name>bound</name>
    <token>public bool bound { get; set; }</token>
    <scope>viva.Key</scope>
  </viva.Key.bound>
  <viva.Key.this_x005B__x0020_Callback_x0020_callbackIndex_x0020__x005D_>
    <signature>viva.Key.this[ Callback callbackIndex ]</signature>
    <childcount>0</childcount>
    <type>Property</type>
    <name>this[ Callback callbackIndex ]</name>
    <token>public List&lt;GenericCallback&gt; this[ Callback callbackIndex ] { get; }</token>
    <scope>viva.Key</scope>
  </viva.Key.this_x005B__x0020_Callback_x0020_callbackIndex_x0020__x005D_>
  <viva.KeySet>
    <signature>viva.KeySet</signature>
    <childcount>5</childcount>
    <type>Class</type>
    <name>KeySet</name>
    <token>public sealed class KeySet </token>
    <scope>viva</scope>
  </viva.KeySet>
  <viva.KeySet.AddKey_x0028_string_x0029_>
    <signature>viva.KeySet.AddKey(string)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>AddKey</name>
    <token>public bool AddKey(string keyName)</token>
    <scope>viva.KeySet</scope>
    <params>
      <keyName>string</keyName>
    </params>
  </viva.KeySet.AddKey_x0028_string_x0029_>
  <viva.KeySet.GetKey_x0028_string_x0029_>
    <signature>viva.KeySet.GetKey(string)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>GetKey</name>
    <token>public Key GetKey(string keyName)</token>
    <scope>viva.KeySet</scope>
    <params>
      <keyName>string</keyName>
    </params>
  </viva.KeySet.GetKey_x0028_string_x0029_>
  <viva.KeySet.SetCallback_x0028_string_x002C__x0020_Key.Callback_x002C__x0020_GenericCallback_x002C__x0020_bool_x0029_>
    <signature>viva.KeySet.SetCallback(string, Key.Callback, GenericCallback, bool)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>SetCallback</name>
    <token>public void SetCallback(string keyName, Key.Callback callback, GenericCallback bind, bool enable)</token>
    <scope>viva.KeySet</scope>
    <params>
      <keyName>string</keyName>
      <callback>Key.Callback</callback>
      <bind>GenericCallback</bind>
      <enable>bool</enable>
    </params>
  </viva.KeySet.SetCallback_x0028_string_x002C__x0020_Key.Callback_x002C__x0020_GenericCallback_x002C__x0020_bool_x0029_>
  <viva.KeySet.Fire_x0028_string_x002C__x0020_Key.Callback_x0029_>
    <signature>viva.KeySet.Fire(string, Key.Callback)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>Fire</name>
    <token>public void Fire(string keyName, Key.Callback callback)</token>
    <scope>viva.KeySet</scope>
    <params>
      <keyName>string</keyName>
      <callback>Key.Callback</callback>
    </params>
  </viva.KeySet.Fire_x0028_string_x002C__x0020_Key.Callback_x0029_>
  <viva.LibraryExplorer>
    <signature>viva.LibraryExplorer</signature>
    <childcount>8</childcount>
    <type>Class</type>
    <name>LibraryExplorer</name>
    <token>public class LibraryExplorer : MonoBehaviour </token>
    <scope>viva</scope>
  </viva.LibraryExplorer>
  <viva.LibraryExplorer.OpenLibrary_x0028__x0029_>
    <signature>viva.LibraryExplorer.OpenLibrary()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>OpenLibrary</name>
    <token>public void OpenLibrary()</token>
    <scope>viva.LibraryExplorer</scope>
  </viva.LibraryExplorer.OpenLibrary_x0028__x0029_>
  <viva.LibraryExplorer.CloseLibrary_x0028__x0029_>
    <signature>viva.LibraryExplorer.CloseLibrary()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>CloseLibrary</name>
    <token>public void CloseLibrary()</token>
    <scope>viva.LibraryExplorer</scope>
  </viva.LibraryExplorer.CloseLibrary_x0028__x0029_>
  <viva.MessageDialog>
    <signature>viva.MessageDialog</signature>
    <childcount>14</childcount>
    <type>Class</type>
    <name>MessageDialog</name>
    <token>public class MessageDialog : MonoBehaviour </token>
    <scope>viva</scope>
  </viva.MessageDialog>
  <viva.MessageDialog.onInputFieldChange>
    <signature>viva.MessageDialog.onInputFieldChange</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>onInputFieldChange</name>
    <token>public StringReturnFunc onInputFieldChange </token>
    <scope>viva.MessageDialog</scope>
  </viva.MessageDialog.onInputFieldChange>
  <viva.MessageDialog.HandleInputFieldChange_x0028__x0029_>
    <signature>viva.MessageDialog.HandleInputFieldChange()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>HandleInputFieldChange</name>
    <token>public void HandleInputFieldChange()</token>
    <scope>viva.MessageDialog</scope>
  </viva.MessageDialog.HandleInputFieldChange_x0028__x0029_>
  <viva.MessageDialog.HandleFinishEdit_x0028__x0029_>
    <signature>viva.MessageDialog.HandleFinishEdit()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>HandleFinishEdit</name>
    <token>public void HandleFinishEdit()</token>
    <scope>viva.MessageDialog</scope>
  </viva.MessageDialog.HandleFinishEdit_x0028__x0029_>
  <viva.MessageDialog.SetInputFieldColor_x0028_Color_x0029_>
    <signature>viva.MessageDialog.SetInputFieldColor(Color)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>SetInputFieldColor</name>
    <token>public void SetInputFieldColor(Color color)</token>
    <scope>viva.MessageDialog</scope>
    <params>
      <color>Color</color>
    </params>
  </viva.MessageDialog.SetInputFieldColor_x0028_Color_x0029_>
  <viva.MessageDialog.DisplayError_x0028_Type_x002C__x0020_string_x002C__x0020_string_x002C__x0020_GenericCallback_x0029_>
    <signature>viva.MessageDialog.DisplayError(Type, string, string, GenericCallback)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>DisplayError</name>
    <token>public void DisplayError(Type type, string title, string error, GenericCallback onAccept=null)</token>
    <scope>viva.MessageDialog</scope>
    <params>
      <type>Type</type>
      <title>string</title>
      <error>string</error>
      <onAccept>GenericCallback</onAccept>
    </params>
  </viva.MessageDialog.DisplayError_x0028_Type_x002C__x0020_string_x002C__x0020_string_x002C__x0020_GenericCallback_x0029_>
  <viva.MessageDialog.RequestBlackWhiteList_x0028_string_x002C__x0020_string_x002C__x0020_string_x002C__x0020_List_x003C_string_x003E__x002C__x0020_List_x003C_string_x003E__x002C__x0020_StringListReturnFunc_x002C__x0020_GenericCallback_x0029_>
    <signature>viva.MessageDialog.RequestBlackWhiteList(string, string, string, List&lt;string&gt;, List&lt;string&gt;, StringListReturnFunc, GenericCallback)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>RequestBlackWhiteList</name>
    <token>public void RequestBlackWhiteList(string title, string instruction1, string instruction2, List&lt;string&gt; _whitelist, List&lt;string&gt; _blacklist, StringListReturnFunc onAccept=null, GenericCallback onCancel=null)</token>
    <scope>viva.MessageDialog</scope>
    <params>
      <title>string</title>
      <instruction1>string</instruction1>
      <instruction2>string</instruction2>
      <_whitelist>List&lt;string&gt;</_whitelist>
      <_blacklist>List&lt;string&gt;</_blacklist>
      <onAccept>StringListReturnFunc</onAccept>
      <onCancel>GenericCallback</onCancel>
    </params>
  </viva.MessageDialog.RequestBlackWhiteList_x0028_string_x002C__x0020_string_x002C__x0020_string_x002C__x0020_List_x003C_string_x003E__x002C__x0020_List_x003C_string_x003E__x002C__x0020_StringListReturnFunc_x002C__x0020_GenericCallback_x0029_>
  <viva.MessageDialog.RequestInput_x0028_string_x002C__x0020_string_x002C__x0020_StringReturnFunc_x002C__x0020_GenericCallback_x0029_>
    <signature>viva.MessageDialog.RequestInput(string, string, StringReturnFunc, GenericCallback)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>RequestInput</name>
    <token>public void RequestInput(string title, string error, StringReturnFunc onAccept=null, GenericCallback onCancel=null)</token>
    <scope>viva.MessageDialog</scope>
    <params>
      <title>string</title>
      <error>string</error>
      <onAccept>StringReturnFunc</onAccept>
      <onCancel>GenericCallback</onCancel>
    </params>
  </viva.MessageDialog.RequestInput_x0028_string_x002C__x0020_string_x002C__x0020_StringReturnFunc_x002C__x0020_GenericCallback_x0029_>
  <viva.Model>
    <signature>viva.Model</signature>
    <childcount>38</childcount>
    <type>Class</type>
    <name>Model</name>
    <token>public class Model : VivaEditable </token>
    <scope>viva</scope>
  </viva.Model>
  <viva.Model.root>
    <signature>viva.Model.root</signature>
    <childcount>0</childcount>
    <type>Property</type>
    <name>root</name>
    <token>public static string root { get; }</token>
    <scope>viva.Model</scope>
  </viva.Model.root>
  <viva.Model.name>
    <signature>viva.Model.name</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>name</name>
    <token>public readonly string name = </token>
    <scope>viva.Model</scope>
  </viva.Model.name>
  <viva.Model.animationPlayer>
    <signature>viva.Model.animationPlayer</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>animationPlayer</name>
    <token>public readonly AnimationPlayer animationPlayer = </token>
    <scope>viva.Model</scope>
  </viva.Model.animationPlayer>
  <viva.Model.rootTransform>
    <signature>viva.Model.rootTransform</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>rootTransform</name>
    <token>public readonly Transform rootTransform = </token>
    <scope>viva.Model</scope>
  </viva.Model.rootTransform>
  <viva.Model.bones>
    <signature>viva.Model.bones</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>bones</name>
    <token>public readonly Transform[] bones = </token>
    <scope>viva.Model</scope>
  </viva.Model.bones>
  <viva.Model.meshTransform>
    <signature>viva.Model.meshTransform</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>meshTransform</name>
    <token>public readonly Transform meshTransform = </token>
    <scope>viva.Model</scope>
  </viva.Model.meshTransform>
  <viva.Model.skinnedMeshRenderer>
    <signature>viva.Model.skinnedMeshRenderer</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>skinnedMeshRenderer</name>
    <token>public readonly SkinnedMeshRenderer skinnedMeshRenderer = </token>
    <scope>viva.Model</scope>
  </viva.Model.skinnedMeshRenderer>
  <viva.Model.meshRenderer>
    <signature>viva.Model.meshRenderer</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>meshRenderer</name>
    <token>public readonly MeshRenderer meshRenderer = </token>
    <scope>viva.Model</scope>
  </viva.Model.meshRenderer>
  <viva.Model.meshFilter>
    <signature>viva.Model.meshFilter</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>meshFilter</name>
    <token>public readonly MeshFilter meshFilter = </token>
    <scope>viva.Model</scope>
  </viva.Model.meshFilter>
  <viva.Model.armature>
    <signature>viva.Model.armature</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>armature</name>
    <token>public readonly Transform armature = </token>
    <scope>viva.Model</scope>
  </viva.Model.armature>
  <viva.Model.profile>
    <signature>viva.Model.profile</signature>
    <childcount>0</childcount>
    <type>Property</type>
    <name>profile</name>
    <token>public RagdollProfile profile { get; set; }</token>
    <scope>viva.Model</scope>
  </viva.Model.profile>
  <viva.Model.boneBindings>
    <signature>viva.Model.boneBindings</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>boneBindings</name>
    <token>public readonly Dictionary&lt;int,Transform&gt; boneBindings = new Dictionary&lt;int,Transform&gt;();</token>
    <scope>viva.Model</scope>
  </viva.Model.boneBindings>
  <viva.Model.sourceRequest>
    <signature>viva.Model.sourceRequest</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>sourceRequest</name>
    <token>public readonly FBXRequest sourceRequest = </token>
    <scope>viva.Model</scope>
  </viva.Model.sourceRequest>
  <viva.Model.textureBindings>
    <signature>viva.Model.textureBindings</signature>
    <childcount>0</childcount>
    <type>Property</type>
    <name>textureBindings</name>
    <token>public TextureBindings textureBindings { get; set; }</token>
    <scope>viva.Model</scope>
  </viva.Model.textureBindings>
  <viva.Model.deltaTransform>
    <signature>viva.Model.deltaTransform</signature>
    <childcount>0</childcount>
    <type>Property</type>
    <name>deltaTransform</name>
    <token>public Transform deltaTransform { get; set; }</token>
    <scope>viva.Model</scope>
  </viva.Model.deltaTransform>
  <viva.Model.deltaTransformBindHash>
    <signature>viva.Model.deltaTransformBindHash</signature>
    <childcount>0</childcount>
    <type>Property</type>
    <name>deltaTransformBindHash</name>
    <token>public int deltaTransformBindHash { get; set; }</token>
    <scope>viva.Model</scope>
  </viva.Model.deltaTransformBindHash>
  <viva.Model.ragdollCompatible>
    <signature>viva.Model.ragdollCompatible</signature>
    <childcount>0</childcount>
    <type>Property</type>
    <name>ragdollCompatible</name>
    <token>public bool ragdollCompatible { get; }</token>
    <scope>viva.Model</scope>
  </viva.Model.ragdollCompatible>
  <viva.Model.Model_x0028_string_x002C__x0020_Transform_x002C__x0020_Transform_x002C__x0020_SkinnedMeshRenderer_x002C__x0020_Transform_x002C__x0020_FBXRequest_x0029_>
    <signature>viva.Model.Model(string, Transform, Transform, SkinnedMeshRenderer, Transform, FBXRequest)</signature>
    <childcount>0</childcount>
    <type>Constructor</type>
    <name>Model</name>
    <token>public  Model(string _name, Transform _rootTransform, Transform _meshTransform, SkinnedMeshRenderer _smr, Transform _armature, FBXRequest _sourceRequest)</token>
    <scope>viva.Model</scope>
    <params>
      <_name>string</_name>
      <_rootTransform>Transform</_rootTransform>
      <_meshTransform>Transform</_meshTransform>
      <_smr>SkinnedMeshRenderer</_smr>
      <_armature>Transform</_armature>
      <_sourceRequest>FBXRequest</_sourceRequest>
    </params>
  </viva.Model.Model_x0028_string_x002C__x0020_Transform_x002C__x0020_Transform_x002C__x0020_SkinnedMeshRenderer_x002C__x0020_Transform_x002C__x0020_FBXRequest_x0029_>
  <viva.Model.Model_x0028_string_x002C__x0020_Transform_x002C__x0020_MeshRenderer_x002C__x0020_MeshFilter_x002C__x0020_FBXRequest_x0029_>
    <signature>viva.Model.Model(string, Transform, MeshRenderer, MeshFilter, FBXRequest)</signature>
    <childcount>0</childcount>
    <type>Constructor</type>
    <name>Model</name>
    <token>public  Model(string _name, Transform _rootTransform, MeshRenderer _mr, MeshFilter _mf, FBXRequest _sourceRequest)</token>
    <scope>viva.Model</scope>
    <params>
      <_name>string</_name>
      <_rootTransform>Transform</_rootTransform>
      <_mr>MeshRenderer</_mr>
      <_mf>MeshFilter</_mf>
      <_sourceRequest>FBXRequest</_sourceRequest>
    </params>
  </viva.Model.Model_x0028_string_x002C__x0020_Transform_x002C__x0020_MeshRenderer_x002C__x0020_MeshFilter_x002C__x0020_FBXRequest_x0029_>
  <viva.Model.OnCreateMenuSelected_x0028__x0029_>
    <signature>viva.Model.OnCreateMenuSelected()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>OnCreateMenuSelected</name>
    <token>public override void OnCreateMenuSelected()</token>
    <scope>viva.Model</scope>
  </viva.Model.OnCreateMenuSelected_x0028__x0029_>
  <viva.Model.OnCreateMenuDeselected_x0028__x0029_>
    <signature>viva.Model.OnCreateMenuDeselected()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>OnCreateMenuDeselected</name>
    <token>public override void OnCreateMenuDeselected()</token>
    <scope>viva.Model</scope>
  </viva.Model.OnCreateMenuDeselected_x0028__x0029_>
  <viva.Model.BuildBoneBindings_x0028__x0029_>
    <signature>viva.Model.BuildBoneBindings()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>BuildBoneBindings</name>
    <token>public void BuildBoneBindings()</token>
    <scope>viva.Model</scope>
  </viva.Model.BuildBoneBindings_x0028__x0029_>
  <viva.Model.ResizeHeight_x0028_float_x003F__x0029_>
    <signature>viva.Model.ResizeHeight(float?)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>ResizeHeight</name>
    <token>public void ResizeHeight(float? height)</token>
    <scope>viva.Model</scope>
    <params>
      <height>float?</height>
    </params>
  </viva.Model.ResizeHeight_x0028_float_x003F__x0029_>
  <viva.Model.AttemptSetRagdollProfile_x0028_RagdollProfile_x002C__x0020_string_x0029_>
    <signature>viva.Model.AttemptSetRagdollProfile(RagdollProfile, string)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>AttemptSetRagdollProfile</name>
    <token>public bool AttemptSetRagdollProfile(RagdollProfile newRagdollProfile, out string error)</token>
    <scope>viva.Model</scope>
    <params>
      <newRagdollProfile>RagdollProfile</newRagdollProfile>
      <error>string</error>
    </params>
  </viva.Model.AttemptSetRagdollProfile_x0028_RagdollProfile_x002C__x0020_string_x0029_>
  <viva.Model.GetInfoHeaderTitleText_x0028__x0029_>
    <signature>viva.Model.GetInfoHeaderTitleText()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>GetInfoHeaderTitleText</name>
    <token>public override string GetInfoHeaderTitleText()</token>
    <scope>viva.Model</scope>
  </viva.Model.GetInfoHeaderTitleText_x0028__x0029_>
  <viva.Model.GenerateThumbnail_x0028_Thumbnail_x0029_>
    <signature>viva.Model.GenerateThumbnail(Thumbnail)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>GenerateThumbnail</name>
    <token>public override void GenerateThumbnail(Thumbnail thumbnail)</token>
    <scope>viva.Model</scope>
    <params>
      <thumbnail>Thumbnail</thumbnail>
    </params>
  </viva.Model.GenerateThumbnail_x0028_Thumbnail_x0029_>
  <viva.Model.GetInfoHeaderText_x0028__x0029_>
    <signature>viva.Model.GetInfoHeaderText()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>GetInfoHeaderText</name>
    <token>public override string GetInfoHeaderText()</token>
    <scope>viva.Model</scope>
  </viva.Model.GetInfoHeaderText_x0028__x0029_>
  <viva.Model.GetInfoBodyContentText_x0028__x0029_>
    <signature>viva.Model.GetInfoBodyContentText()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>GetInfoBodyContentText</name>
    <token>public override string GetInfoBodyContentText()</token>
    <scope>viva.Model</scope>
  </viva.Model.GetInfoBodyContentText_x0028__x0029_>
  <viva.MouseHoverCallbacks>
    <signature>viva.MouseHoverCallbacks</signature>
    <childcount>9</childcount>
    <type>Class</type>
    <name>MouseHoverCallbacks</name>
    <token>public class MouseHoverCallbacks : MonoBehaviour, IPointerEnterHandler, IPointerExitHandler </token>
    <scope>viva</scope>
  </viva.MouseHoverCallbacks>
  <viva.MouseHoverCallbacks.onEnter>
    <signature>viva.MouseHoverCallbacks.onEnter</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>onEnter</name>
    <token>public GenericCallback onEnter </token>
    <scope>viva.MouseHoverCallbacks</scope>
  </viva.MouseHoverCallbacks.onEnter>
  <viva.MouseHoverCallbacks.onExit>
    <signature>viva.MouseHoverCallbacks.onExit</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>onExit</name>
    <token>public GenericCallback onExit </token>
    <scope>viva.MouseHoverCallbacks</scope>
  </viva.MouseHoverCallbacks.onExit>
  <viva.MouseHoverCallbacks.onHover>
    <signature>viva.MouseHoverCallbacks.onHover</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>onHover</name>
    <token>public GenericCallback onHover </token>
    <scope>viva.MouseHoverCallbacks</scope>
  </viva.MouseHoverCallbacks.onHover>
  <viva.MouseHoverCallbacks.OnPointerEnter_x0028_PointerEventData_x0029_>
    <signature>viva.MouseHoverCallbacks.OnPointerEnter(PointerEventData)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>OnPointerEnter</name>
    <token>public void OnPointerEnter(PointerEventData pointerEventData)</token>
    <scope>viva.MouseHoverCallbacks</scope>
    <params>
      <pointerEventData>PointerEventData</pointerEventData>
    </params>
  </viva.MouseHoverCallbacks.OnPointerEnter_x0028_PointerEventData_x0029_>
  <viva.MouseHoverCallbacks.OnPointerExit_x0028_PointerEventData_x0029_>
    <signature>viva.MouseHoverCallbacks.OnPointerExit(PointerEventData)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>OnPointerExit</name>
    <token>public void OnPointerExit(PointerEventData pointerEventData)</token>
    <scope>viva.MouseHoverCallbacks</scope>
    <params>
      <pointerEventData>PointerEventData</pointerEventData>
    </params>
  </viva.MouseHoverCallbacks.OnPointerExit_x0028_PointerEventData_x0029_>
  <viva.NavUtil>
    <signature>viva.NavUtil</signature>
    <childcount>7</childcount>
    <type>Class</type>
    <name>NavUtil</name>
    <token>public static class NavUtil </token>
    <scope>viva</scope>
  </viva.NavUtil>
  <viva.NavUtil.FindPath_x0028_Vector3_x002C__x0020_Vector3_x0029_>
    <signature>viva.NavUtil.FindPath(Vector3, Vector3)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>FindPath</name>
    <token>public static Vector3[] FindPath(Vector3 start, Vector3 end)</token>
    <scope>viva.NavUtil</scope>
    <params>
      <start>Vector3</start>
      <end>Vector3</end>
    </params>
  </viva.NavUtil.FindPath_x0028_Vector3_x002C__x0020_Vector3_x0029_>
  <viva.NavUtil.isOnWalkableFloor_x0028_Vector3_x0029_>
    <signature>viva.NavUtil.isOnWalkableFloor(Vector3)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>isOnWalkableFloor</name>
    <token>public static bool isOnWalkableFloor(Vector3 pos)</token>
    <scope>viva.NavUtil</scope>
    <params>
      <pos>Vector3</pos>
    </params>
  </viva.NavUtil.isOnWalkableFloor_x0028_Vector3_x0029_>
  <viva.PlayerControls>
    <signature>viva.PlayerControls</signature>
    <childcount>14</childcount>
    <type>Class</type>
    <name>PlayerControls</name>
    <token>public partial class PlayerControls : MonoBehaviour </token>
    <scope>viva</scope>
  </viva.PlayerControls>
  <viva.PlayerControls.playerKeySet>
    <signature>viva.PlayerControls.playerKeySet</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>playerKeySet</name>
    <token>public KeySet playerKeySet </token>
    <scope>viva.PlayerControls</scope>
  </viva.PlayerControls.playerKeySet>
  <viva.PlayerControls.movementFunc>
    <signature>viva.PlayerControls.movementFunc</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>movementFunc</name>
    <token>public GenericCallback movementFunc </token>
    <scope>viva.PlayerControls</scope>
  </viva.PlayerControls.movementFunc>
  <viva.PlayerMovement>
    <signature>viva.PlayerMovement</signature>
    <childcount>23</childcount>
    <type>Class</type>
    <name>PlayerMovement</name>
    <token>public partial class PlayerMovement : MonoBehaviour </token>
    <scope>viva</scope>
  </viva.PlayerMovement>
  <viva.PlayerMovement.body>
    <signature>viva.PlayerMovement.body</signature>
    <childcount>0</childcount>
    <type>Property</type>
    <name>body</name>
    <token>public Rigidbody body { get; }</token>
    <scope>viva.PlayerMovement</scope>
  </viva.PlayerMovement.body>
  <viva.PlayerMovement.keyboardMouseVel>
    <signature>viva.PlayerMovement.keyboardMouseVel</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>keyboardMouseVel</name>
    <token>public Vector2 keyboardMouseVel </token>
    <scope>viva.PlayerMovement</scope>
  </viva.PlayerMovement.keyboardMouseVel>
  <viva.PlayerMovement.movementFunc>
    <signature>viva.PlayerMovement.movementFunc</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>movementFunc</name>
    <token>public GenericCallback movementFunc </token>
    <scope>viva.PlayerMovement</scope>
  </viva.PlayerMovement.movementFunc>
  <viva.PlayerMovement.GroundMovement_x0028__x0029_>
    <signature>viva.PlayerMovement.GroundMovement()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>GroundMovement</name>
    <token>public void GroundMovement()</token>
    <scope>viva.PlayerMovement</scope>
  </viva.PlayerMovement.GroundMovement_x0028__x0029_>
  <viva.PlayerMovement.FlyMovement_x0028__x0029_>
    <signature>viva.PlayerMovement.FlyMovement()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>FlyMovement</name>
    <token>public void FlyMovement()</token>
    <scope>viva.PlayerMovement</scope>
  </viva.PlayerMovement.FlyMovement_x0028__x0029_>
  <viva.PlayerMovement.KeyboardForwardDown_x0028__x0029_>
    <signature>viva.PlayerMovement.KeyboardForwardDown()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>KeyboardForwardDown</name>
    <token>public void KeyboardForwardDown()</token>
    <scope>viva.PlayerMovement</scope>
  </viva.PlayerMovement.KeyboardForwardDown_x0028__x0029_>
  <viva.PlayerMovement.KeyboardForwardUp_x0028__x0029_>
    <signature>viva.PlayerMovement.KeyboardForwardUp()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>KeyboardForwardUp</name>
    <token>public void KeyboardForwardUp()</token>
    <scope>viva.PlayerMovement</scope>
  </viva.PlayerMovement.KeyboardForwardUp_x0028__x0029_>
  <viva.PlayerMovement.KeyboardBackwardDown_x0028__x0029_>
    <signature>viva.PlayerMovement.KeyboardBackwardDown()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>KeyboardBackwardDown</name>
    <token>public void KeyboardBackwardDown()</token>
    <scope>viva.PlayerMovement</scope>
  </viva.PlayerMovement.KeyboardBackwardDown_x0028__x0029_>
  <viva.PlayerMovement.KeyboardBackwardUp_x0028__x0029_>
    <signature>viva.PlayerMovement.KeyboardBackwardUp()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>KeyboardBackwardUp</name>
    <token>public void KeyboardBackwardUp()</token>
    <scope>viva.PlayerMovement</scope>
  </viva.PlayerMovement.KeyboardBackwardUp_x0028__x0029_>
  <viva.PlayerMovement.KeyboardRightDown_x0028__x0029_>
    <signature>viva.PlayerMovement.KeyboardRightDown()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>KeyboardRightDown</name>
    <token>public void KeyboardRightDown()</token>
    <scope>viva.PlayerMovement</scope>
  </viva.PlayerMovement.KeyboardRightDown_x0028__x0029_>
  <viva.PlayerMovement.KeyboardRightUp_x0028__x0029_>
    <signature>viva.PlayerMovement.KeyboardRightUp()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>KeyboardRightUp</name>
    <token>public void KeyboardRightUp()</token>
    <scope>viva.PlayerMovement</scope>
  </viva.PlayerMovement.KeyboardRightUp_x0028__x0029_>
  <viva.PlayerMovement.KeyboardLeftDown_x0028__x0029_>
    <signature>viva.PlayerMovement.KeyboardLeftDown()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>KeyboardLeftDown</name>
    <token>public void KeyboardLeftDown()</token>
    <scope>viva.PlayerMovement</scope>
  </viva.PlayerMovement.KeyboardLeftDown_x0028__x0029_>
  <viva.PlayerMovement.KeyboardLeftUp_x0028__x0029_>
    <signature>viva.PlayerMovement.KeyboardLeftUp()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>KeyboardLeftUp</name>
    <token>public void KeyboardLeftUp()</token>
    <scope>viva.PlayerMovement</scope>
  </viva.PlayerMovement.KeyboardLeftUp_x0028__x0029_>
  <viva.RagdollMuscle>
    <signature>viva.RagdollMuscle</signature>
    <childcount>17</childcount>
    <type>Enum</type>
    <name>RagdollMuscle</name>
    <token>public enum RagdollMuscle </token>
    <scope>viva</scope>
  </viva.RagdollMuscle>
  <viva.RagdollMuscle.HIPS>
    <signature>viva.RagdollMuscle.HIPS</signature>
    <childcount>0</childcount>
    <type>EnumValue</type>
    <name>HIPS</name>
    <token>HIPS</token>
    <scope>viva.RagdollMuscle</scope>
  </viva.RagdollMuscle.HIPS>
  <viva.RagdollMuscle.LOWER_SPINE>
    <signature>viva.RagdollMuscle.LOWER_SPINE</signature>
    <childcount>0</childcount>
    <type>EnumValue</type>
    <name>LOWER_SPINE</name>
    <token>LOWER_SPINE</token>
    <scope>viva.RagdollMuscle</scope>
  </viva.RagdollMuscle.LOWER_SPINE>
  <viva.RagdollMuscle.UPPER_SPINE>
    <signature>viva.RagdollMuscle.UPPER_SPINE</signature>
    <childcount>0</childcount>
    <type>EnumValue</type>
    <name>UPPER_SPINE</name>
    <token>UPPER_SPINE</token>
    <scope>viva.RagdollMuscle</scope>
  </viva.RagdollMuscle.UPPER_SPINE>
  <viva.RagdollMuscle.NECK>
    <signature>viva.RagdollMuscle.NECK</signature>
    <childcount>0</childcount>
    <type>EnumValue</type>
    <name>NECK</name>
    <token>NECK</token>
    <scope>viva.RagdollMuscle</scope>
  </viva.RagdollMuscle.NECK>
  <viva.RagdollMuscle.HEAD>
    <signature>viva.RagdollMuscle.HEAD</signature>
    <childcount>0</childcount>
    <type>EnumValue</type>
    <name>HEAD</name>
    <token>HEAD</token>
    <scope>viva.RagdollMuscle</scope>
  </viva.RagdollMuscle.HEAD>
  <viva.RagdollMuscle.UPPER_LEG_R>
    <signature>viva.RagdollMuscle.UPPER_LEG_R</signature>
    <childcount>0</childcount>
    <type>EnumValue</type>
    <name>UPPER_LEG_R</name>
    <token>UPPER_LEG_R</token>
    <scope>viva.RagdollMuscle</scope>
  </viva.RagdollMuscle.UPPER_LEG_R>
  <viva.RagdollMuscle.UPPER_LEG_L>
    <signature>viva.RagdollMuscle.UPPER_LEG_L</signature>
    <childcount>0</childcount>
    <type>EnumValue</type>
    <name>UPPER_LEG_L</name>
    <token>UPPER_LEG_L</token>
    <scope>viva.RagdollMuscle</scope>
  </viva.RagdollMuscle.UPPER_LEG_L>
  <viva.RagdollMuscle.LEG_R>
    <signature>viva.RagdollMuscle.LEG_R</signature>
    <childcount>0</childcount>
    <type>EnumValue</type>
    <name>LEG_R</name>
    <token>LEG_R</token>
    <scope>viva.RagdollMuscle</scope>
  </viva.RagdollMuscle.LEG_R>
  <viva.RagdollMuscle.LEG_L>
    <signature>viva.RagdollMuscle.LEG_L</signature>
    <childcount>0</childcount>
    <type>EnumValue</type>
    <name>LEG_L</name>
    <token>LEG_L</token>
    <scope>viva.RagdollMuscle</scope>
  </viva.RagdollMuscle.LEG_L>
  <viva.RagdollMuscle.FOOT_R>
    <signature>viva.RagdollMuscle.FOOT_R</signature>
    <childcount>0</childcount>
    <type>EnumValue</type>
    <name>FOOT_R</name>
    <token>FOOT_R</token>
    <scope>viva.RagdollMuscle</scope>
  </viva.RagdollMuscle.FOOT_R>
  <viva.RagdollMuscle.FOOT_L>
    <signature>viva.RagdollMuscle.FOOT_L</signature>
    <childcount>0</childcount>
    <type>EnumValue</type>
    <name>FOOT_L</name>
    <token>FOOT_L</token>
    <scope>viva.RagdollMuscle</scope>
  </viva.RagdollMuscle.FOOT_L>
  <viva.RagdollMuscle.UPPER_ARM_R>
    <signature>viva.RagdollMuscle.UPPER_ARM_R</signature>
    <childcount>0</childcount>
    <type>EnumValue</type>
    <name>UPPER_ARM_R</name>
    <token>UPPER_ARM_R</token>
    <scope>viva.RagdollMuscle</scope>
  </viva.RagdollMuscle.UPPER_ARM_R>
  <viva.RagdollMuscle.UPPER_ARM_L>
    <signature>viva.RagdollMuscle.UPPER_ARM_L</signature>
    <childcount>0</childcount>
    <type>EnumValue</type>
    <name>UPPER_ARM_L</name>
    <token>UPPER_ARM_L</token>
    <scope>viva.RagdollMuscle</scope>
  </viva.RagdollMuscle.UPPER_ARM_L>
  <viva.RagdollMuscle.ARM_R>
    <signature>viva.RagdollMuscle.ARM_R</signature>
    <childcount>0</childcount>
    <type>EnumValue</type>
    <name>ARM_R</name>
    <token>ARM_R</token>
    <scope>viva.RagdollMuscle</scope>
  </viva.RagdollMuscle.ARM_R>
  <viva.RagdollMuscle.ARM_L>
    <signature>viva.RagdollMuscle.ARM_L</signature>
    <childcount>0</childcount>
    <type>EnumValue</type>
    <name>ARM_L</name>
    <token>ARM_L</token>
    <scope>viva.RagdollMuscle</scope>
  </viva.RagdollMuscle.ARM_L>
  <viva.RagdollMuscle.HAND_R>
    <signature>viva.RagdollMuscle.HAND_R</signature>
    <childcount>0</childcount>
    <type>EnumValue</type>
    <name>HAND_R</name>
    <token>HAND_R</token>
    <scope>viva.RagdollMuscle</scope>
  </viva.RagdollMuscle.HAND_R>
  <viva.RagdollMuscle.HAND_L>
    <signature>viva.RagdollMuscle.HAND_L</signature>
    <childcount>0</childcount>
    <type>EnumValue</type>
    <name>HAND_L</name>
    <token>HAND_L</token>
    <scope>viva.RagdollMuscle</scope>
  </viva.RagdollMuscle.HAND_L>
  <viva.Ragdoll>
    <signature>viva.Ragdoll</signature>
    <childcount>29</childcount>
    <type>Class</type>
    <name>Ragdoll</name>
    <token>public partial class Ragdoll : MonoBehaviour </token>
    <scope>viva</scope>
  </viva.Ragdoll>
  <viva.Ragdoll.GetMuscleBone_x0028_RagdollMuscle_x0029_>
    <signature>viva.Ragdoll.GetMuscleBone(RagdollMuscle)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>GetMuscleBone</name>
    <token>public static BipedBone GetMuscleBone(RagdollMuscle muscle)</token>
    <scope>viva.Ragdoll</scope>
    <params>
      <muscle>RagdollMuscle</muscle>
    </params>
  </viva.Ragdoll.GetMuscleBone_x0028_RagdollMuscle_x0029_>
  <viva.Ragdoll.rigidBodies>
    <signature>viva.Ragdoll.rigidBodies</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>rigidBodies</name>
    <token>public Rigidbody[] rigidBodies </token>
    <scope>viva.Ragdoll</scope>
  </viva.Ragdoll.rigidBodies>
  <viva.Ragdoll.mappingWeight>
    <signature>viva.Ragdoll.mappingWeight</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>mappingWeight</name>
    <token>[Range(0f, 1f)]
public float mappingWeight </token>
    <scope>viva.Ragdoll</scope>
  </viva.Ragdoll.mappingWeight>
  <viva.Ragdoll.pinWeight>
    <signature>viva.Ragdoll.pinWeight</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>pinWeight</name>
    <token>[Range(0f, 1f)]
public float pinWeight </token>
    <scope>viva.Ragdoll</scope>
  </viva.Ragdoll.pinWeight>
  <viva.Ragdoll.muscleWeight>
    <signature>viva.Ragdoll.muscleWeight</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>muscleWeight</name>
    <token>[Range(0f, 1f)]
public float muscleWeight </token>
    <scope>viva.Ragdoll</scope>
  </viva.Ragdoll.muscleWeight>
  <viva.Ragdoll.muscleSpring>
    <signature>viva.Ragdoll.muscleSpring</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>muscleSpring</name>
    <token>public float muscleSpring </token>
    <scope>viva.Ragdoll</scope>
  </viva.Ragdoll.muscleSpring>
  <viva.Ragdoll.muscleDamper>
    <signature>viva.Ragdoll.muscleDamper</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>muscleDamper</name>
    <token>public float muscleDamper </token>
    <scope>viva.Ragdoll</scope>
  </viva.Ragdoll.muscleDamper>
  <viva.Ragdoll.model>
    <signature>viva.Ragdoll.model</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>model</name>
    <token>public Model model </token>
    <scope>viva.Ragdoll</scope>
  </viva.Ragdoll.model>
  <viva.Ragdoll.floorPos>
    <signature>viva.Ragdoll.floorPos</signature>
    <childcount>0</childcount>
    <type>Property</type>
    <name>floorPos</name>
    <token>public Vector3 floorPos { get; set; }</token>
    <scope>viva.Ragdoll</scope>
  </viva.Ragdoll.floorPos>
  <viva.Ragdoll.animationDelta>
    <signature>viva.Ragdoll.animationDelta</signature>
    <childcount>0</childcount>
    <type>Property</type>
    <name>animationDelta</name>
    <token>public float animationDelta { get; set; }</token>
    <scope>viva.Ragdoll</scope>
  </viva.Ragdoll.animationDelta>
  <viva.Ragdoll.hasBalance>
    <signature>viva.Ragdoll.hasBalance</signature>
    <childcount>0</childcount>
    <type>Property</type>
    <name>hasBalance</name>
    <token>public bool hasBalance { get; }</token>
    <scope>viva.Ragdoll</scope>
  </viva.Ragdoll.hasBalance>
  <viva.Ragdoll.head>
    <signature>viva.Ragdoll.head</signature>
    <childcount>0</childcount>
    <type>Property</type>
    <name>head</name>
    <token>public MuscleLite head { get; }</token>
    <scope>viva.Ragdoll</scope>
  </viva.Ragdoll.head>
  <viva.Ragdoll.neck>
    <signature>viva.Ragdoll.neck</signature>
    <childcount>0</childcount>
    <type>Property</type>
    <name>neck</name>
    <token>public MuscleLite neck { get; }</token>
    <scope>viva.Ragdoll</scope>
  </viva.Ragdoll.neck>
  <viva.Ragdoll.upperSpine>
    <signature>viva.Ragdoll.upperSpine</signature>
    <childcount>0</childcount>
    <type>Property</type>
    <name>upperSpine</name>
    <token>public MuscleLite upperSpine { get; }</token>
    <scope>viva.Ragdoll</scope>
  </viva.Ragdoll.upperSpine>
  <viva.Ragdoll.lowerSpine>
    <signature>viva.Ragdoll.lowerSpine</signature>
    <childcount>0</childcount>
    <type>Property</type>
    <name>lowerSpine</name>
    <token>public MuscleLite lowerSpine { get; }</token>
    <scope>viva.Ragdoll</scope>
  </viva.Ragdoll.lowerSpine>
  <viva.Ragdoll.hips>
    <signature>viva.Ragdoll.hips</signature>
    <childcount>0</childcount>
    <type>Property</type>
    <name>hips</name>
    <token>public MuscleLite hips { get; }</token>
    <scope>viva.Ragdoll</scope>
  </viva.Ragdoll.hips>
  <viva.Ragdoll.leftFoot>
    <signature>viva.Ragdoll.leftFoot</signature>
    <childcount>0</childcount>
    <type>Property</type>
    <name>leftFoot</name>
    <token>public MuscleLite leftFoot { get; }</token>
    <scope>viva.Ragdoll</scope>
  </viva.Ragdoll.leftFoot>
  <viva.Ragdoll.rightFoot>
    <signature>viva.Ragdoll.rightFoot</signature>
    <childcount>0</childcount>
    <type>Property</type>
    <name>rightFoot</name>
    <token>public MuscleLite rightFoot { get; }</token>
    <scope>viva.Ragdoll</scope>
  </viva.Ragdoll.rightFoot>
  <viva.Ragdoll.BindToModel_x0028_Model_x0029_>
    <signature>viva.Ragdoll.BindToModel(Model)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>BindToModel</name>
    <token>public void BindToModel(Model _model)</token>
    <scope>viva.Ragdoll</scope>
    <params>
      <_model>Model</_model>
    </params>
  </viva.Ragdoll.BindToModel_x0028_Model_x0029_>
  <viva.RagdollEditor>
    <signature>viva.RagdollEditor</signature>
    <childcount>34</childcount>
    <type>Class</type>
    <name>RagdollEditor</name>
    <token>public class RagdollEditor : MonoBehaviour </token>
    <scope>viva</scope>
  </viva.RagdollEditor>
  <viva.RagdollEditor.tPoseEuler>
    <signature>viva.RagdollEditor.tPoseEuler</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>tPoseEuler</name>
    <token>[SerializeField]
public Vector3[] tPoseEuler </token>
    <scope>viva.RagdollEditor</scope>
  </viva.RagdollEditor.tPoseEuler>
  <viva.RagdollEditor.OnEnable_x0028__x0029_>
    <signature>viva.RagdollEditor.OnEnable()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>OnEnable</name>
    <token>public void OnEnable()</token>
    <scope>viva.RagdollEditor</scope>
  </viva.RagdollEditor.OnEnable_x0028__x0029_>
  <viva.RagdollEditor.OnDisable_x0028__x0029_>
    <signature>viva.RagdollEditor.OnDisable()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>OnDisable</name>
    <token>public void OnDisable()</token>
    <scope>viva.RagdollEditor</scope>
  </viva.RagdollEditor.OnDisable_x0028__x0029_>
  <viva.RagdollEditor.ApplyTPose_x0028_Model_x0029_>
    <signature>viva.RagdollEditor.ApplyTPose(Model)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>ApplyTPose</name>
    <token>public void ApplyTPose(Model model)</token>
    <scope>viva.RagdollEditor</scope>
    <params>
      <model>Model</model>
    </params>
  </viva.RagdollEditor.ApplyTPose_x0028_Model_x0029_>
  <viva.RagdollEditor.Edit_x0028_Model_x002C__x0020_GenericCallback_x002C__x0020_GenericCallback_x0029_>
    <signature>viva.RagdollEditor.Edit(Model, GenericCallback, GenericCallback)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>Edit</name>
    <token>public void Edit(Model model, GenericCallback onSuccess, GenericCallback onDiscard)</token>
    <scope>viva.RagdollEditor</scope>
    <params>
      <model>Model</model>
      <onSuccess>GenericCallback</onSuccess>
      <onDiscard>GenericCallback</onDiscard>
    </params>
  </viva.RagdollEditor.Edit_x0028_Model_x002C__x0020_GenericCallback_x002C__x0020_GenericCallback_x0029_>
  <viva.BipedBone>
    <signature>viva.BipedBone</signature>
    <childcount>50</childcount>
    <type>Enum</type>
    <name>BipedBone</name>
    <token>public enum BipedBone </token>
    <scope>viva</scope>
  </viva.BipedBone>
  <viva.BipedBone.HIPS>
    <signature>viva.BipedBone.HIPS</signature>
    <childcount>0</childcount>
    <type>EnumValue</type>
    <name>HIPS</name>
    <token>HIPS</token>
    <scope>viva.BipedBone</scope>
  </viva.BipedBone.HIPS>
  <viva.BipedBone.LOWER_SPINE>
    <signature>viva.BipedBone.LOWER_SPINE</signature>
    <childcount>0</childcount>
    <type>EnumValue</type>
    <name>LOWER_SPINE</name>
    <token>LOWER_SPINE</token>
    <scope>viva.BipedBone</scope>
  </viva.BipedBone.LOWER_SPINE>
  <viva.BipedBone.UPPER_SPINE>
    <signature>viva.BipedBone.UPPER_SPINE</signature>
    <childcount>0</childcount>
    <type>EnumValue</type>
    <name>UPPER_SPINE</name>
    <token>UPPER_SPINE</token>
    <scope>viva.BipedBone</scope>
  </viva.BipedBone.UPPER_SPINE>
  <viva.BipedBone.NECK>
    <signature>viva.BipedBone.NECK</signature>
    <childcount>0</childcount>
    <type>EnumValue</type>
    <name>NECK</name>
    <token>NECK</token>
    <scope>viva.BipedBone</scope>
  </viva.BipedBone.NECK>
  <viva.BipedBone.HEAD>
    <signature>viva.BipedBone.HEAD</signature>
    <childcount>0</childcount>
    <type>EnumValue</type>
    <name>HEAD</name>
    <token>HEAD</token>
    <scope>viva.BipedBone</scope>
  </viva.BipedBone.HEAD>
  <viva.BipedBone.UPPER_LEG_R>
    <signature>viva.BipedBone.UPPER_LEG_R</signature>
    <childcount>0</childcount>
    <type>EnumValue</type>
    <name>UPPER_LEG_R</name>
    <token>UPPER_LEG_R</token>
    <scope>viva.BipedBone</scope>
  </viva.BipedBone.UPPER_LEG_R>
  <viva.BipedBone.UPPER_LEG_L>
    <signature>viva.BipedBone.UPPER_LEG_L</signature>
    <childcount>0</childcount>
    <type>EnumValue</type>
    <name>UPPER_LEG_L</name>
    <token>UPPER_LEG_L</token>
    <scope>viva.BipedBone</scope>
  </viva.BipedBone.UPPER_LEG_L>
  <viva.BipedBone.LEG_R>
    <signature>viva.BipedBone.LEG_R</signature>
    <childcount>0</childcount>
    <type>EnumValue</type>
    <name>LEG_R</name>
    <token>LEG_R</token>
    <scope>viva.BipedBone</scope>
  </viva.BipedBone.LEG_R>
  <viva.BipedBone.LEG_L>
    <signature>viva.BipedBone.LEG_L</signature>
    <childcount>0</childcount>
    <type>EnumValue</type>
    <name>LEG_L</name>
    <token>LEG_L</token>
    <scope>viva.BipedBone</scope>
  </viva.BipedBone.LEG_L>
  <viva.BipedBone.FOOT_R>
    <signature>viva.BipedBone.FOOT_R</signature>
    <childcount>0</childcount>
    <type>EnumValue</type>
    <name>FOOT_R</name>
    <token>FOOT_R</token>
    <scope>viva.BipedBone</scope>
  </viva.BipedBone.FOOT_R>
  <viva.BipedBone.FOOT_L>
    <signature>viva.BipedBone.FOOT_L</signature>
    <childcount>0</childcount>
    <type>EnumValue</type>
    <name>FOOT_L</name>
    <token>FOOT_L</token>
    <scope>viva.BipedBone</scope>
  </viva.BipedBone.FOOT_L>
  <viva.BipedBone.SHOULDER_R>
    <signature>viva.BipedBone.SHOULDER_R</signature>
    <childcount>0</childcount>
    <type>EnumValue</type>
    <name>SHOULDER_R</name>
    <token>SHOULDER_R</token>
    <scope>viva.BipedBone</scope>
  </viva.BipedBone.SHOULDER_R>
  <viva.BipedBone.SHOULDER_L>
    <signature>viva.BipedBone.SHOULDER_L</signature>
    <childcount>0</childcount>
    <type>EnumValue</type>
    <name>SHOULDER_L</name>
    <token>SHOULDER_L</token>
    <scope>viva.BipedBone</scope>
  </viva.BipedBone.SHOULDER_L>
  <viva.BipedBone.UPPER_ARM_R>
    <signature>viva.BipedBone.UPPER_ARM_R</signature>
    <childcount>0</childcount>
    <type>EnumValue</type>
    <name>UPPER_ARM_R</name>
    <token>UPPER_ARM_R</token>
    <scope>viva.BipedBone</scope>
  </viva.BipedBone.UPPER_ARM_R>
  <viva.BipedBone.UPPER_ARM_L>
    <signature>viva.BipedBone.UPPER_ARM_L</signature>
    <childcount>0</childcount>
    <type>EnumValue</type>
    <name>UPPER_ARM_L</name>
    <token>UPPER_ARM_L</token>
    <scope>viva.BipedBone</scope>
  </viva.BipedBone.UPPER_ARM_L>
  <viva.BipedBone.ARM_R>
    <signature>viva.BipedBone.ARM_R</signature>
    <childcount>0</childcount>
    <type>EnumValue</type>
    <name>ARM_R</name>
    <token>ARM_R</token>
    <scope>viva.BipedBone</scope>
  </viva.BipedBone.ARM_R>
  <viva.BipedBone.ARM_L>
    <signature>viva.BipedBone.ARM_L</signature>
    <childcount>0</childcount>
    <type>EnumValue</type>
    <name>ARM_L</name>
    <token>ARM_L</token>
    <scope>viva.BipedBone</scope>
  </viva.BipedBone.ARM_L>
  <viva.BipedBone.HAND_R>
    <signature>viva.BipedBone.HAND_R</signature>
    <childcount>0</childcount>
    <type>EnumValue</type>
    <name>HAND_R</name>
    <token>HAND_R</token>
    <scope>viva.BipedBone</scope>
  </viva.BipedBone.HAND_R>
  <viva.BipedBone.HAND_L>
    <signature>viva.BipedBone.HAND_L</signature>
    <childcount>0</childcount>
    <type>EnumValue</type>
    <name>HAND_L</name>
    <token>HAND_L</token>
    <scope>viva.BipedBone</scope>
  </viva.BipedBone.HAND_L>
  <viva.BipedBone.THUMB0_R>
    <signature>viva.BipedBone.THUMB0_R</signature>
    <childcount>0</childcount>
    <type>EnumValue</type>
    <name>THUMB0_R</name>
    <token>THUMB0_R</token>
    <scope>viva.BipedBone</scope>
  </viva.BipedBone.THUMB0_R>
  <viva.BipedBone.THUMB0_L>
    <signature>viva.BipedBone.THUMB0_L</signature>
    <childcount>0</childcount>
    <type>EnumValue</type>
    <name>THUMB0_L</name>
    <token>THUMB0_L</token>
    <scope>viva.BipedBone</scope>
  </viva.BipedBone.THUMB0_L>
  <viva.BipedBone.THUMB1_R>
    <signature>viva.BipedBone.THUMB1_R</signature>
    <childcount>0</childcount>
    <type>EnumValue</type>
    <name>THUMB1_R</name>
    <token>THUMB1_R</token>
    <scope>viva.BipedBone</scope>
  </viva.BipedBone.THUMB1_R>
  <viva.BipedBone.THUMB1_L>
    <signature>viva.BipedBone.THUMB1_L</signature>
    <childcount>0</childcount>
    <type>EnumValue</type>
    <name>THUMB1_L</name>
    <token>THUMB1_L</token>
    <scope>viva.BipedBone</scope>
  </viva.BipedBone.THUMB1_L>
  <viva.BipedBone.THUMB2_R>
    <signature>viva.BipedBone.THUMB2_R</signature>
    <childcount>0</childcount>
    <type>EnumValue</type>
    <name>THUMB2_R</name>
    <token>THUMB2_R</token>
    <scope>viva.BipedBone</scope>
  </viva.BipedBone.THUMB2_R>
  <viva.BipedBone.THUMB2_L>
    <signature>viva.BipedBone.THUMB2_L</signature>
    <childcount>0</childcount>
    <type>EnumValue</type>
    <name>THUMB2_L</name>
    <token>THUMB2_L</token>
    <scope>viva.BipedBone</scope>
  </viva.BipedBone.THUMB2_L>
  <viva.BipedBone.INDEX0_R>
    <signature>viva.BipedBone.INDEX0_R</signature>
    <childcount>0</childcount>
    <type>EnumValue</type>
    <name>INDEX0_R</name>
    <token>INDEX0_R</token>
    <scope>viva.BipedBone</scope>
  </viva.BipedBone.INDEX0_R>
  <viva.BipedBone.INDEX0_L>
    <signature>viva.BipedBone.INDEX0_L</signature>
    <childcount>0</childcount>
    <type>EnumValue</type>
    <name>INDEX0_L</name>
    <token>INDEX0_L</token>
    <scope>viva.BipedBone</scope>
  </viva.BipedBone.INDEX0_L>
  <viva.BipedBone.INDEX1_R>
    <signature>viva.BipedBone.INDEX1_R</signature>
    <childcount>0</childcount>
    <type>EnumValue</type>
    <name>INDEX1_R</name>
    <token>INDEX1_R</token>
    <scope>viva.BipedBone</scope>
  </viva.BipedBone.INDEX1_R>
  <viva.BipedBone.INDEX1_L>
    <signature>viva.BipedBone.INDEX1_L</signature>
    <childcount>0</childcount>
    <type>EnumValue</type>
    <name>INDEX1_L</name>
    <token>INDEX1_L</token>
    <scope>viva.BipedBone</scope>
  </viva.BipedBone.INDEX1_L>
  <viva.BipedBone.INDEX2_R>
    <signature>viva.BipedBone.INDEX2_R</signature>
    <childcount>0</childcount>
    <type>EnumValue</type>
    <name>INDEX2_R</name>
    <token>INDEX2_R</token>
    <scope>viva.BipedBone</scope>
  </viva.BipedBone.INDEX2_R>
  <viva.BipedBone.INDEX2_L>
    <signature>viva.BipedBone.INDEX2_L</signature>
    <childcount>0</childcount>
    <type>EnumValue</type>
    <name>INDEX2_L</name>
    <token>INDEX2_L</token>
    <scope>viva.BipedBone</scope>
  </viva.BipedBone.INDEX2_L>
  <viva.BipedBone.MIDDLE0_R>
    <signature>viva.BipedBone.MIDDLE0_R</signature>
    <childcount>0</childcount>
    <type>EnumValue</type>
    <name>MIDDLE0_R</name>
    <token>MIDDLE0_R</token>
    <scope>viva.BipedBone</scope>
  </viva.BipedBone.MIDDLE0_R>
  <viva.BipedBone.MIDDLE0_L>
    <signature>viva.BipedBone.MIDDLE0_L</signature>
    <childcount>0</childcount>
    <type>EnumValue</type>
    <name>MIDDLE0_L</name>
    <token>MIDDLE0_L</token>
    <scope>viva.BipedBone</scope>
  </viva.BipedBone.MIDDLE0_L>
  <viva.BipedBone.MIDDLE1_R>
    <signature>viva.BipedBone.MIDDLE1_R</signature>
    <childcount>0</childcount>
    <type>EnumValue</type>
    <name>MIDDLE1_R</name>
    <token>MIDDLE1_R</token>
    <scope>viva.BipedBone</scope>
  </viva.BipedBone.MIDDLE1_R>
  <viva.BipedBone.MIDDLE1_L>
    <signature>viva.BipedBone.MIDDLE1_L</signature>
    <childcount>0</childcount>
    <type>EnumValue</type>
    <name>MIDDLE1_L</name>
    <token>MIDDLE1_L</token>
    <scope>viva.BipedBone</scope>
  </viva.BipedBone.MIDDLE1_L>
  <viva.BipedBone.MIDDLE2_R>
    <signature>viva.BipedBone.MIDDLE2_R</signature>
    <childcount>0</childcount>
    <type>EnumValue</type>
    <name>MIDDLE2_R</name>
    <token>MIDDLE2_R</token>
    <scope>viva.BipedBone</scope>
  </viva.BipedBone.MIDDLE2_R>
  <viva.BipedBone.MIDDLE2_L>
    <signature>viva.BipedBone.MIDDLE2_L</signature>
    <childcount>0</childcount>
    <type>EnumValue</type>
    <name>MIDDLE2_L</name>
    <token>MIDDLE2_L</token>
    <scope>viva.BipedBone</scope>
  </viva.BipedBone.MIDDLE2_L>
  <viva.BipedBone.RING0_R>
    <signature>viva.BipedBone.RING0_R</signature>
    <childcount>0</childcount>
    <type>EnumValue</type>
    <name>RING0_R</name>
    <token>RING0_R</token>
    <scope>viva.BipedBone</scope>
  </viva.BipedBone.RING0_R>
  <viva.BipedBone.RING0_L>
    <signature>viva.BipedBone.RING0_L</signature>
    <childcount>0</childcount>
    <type>EnumValue</type>
    <name>RING0_L</name>
    <token>RING0_L</token>
    <scope>viva.BipedBone</scope>
  </viva.BipedBone.RING0_L>
  <viva.BipedBone.RING1_R>
    <signature>viva.BipedBone.RING1_R</signature>
    <childcount>0</childcount>
    <type>EnumValue</type>
    <name>RING1_R</name>
    <token>RING1_R</token>
    <scope>viva.BipedBone</scope>
  </viva.BipedBone.RING1_R>
  <viva.BipedBone.RING1_L>
    <signature>viva.BipedBone.RING1_L</signature>
    <childcount>0</childcount>
    <type>EnumValue</type>
    <name>RING1_L</name>
    <token>RING1_L</token>
    <scope>viva.BipedBone</scope>
  </viva.BipedBone.RING1_L>
  <viva.BipedBone.RING2_R>
    <signature>viva.BipedBone.RING2_R</signature>
    <childcount>0</childcount>
    <type>EnumValue</type>
    <name>RING2_R</name>
    <token>RING2_R</token>
    <scope>viva.BipedBone</scope>
  </viva.BipedBone.RING2_R>
  <viva.BipedBone.RING2_L>
    <signature>viva.BipedBone.RING2_L</signature>
    <childcount>0</childcount>
    <type>EnumValue</type>
    <name>RING2_L</name>
    <token>RING2_L</token>
    <scope>viva.BipedBone</scope>
  </viva.BipedBone.RING2_L>
  <viva.BipedBone.PINKY0_R>
    <signature>viva.BipedBone.PINKY0_R</signature>
    <childcount>0</childcount>
    <type>EnumValue</type>
    <name>PINKY0_R</name>
    <token>PINKY0_R</token>
    <scope>viva.BipedBone</scope>
  </viva.BipedBone.PINKY0_R>
  <viva.BipedBone.PINKY0_L>
    <signature>viva.BipedBone.PINKY0_L</signature>
    <childcount>0</childcount>
    <type>EnumValue</type>
    <name>PINKY0_L</name>
    <token>PINKY0_L</token>
    <scope>viva.BipedBone</scope>
  </viva.BipedBone.PINKY0_L>
  <viva.BipedBone.PINKY1_R>
    <signature>viva.BipedBone.PINKY1_R</signature>
    <childcount>0</childcount>
    <type>EnumValue</type>
    <name>PINKY1_R</name>
    <token>PINKY1_R</token>
    <scope>viva.BipedBone</scope>
  </viva.BipedBone.PINKY1_R>
  <viva.BipedBone.PINKY1_L>
    <signature>viva.BipedBone.PINKY1_L</signature>
    <childcount>0</childcount>
    <type>EnumValue</type>
    <name>PINKY1_L</name>
    <token>PINKY1_L</token>
    <scope>viva.BipedBone</scope>
  </viva.BipedBone.PINKY1_L>
  <viva.BipedBone.PINKY2_R>
    <signature>viva.BipedBone.PINKY2_R</signature>
    <childcount>0</childcount>
    <type>EnumValue</type>
    <name>PINKY2_R</name>
    <token>PINKY2_R</token>
    <scope>viva.BipedBone</scope>
  </viva.BipedBone.PINKY2_R>
  <viva.BipedBone.PINKY2_L>
    <signature>viva.BipedBone.PINKY2_L</signature>
    <childcount>0</childcount>
    <type>EnumValue</type>
    <name>PINKY2_L</name>
    <token>PINKY2_L</token>
    <scope>viva.BipedBone</scope>
  </viva.BipedBone.PINKY2_L>
  <viva.BipedBone.NONE>
    <signature>viva.BipedBone.NONE</signature>
    <childcount>0</childcount>
    <type>EnumValue</type>
    <name>NONE</name>
    <token>NONE</token>
    <scope>viva.BipedBone</scope>
  </viva.BipedBone.NONE>
  <viva.BoneInfo>
    <signature>viva.BoneInfo</signature>
    <childcount>12</childcount>
    <type>Class</type>
    <name>BoneInfo</name>
    <token>public class BoneInfo </token>
    <scope>viva</scope>
  </viva.BoneInfo>
  <viva.RagdollProfile.nonOptionalBoneCount>
    <signature>viva.RagdollProfile.nonOptionalBoneCount</signature>
    <childcount>0</childcount>
    <type>Property</type>
    <name>nonOptionalBoneCount</name>
    <token>public static int nonOptionalBoneCount { get; }</token>
    <scope>viva.BoneInfo</scope>
  </viva.RagdollProfile.nonOptionalBoneCount>
  <viva.BoneInfo.transform>
    <signature>viva.BoneInfo.transform</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>transform</name>
    <token>public readonly Transform transform = </token>
    <scope>viva.BoneInfo</scope>
  </viva.BoneInfo.transform>
  <viva.BoneInfo.boneEnum>
    <signature>viva.BoneInfo.boneEnum</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>boneEnum</name>
    <token>public readonly BipedBone boneEnum = </token>
    <scope>viva.BoneInfo</scope>
  </viva.BoneInfo.boneEnum>
  <viva.BoneInfo.rigidBody>
    <signature>viva.BoneInfo.rigidBody</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>rigidBody</name>
    <token>public Rigidbody rigidBody </token>
    <scope>viva.BoneInfo</scope>
  </viva.BoneInfo.rigidBody>
  <viva.BoneInfo.joint>
    <signature>viva.BoneInfo.joint</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>joint</name>
    <token>public ConfigurableJoint joint </token>
    <scope>viva.BoneInfo</scope>
  </viva.BoneInfo.joint>
  <viva.BoneInfo.BoneInfo_x0028_Transform_x002C__x0020_RagdollBone_x0029_>
    <signature>viva.BoneInfo.BoneInfo(Transform, BipedBone)</signature>
    <childcount>0</childcount>
    <type>Constructor</type>
    <name>BoneInfo</name>
    <token>public  BoneInfo(Transform _transform, BipedBone _boneEnum)</token>
    <scope>viva.BoneInfo</scope>
    <params>
      <_transform>Transform</_transform>
      <_boneEnum>BipedBone</_boneEnum>
    </params>
  </viva.BoneInfo.BoneInfo_x0028_Transform_x002C__x0020_RagdollBone_x0029_>
  <viva.RagdollProfile.HasMirrorVariant_x0028_RagdollBone_x0029_>
    <signature>viva.RagdollProfile.HasMirrorVariant(BipedBone)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>HasMirrorVariant</name>
    <token>public static bool HasMirrorVariant(BipedBone bone)</token>
    <scope>viva.BoneInfo</scope>
    <params>
      <bone>BipedBone</bone>
    </params>
  </viva.RagdollProfile.HasMirrorVariant_x0028_RagdollBone_x0029_>
  <viva.RagdollProfile.IsOptional_x0028_RagdollBone_x0029_>
    <signature>viva.RagdollProfile.IsOptional(BipedBone)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>IsOptional</name>
    <token>public static bool IsOptional(BipedBone bone)</token>
    <scope>viva.BoneInfo</scope>
    <params>
      <bone>BipedBone</bone>
    </params>
  </viva.RagdollProfile.IsOptional_x0028_RagdollBone_x0029_>
  <viva.BoneInfo.RequiresCollider_x0028_RagdollBone_x0029_>
    <signature>viva.BoneInfo.RequiresCollider(BipedBone)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>RequiresCollider</name>
    <token>public static bool RequiresCollider(BipedBone bone)</token>
    <scope>viva.BoneInfo</scope>
    <params>
      <bone>BipedBone</bone>
    </params>
  </viva.BoneInfo.RequiresCollider_x0028_RagdollBone_x0029_>
  <viva.RagdollProfile.GetBoneMirrorVariant_x0028_RagdollBone_x0029_>
    <signature>viva.RagdollProfile.GetBoneMirrorVariant(BipedBone)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>GetBoneMirrorVariant</name>
    <token>public static BipedBone? GetBoneMirrorVariant(BipedBone bone)</token>
    <scope>viva.BoneInfo</scope>
    <params>
      <bone>BipedBone</bone>
    </params>
  </viva.RagdollProfile.GetBoneMirrorVariant_x0028_RagdollBone_x0029_>
  <viva.BoneInfo.BoneIsAtTheEnd_x0028_RagdollBone_x0029_>
    <signature>viva.BoneInfo.BoneIsAtTheEnd(BipedBone)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>BoneIsAtTheEnd</name>
    <token>public static bool BoneIsAtTheEnd(BipedBone bone)</token>
    <scope>viva.BoneInfo</scope>
    <params>
      <bone>BipedBone</bone>
    </params>
  </viva.BoneInfo.BoneIsAtTheEnd_x0028_RagdollBone_x0029_>
  <viva.BoneInfo.GetBoneHierarchyParent_x0028_RagdollBone_x0029_>
    <signature>viva.BoneInfo.GetBoneHierarchyParent(BipedBone)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>GetBoneHierarchyParent</name>
    <token>public static BipedBone? GetBoneHierarchyParent(BipedBone bone)</token>
    <scope>viva.BoneInfo</scope>
    <params>
      <bone>BipedBone</bone>
    </params>
  </viva.BoneInfo.GetBoneHierarchyParent_x0028_RagdollBone_x0029_>
  <viva.RagdollProfile>
    <signature>viva.RagdollProfile</signature>
    <childcount>15</childcount>
    <type>Class</type>
    <name>RagdollProfile</name>
    <token>public class RagdollProfile </token>
    <scope>viva</scope>
  </viva.RagdollProfile>
  <viva.RagdollProfile.boneInfos>
    <signature>viva.RagdollProfile.boneInfos</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>boneInfos</name>
    <token>public readonly BoneInfo[] boneInfos = new BoneInfo[ System.Enum.GetValues(typeof(BipedBone)).Length ];</token>
    <scope>viva.RagdollProfile</scope>
  </viva.RagdollProfile.boneInfos>
  <viva.RagdollProfile.animLocalDeltas>
    <signature>viva.RagdollProfile.animLocalDeltas</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>animLocalDeltas</name>
    <token>public readonly Quaternion[] animLocalDeltas = new Quaternion[ RagdollProfile.nonOptionalBoneCount ];</token>
    <scope>viva.RagdollProfile</scope>
  </viva.RagdollProfile.animLocalDeltas>
  <viva.RagdollProfile.animParentDeltas>
    <signature>viva.RagdollProfile.animParentDeltas</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>animParentDeltas</name>
    <token>public readonly Quaternion[] animParentDeltas = new Quaternion[ RagdollProfile.nonOptionalBoneCount ];</token>
    <scope>viva.RagdollProfile</scope>
  </viva.RagdollProfile.animParentDeltas>
  <viva.RagdollProfile.animParentTPoseDeltas>
    <signature>viva.RagdollProfile.animParentTPoseDeltas</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>animParentTPoseDeltas</name>
    <token>public readonly Quaternion[] animParentTPoseDeltas = new Quaternion[ RagdollProfile.nonOptionalBoneCount ];</token>
    <scope>viva.RagdollProfile</scope>
  </viva.RagdollProfile.animParentTPoseDeltas>
  <viva.RagdollProfile.baseHipHeight>
    <signature>viva.RagdollProfile.baseHipHeight</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>baseHipHeight</name>
    <token>public float baseHipHeight </token>
    <scope>viva.RagdollProfile</scope>
  </viva.RagdollProfile.baseHipHeight>
  <viva.RagdollProfile.validColliders>
    <signature>viva.RagdollProfile.validColliders</signature>
    <childcount>0</childcount>
    <type>Property</type>
    <name>validColliders</name>
    <token>public bool validColliders { get; set; }</token>
    <scope>viva.RagdollProfile</scope>
  </viva.RagdollProfile.validColliders>
  <viva.RagdollProfile.RagdollProfile_x0028__x0029_>
    <signature>viva.RagdollProfile.RagdollProfile()</signature>
    <childcount>0</childcount>
    <type>Constructor</type>
    <name>RagdollProfile</name>
    <token>public  RagdollProfile()</token>
    <scope>viva.RagdollProfile</scope>
  </viva.RagdollProfile.RagdollProfile_x0028__x0029_>
  <viva.RagdollProfile.RagdollProfile_x0028_string_x005B__x005D__x002C__x0020_Model_x0029_>
    <signature>viva.RagdollProfile.RagdollProfile(string[], Model)</signature>
    <childcount>0</childcount>
    <type>Constructor</type>
    <name>RagdollProfile</name>
    <token>public  RagdollProfile(string[] boneList, Model alternate)</token>
    <scope>viva.RagdollProfile</scope>
    <params>
      <boneList>string[]</boneList>
      <alternate>Model</alternate>
    </params>
  </viva.RagdollProfile.RagdollProfile_x0028_string_x005B__x005D__x002C__x0020_Model_x0029_>
  <viva.RagdollProfile.RagdollProfile_x0028_Model_x0029_>
    <signature>viva.RagdollProfile.RagdollProfile(Model)</signature>
    <childcount>0</childcount>
    <type>Constructor</type>
    <name>RagdollProfile</name>
    <token>public  RagdollProfile(Model autoBindModel)</token>
    <scope>viva.RagdollProfile</scope>
    <params>
      <autoBindModel>Model</autoBindModel>
    </params>
  </viva.RagdollProfile.RagdollProfile_x0028_Model_x0029_>
  <viva.RagdollProfile.AssignToRagdollProfileMirrored_x0028_Transform_x005B__x005D__x002C__x0020_RagdollBone_x002C__x0020_string_x0029_>
    <signature>viva.RagdollProfile.AssignToRagdollProfileMirrored(Transform[], BipedBone, string)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>AssignToRagdollProfileMirrored</name>
    <token>public void AssignToRagdollProfileMirrored(Transform[] bones, BipedBone mirroredBoneEnum, string sourceName)</token>
    <scope>viva.RagdollProfile</scope>
    <params>
      <bones>Transform[]</bones>
      <mirroredBoneEnum>BipedBone</mirroredBoneEnum>
      <sourceName>string</sourceName>
    </params>
  </viva.RagdollProfile.AssignToRagdollProfileMirrored_x0028_Transform_x005B__x005D__x002C__x0020_RagdollBone_x002C__x0020_string_x0029_>
  <viva.RagdollProfile.AssignToRagdollProfile_x0028_Transform_x002C__x0020_RagdollBone_x0029_>
    <signature>viva.RagdollProfile.AssignToRagdollProfile(Transform, BipedBone)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>AssignToRagdollProfile</name>
    <token>public void AssignToRagdollProfile(Transform boneTransform, BipedBone boneEnum)</token>
    <scope>viva.RagdollProfile</scope>
    <params>
      <boneTransform>Transform</boneTransform>
      <boneEnum>BipedBone</boneEnum>
    </params>
  </viva.RagdollProfile.AssignToRagdollProfile_x0028_Transform_x002C__x0020_RagdollBone_x0029_>
  <viva.RagdollProfile.RagdollProfile_x0028_RagdollProfile_x0029_>
    <signature>viva.RagdollProfile.RagdollProfile(RagdollProfile)</signature>
    <childcount>0</childcount>
    <type>Constructor</type>
    <name>RagdollProfile</name>
    <token>public  RagdollProfile(RagdollProfile copy)</token>
    <scope>viva.RagdollProfile</scope>
    <params>
      <copy>RagdollProfile</copy>
    </params>
  </viva.RagdollProfile.RagdollProfile_x0028_RagdollProfile_x0029_>
  <viva.RagdollProfile.BoneInfoHasColliders_x0028_BoneInfo_x0029_>
    <signature>viva.RagdollProfile.BoneInfoHasColliders(BoneInfo)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>BoneInfoHasColliders</name>
    <token>public bool BoneInfoHasColliders(BoneInfo boneInfo)</token>
    <scope>viva.RagdollProfile</scope>
    <params>
      <boneInfo>BoneInfo</boneInfo>
    </params>
  </viva.RagdollProfile.BoneInfoHasColliders_x0028_BoneInfo_x0029_>
  <viva.RagdollProfile.ValidateProfile_x0028_string_x0029_>
    <signature>viva.RagdollProfile.ValidateProfile(string)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>ValidateProfile</name>
    <token>public bool ValidateProfile(out string error)</token>
    <scope>viva.RagdollProfile</scope>
    <params>
      <error>string</error>
    </params>
  </viva.RagdollProfile.ValidateProfile_x0028_string_x0029_>
  <viva.Script>
    <signature>viva.Script</signature>
    <childcount>18</childcount>
    <type>Class</type>
    <name>Script</name>
    <token>public class Script : VivaEditable </token>
    <scope>viva</scope>
  </viva.Script>
  <viva.Script.root>
    <signature>viva.Script.root</signature>
    <childcount>0</childcount>
    <type>Property</type>
    <name>root</name>
    <token>public static string root { get; }</token>
    <scope>viva.Script</scope>
  </viva.Script.root>
  <viva.Script.GetScript_x0028_string_x0029_>
    <signature>viva.Script.GetScript(string)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>GetScript</name>
    <token>public static Script GetScript(string name)</token>
    <scope>viva.Script</scope>
    <params>
      <name>string</name>
    </params>
  </viva.Script.GetScript_x0028_string_x0029_>
  <viva.Script.OnScriptAssetChange_x0028_string_x0029_>
    <signature>viva.Script.OnScriptAssetChange(string)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>OnScriptAssetChange</name>
    <token>public static void OnScriptAssetChange(string filepath)</token>
    <scope>viva.Script</scope>
    <params>
      <filepath>string</filepath>
    </params>
  </viva.Script.OnScriptAssetChange_x0028_string_x0029_>
  <viva.Script.name>
    <signature>viva.Script.name</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>name</name>
    <token>public readonly string name = </token>
    <scope>viva.Script</scope>
  </viva.Script.name>
  <viva.Script.sourceRequest>
    <signature>viva.Script.sourceRequest</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>sourceRequest</name>
    <token>public readonly ScriptRequest sourceRequest = </token>
    <scope>viva.Script</scope>
  </viva.Script.sourceRequest>
  <viva.Script.text>
    <signature>viva.Script.text</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>text</name>
    <token>public string text </token>
    <scope>viva.Script</scope>
  </viva.Script.text>
  <viva.Script.Script_x0028_string_x002C__x0020_ScriptRequest_x0029_>
    <signature>viva.Script.Script(string, ScriptRequest)</signature>
    <childcount>0</childcount>
    <type>Constructor</type>
    <name>Script</name>
    <token>public  Script(string _name, ScriptRequest _sourceRequest)</token>
    <scope>viva.Script</scope>
    <params>
      <_name>string</_name>
      <_sourceRequest>ScriptRequest</_sourceRequest>
    </params>
  </viva.Script.Script_x0028_string_x002C__x0020_ScriptRequest_x0029_>
  <viva.Script.GetInfoHeaderTitleText_x0028__x0029_>
    <signature>viva.Script.GetInfoHeaderTitleText()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>GetInfoHeaderTitleText</name>
    <token>public override string GetInfoHeaderTitleText()</token>
    <scope>viva.Script</scope>
  </viva.Script.GetInfoHeaderTitleText_x0028__x0029_>
  <viva.Script.GetInfoHeaderText_x0028__x0029_>
    <signature>viva.Script.GetInfoHeaderText()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>GetInfoHeaderText</name>
    <token>public override string GetInfoHeaderText()</token>
    <scope>viva.Script</scope>
  </viva.Script.GetInfoHeaderText_x0028__x0029_>
  <viva.Script.GetInfoBodyContentText_x0028__x0029_>
    <signature>viva.Script.GetInfoBodyContentText()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>GetInfoBodyContentText</name>
    <token>public override string GetInfoBodyContentText()</token>
    <scope>viva.Script</scope>
  </viva.Script.GetInfoBodyContentText_x0028__x0029_>
  <viva.Script.GenerateThumbnail_x0028_Thumbnail_x0029_>
    <signature>viva.Script.GenerateThumbnail(Thumbnail)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>GenerateThumbnail</name>
    <token>public override void GenerateThumbnail(Thumbnail thumbnail)</token>
    <scope>viva.Script</scope>
    <params>
      <thumbnail>Thumbnail</thumbnail>
    </params>
  </viva.Script.GenerateThumbnail_x0028_Thumbnail_x0029_>
  <viva.Script.CompileAndExecute_x0028_Character_x0029_>
    <signature>viva.Script.CompileAndExecute(Character)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>CompileAndExecute</name>
    <token>public bool CompileAndExecute(Character character)</token>
    <scope>viva.Script</scope>
    <params>
      <character>Character</character>
    </params>
  </viva.Script.CompileAndExecute_x0028_Character_x0029_>
  <viva.Script.HandleScriptCall_x0028_GenericCallback_x002C__x0020_string_x0029_>
    <signature>viva.Script.HandleScriptCall(GenericCallback, string)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>HandleScriptCall</name>
    <token>public static void HandleScriptCall(GenericCallback func, string funcName)</token>
    <scope>viva.Script</scope>
    <params>
      <func>GenericCallback</func>
      <funcName>string</funcName>
    </params>
  </viva.Script.HandleScriptCall_x0028_GenericCallback_x002C__x0020_string_x0029_>
  <viva.Script.HandleScriptException_x0028_System.Exception_x002C__x0020_string_x0029_>
    <signature>viva.Script.HandleScriptException(System.Exception, string)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>HandleScriptException</name>
    <token>public static void HandleScriptException(System.Exception e, string titleSuffix)</token>
    <scope>viva.Script</scope>
    <params>
      <e>System.Exception</e>
      <titleSuffix>string</titleSuffix>
    </params>
  </viva.Script.HandleScriptException_x0028_System.Exception_x002C__x0020_string_x0029_>
  <viva.ScriptManager>
    <signature>viva.ScriptManager</signature>
    <childcount>11</childcount>
    <type>Class</type>
    <name>ScriptManager</name>
    <token>public class ScriptManager </token>
    <scope>viva</scope>
  </viva.ScriptManager>
  <viva.ScriptManager.Count>
    <signature>viva.ScriptManager.Count</signature>
    <childcount>0</childcount>
    <type>Property</type>
    <name>Count</name>
    <token>public int Count { get; }</token>
    <scope>viva.ScriptManager</scope>
  </viva.ScriptManager.Count>
  <viva.ScriptManager.OnPreCompileAndExecuteAllScripts>
    <signature>viva.ScriptManager.OnPreCompileAndExecuteAllScripts</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>OnPreCompileAndExecuteAllScripts</name>
    <token>public GenericCallback OnPreCompileAndExecuteAllScripts </token>
    <scope>viva.ScriptManager</scope>
  </viva.ScriptManager.OnPreCompileAndExecuteAllScripts>
  <viva.ScriptManager.ScriptManager_x0028_Character_x0029_>
    <signature>viva.ScriptManager.ScriptManager(Character)</signature>
    <childcount>0</childcount>
    <type>Constructor</type>
    <name>ScriptManager</name>
    <token>public  ScriptManager(Character _self)</token>
    <scope>viva.ScriptManager</scope>
    <params>
      <_self>Character</_self>
    </params>
  </viva.ScriptManager.ScriptManager_x0028_Character_x0029_>
  <viva.ScriptManager.GetScript_x0028_int_x0029_>
    <signature>viva.ScriptManager.GetScript(int)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>GetScript</name>
    <token>public Script GetScript(int index)</token>
    <scope>viva.ScriptManager</scope>
    <params>
      <index>int</index>
    </params>
  </viva.ScriptManager.GetScript_x0028_int_x0029_>
  <viva.ScriptManager.AddScript_x0028_Script_x0029_>
    <signature>viva.ScriptManager.AddScript(Script)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>AddScript</name>
    <token>public void AddScript(Script script)</token>
    <scope>viva.ScriptManager</scope>
    <params>
      <script>Script</script>
    </params>
  </viva.ScriptManager.AddScript_x0028_Script_x0029_>
  <viva.ScriptManager.RemoveAllScripts_x0028__x0029_>
    <signature>viva.ScriptManager.RemoveAllScripts()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>RemoveAllScripts</name>
    <token>public void RemoveAllScripts()</token>
    <scope>viva.ScriptManager</scope>
  </viva.ScriptManager.RemoveAllScripts_x0028__x0029_>
  <viva.ScriptManager.ArchiveAllScripts_x0028__x0029_>
    <signature>viva.ScriptManager.ArchiveAllScripts()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>ArchiveAllScripts</name>
    <token>public void ArchiveAllScripts()</token>
    <scope>viva.ScriptManager</scope>
  </viva.ScriptManager.ArchiveAllScripts_x0028__x0029_>
  <viva.ScriptManager.CompileAndExecuteAllScripts_x0028__x0029_>
    <signature>viva.ScriptManager.CompileAndExecuteAllScripts()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>CompileAndExecuteAllScripts</name>
    <token>public void CompileAndExecuteAllScripts()</token>
    <scope>viva.ScriptManager</scope>
  </viva.ScriptManager.CompileAndExecuteAllScripts_x0028__x0029_>
  <viva.ScriptManager.GetScriptList_x0028__x0029_>
    <signature>viva.ScriptManager.GetScriptList()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>GetScriptList</name>
    <token>public List&lt;string&gt; GetScriptList()</token>
    <scope>viva.ScriptManager</scope>
  </viva.ScriptManager.GetScriptList_x0028__x0029_>
  <viva.ScriptRequest>
    <signature>viva.ScriptRequest</signature>
    <childcount>6</childcount>
    <type>Class</type>
    <name>ScriptRequest</name>
    <token>public class ScriptRequest : ImportRequest </token>
    <scope>viva</scope>
  </viva.ScriptRequest>
  <viva.ScriptRequest.script>
    <signature>viva.ScriptRequest.script</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>script</name>
    <token>public Script script </token>
    <scope>viva.ScriptRequest</scope>
  </viva.ScriptRequest.script>
  <viva.ScriptRequest.ScriptRequest_x0028_string_x0029_>
    <signature>viva.ScriptRequest.ScriptRequest(string)</signature>
    <childcount>0</childcount>
    <type>Constructor</type>
    <name>ScriptRequest</name>
    <token>public  ScriptRequest(string _filepath):base( _filepath, RequestType.SCRIPT )</token>
    <scope>viva.ScriptRequest</scope>
    <params>
      <_filepath>string</_filepath>
    </params>
  </viva.ScriptRequest.ScriptRequest_x0028_string_x0029_>
  <viva.ScriptRequest.Import_x0028__x0029_>
    <signature>viva.ScriptRequest.Import()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>Import</name>
    <token>public override void Import()</token>
    <scope>viva.ScriptRequest</scope>
  </viva.ScriptRequest.Import_x0028__x0029_>
  <viva.ScriptRequest.GenerateThumbnail_x0028_Thumbnail_x0029_>
    <signature>viva.ScriptRequest.GenerateThumbnail(Thumbnail)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>GenerateThumbnail</name>
    <token>public override void GenerateThumbnail(Thumbnail thumbnail)</token>
    <scope>viva.ScriptRequest</scope>
    <params>
      <thumbnail>Thumbnail</thumbnail>
    </params>
  </viva.ScriptRequest.GenerateThumbnail_x0028_Thumbnail_x0029_>
  <viva.ScriptRequest.GetInfoHeaderText_x0028__x0029_>
    <signature>viva.ScriptRequest.GetInfoHeaderText()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>GetInfoHeaderText</name>
    <token>public override string GetInfoHeaderText()</token>
    <scope>viva.ScriptRequest</scope>
  </viva.ScriptRequest.GetInfoHeaderText_x0028__x0029_>
  <viva.ScriptRequest.GetInfoBodyContentText_x0028__x0029_>
    <signature>viva.ScriptRequest.GetInfoBodyContentText()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>GetInfoBodyContentText</name>
    <token>public override string GetInfoBodyContentText()</token>
    <scope>viva.ScriptRequest</scope>
  </viva.ScriptRequest.GetInfoBodyContentText_x0028__x0029_>
  <viva.ScrollViewManager>
    <signature>viva.ScrollViewManager</signature>
    <childcount>5</childcount>
    <type>Class</type>
    <name>ScrollViewManager</name>
    <token>public class ScrollViewManager : MonoBehaviour </token>
    <scope>viva</scope>
  </viva.ScrollViewManager>
  <viva.ScrollViewManager.ScrollEntryFunc_x0028_Button_x002C__x0020_Text_x0029_>
    <signature>viva.ScrollViewManager.ScrollEntryFunc(Button, Text)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>ScrollEntryFunc</name>
    <token>public delegate void ScrollEntryFunc(Button button, Text text)</token>
    <scope>viva.ScrollViewManager</scope>
    <params>
      <button>Button</button>
      <text>Text</text>
    </params>
  </viva.ScrollViewManager.ScrollEntryFunc_x0028_Button_x002C__x0020_Text_x0029_>
  <viva.ScrollViewManager.scrollContent>
    <signature>viva.ScrollViewManager.scrollContent</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>scrollContent</name>
    <token>[SerializeField]
public RectTransform scrollContent </token>
    <scope>viva.ScrollViewManager</scope>
  </viva.ScrollViewManager.scrollContent>
  <viva.ScrollViewManager.SetContentCount_x0028_int_x002C__x0020_ScrollEntryFunc_x0029_>
    <signature>viva.ScrollViewManager.SetContentCount(int, ScrollEntryFunc)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>SetContentCount</name>
    <token>public void SetContentCount(int count, ScrollEntryFunc onScrollEntryStart)</token>
    <scope>viva.ScrollViewManager</scope>
    <params>
      <count>int</count>
      <onScrollEntryStart>ScrollEntryFunc</onScrollEntryStart>
    </params>
  </viva.ScrollViewManager.SetContentCount_x0028_int_x002C__x0020_ScrollEntryFunc_x0029_>
  <viva.ScrollViewManager.GetButtonAt_x0028_int_x0029_>
    <signature>viva.ScrollViewManager.GetButtonAt(int)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>GetButtonAt</name>
    <token>public Button GetButtonAt(int index)</token>
    <scope>viva.ScrollViewManager</scope>
    <params>
      <index>int</index>
    </params>
  </viva.ScrollViewManager.GetButtonAt_x0028_int_x0029_>
  <viva.ServerSelectUI>
    <signature>viva.ServerSelectUI</signature>
    <childcount>7</childcount>
    <type>Class</type>
    <name>ServerSelectUI</name>
    <token>public class ServerSelectUI : MonoBehaviour </token>
    <scope>viva</scope>
  </viva.ServerSelectUI>
  <viva.ServerSelectUI.OnEnable_x0028__x0029_>
    <signature>viva.ServerSelectUI.OnEnable()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>OnEnable</name>
    <token>public void OnEnable()</token>
    <scope>viva.ServerSelectUI</scope>
  </viva.ServerSelectUI.OnEnable_x0028__x0029_>
  <viva.ServerSelectUI.debugInit>
    <signature>viva.ServerSelectUI.debugInit</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>debugInit</name>
    <token>public static bool debugInit </token>
    <scope>viva.ServerSelectUI</scope>
  </viva.ServerSelectUI.debugInit>
  <viva.ServerSelectUI.Start_x0028__x0029_>
    <signature>viva.ServerSelectUI.Start()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>Start</name>
    <token>public void Start()</token>
    <scope>viva.ServerSelectUI</scope>
  </viva.ServerSelectUI.Start_x0028__x0029_>
  <viva.UISound>
    <signature>viva.UISound</signature>
    <childcount>6</childcount>
    <type>Enum</type>
    <name>UISound</name>
    <token>public enum UISound </token>
    <scope>viva</scope>
  </viva.UISound>
  <viva.UISound.SAVED>
    <signature>viva.UISound.SAVED</signature>
    <childcount>0</childcount>
    <type>EnumValue</type>
    <name>SAVED</name>
    <token>SAVED</token>
    <scope>viva.UISound</scope>
  </viva.UISound.SAVED>
  <viva.UISound.RELOADED>
    <signature>viva.UISound.RELOADED</signature>
    <childcount>0</childcount>
    <type>EnumValue</type>
    <name>RELOADED</name>
    <token>RELOADED</token>
    <scope>viva.UISound</scope>
  </viva.UISound.RELOADED>
  <viva.UISound.FATAL_ERROR>
    <signature>viva.UISound.FATAL_ERROR</signature>
    <childcount>0</childcount>
    <type>EnumValue</type>
    <name>FATAL_ERROR</name>
    <token>FATAL_ERROR</token>
    <scope>viva.UISound</scope>
  </viva.UISound.FATAL_ERROR>
  <viva.UISound.SCRIPT_ERROR>
    <signature>viva.UISound.SCRIPT_ERROR</signature>
    <childcount>0</childcount>
    <type>EnumValue</type>
    <name>SCRIPT_ERROR</name>
    <token>SCRIPT_ERROR</token>
    <scope>viva.UISound</scope>
  </viva.UISound.SCRIPT_ERROR>
  <viva.UISound.SMALL_ERROR>
    <signature>viva.UISound.SMALL_ERROR</signature>
    <childcount>0</childcount>
    <type>EnumValue</type>
    <name>SMALL_ERROR</name>
    <token>SMALL_ERROR</token>
    <scope>viva.UISound</scope>
  </viva.UISound.SMALL_ERROR>
  <viva.UISound.BUTTON1>
    <signature>viva.UISound.BUTTON1</signature>
    <childcount>0</childcount>
    <type>EnumValue</type>
    <name>BUTTON1</name>
    <token>BUTTON1</token>
    <scope>viva.UISound</scope>
  </viva.UISound.BUTTON1>
  <viva.SoundManager>
    <signature>viva.SoundManager</signature>
    <childcount>12</childcount>
    <type>Class</type>
    <name>SoundManager</name>
    <token>public class SoundManager : MonoBehaviour </token>
    <scope>viva</scope>
  </viva.SoundManager>
  <viva.SoundManager.main>
    <signature>viva.SoundManager.main</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>main</name>
    <token>public static SoundManager main </token>
    <scope>viva.SoundManager</scope>
  </viva.SoundManager.main>
  <viva.SoundManager.PlayGlobalUISound_x0028_UISound_x0029_>
    <signature>viva.SoundManager.PlayGlobalUISound(UISound)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>PlayGlobalUISound</name>
    <token>public void PlayGlobalUISound(UISound sound)</token>
    <scope>viva.SoundManager</scope>
    <params>
      <sound>UISound</sound>
    </params>
  </viva.SoundManager.PlayGlobalUISound_x0028_UISound_x0029_>
  <viva.SoundManager.AudioSourceHandle>
    <signature>viva.SoundManager.AudioSourceHandle</signature>
    <childcount>12</childcount>
    <type>Class</type>
    <name>AudioSourceHandle</name>
    <token>public class AudioSourceHandle </token>
    <scope>viva.SoundManager</scope>
  </viva.SoundManager.AudioSourceHandle>
  <viva.SoundManager.AudioSourceHandle.valid>
    <signature>viva.SoundManager.AudioSourceHandle.valid</signature>
    <childcount>0</childcount>
    <type>Property</type>
    <name>valid</name>
    <token>public bool valid { get; }</token>
    <scope>viva.SoundManager.AudioSourceHandle</scope>
  </viva.SoundManager.AudioSourceHandle.valid>
  <viva.SoundManager.AudioSourceHandle.volume>
    <signature>viva.SoundManager.AudioSourceHandle.volume</signature>
    <childcount>0</childcount>
    <type>Property</type>
    <name>volume</name>
    <token>public float volume { get; set; }</token>
    <scope>viva.SoundManager.AudioSourceHandle</scope>
  </viva.SoundManager.AudioSourceHandle.volume>
  <viva.SoundManager.AudioSourceHandle.pitch>
    <signature>viva.SoundManager.AudioSourceHandle.pitch</signature>
    <childcount>0</childcount>
    <type>Property</type>
    <name>pitch</name>
    <token>public float pitch { set; }</token>
    <scope>viva.SoundManager.AudioSourceHandle</scope>
  </viva.SoundManager.AudioSourceHandle.pitch>
  <viva.SoundManager.AudioSourceHandle.loop>
    <signature>viva.SoundManager.AudioSourceHandle.loop</signature>
    <childcount>0</childcount>
    <type>Property</type>
    <name>loop</name>
    <token>public bool loop { set; }</token>
    <scope>viva.SoundManager.AudioSourceHandle</scope>
  </viva.SoundManager.AudioSourceHandle.loop>
  <viva.SoundManager.AudioSourceHandle.maxDistance>
    <signature>viva.SoundManager.AudioSourceHandle.maxDistance</signature>
    <childcount>0</childcount>
    <type>Property</type>
    <name>maxDistance</name>
    <token>public float maxDistance { set; }</token>
    <scope>viva.SoundManager.AudioSourceHandle</scope>
  </viva.SoundManager.AudioSourceHandle.maxDistance>
  <viva.SoundManager.AudioSourceHandle.AudioSourceHandle_x0028_AudioSource_x002C__x0020_Vector3_x002C__x0020_Transform_x0029_>
    <signature>viva.SoundManager.AudioSourceHandle.AudioSourceHandle(AudioSource, Vector3, Transform)</signature>
    <childcount>0</childcount>
    <type>Constructor</type>
    <name>AudioSourceHandle</name>
    <token>public  AudioSourceHandle(AudioSource _source, Vector3 localPosition, Transform parent)</token>
    <scope>viva.SoundManager.AudioSourceHandle</scope>
    <params>
      <_source>AudioSource</_source>
      <localPosition>Vector3</localPosition>
      <parent>Transform</parent>
    </params>
  </viva.SoundManager.AudioSourceHandle.AudioSourceHandle_x0028_AudioSource_x002C__x0020_Vector3_x002C__x0020_Transform_x0029_>
  <viva.SoundManager.AudioSourceHandle.Setup_x0028_Vector3_x002C__x0020_Transform_x0029_>
    <signature>viva.SoundManager.AudioSourceHandle.Setup(Vector3, Transform)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>Setup</name>
    <token>public void Setup(Vector3 localPosition, Transform parent)</token>
    <scope>viva.SoundManager.AudioSourceHandle</scope>
    <params>
      <localPosition>Vector3</localPosition>
      <parent>Transform</parent>
    </params>
  </viva.SoundManager.AudioSourceHandle.Setup_x0028_Vector3_x002C__x0020_Transform_x0029_>
  <viva.SoundManager.AudioSourceHandle.PlayOneShot_x0028_AudioClip_x0029_>
    <signature>viva.SoundManager.AudioSourceHandle.PlayOneShot(AudioClip)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>PlayOneShot</name>
    <token>public void PlayOneShot(AudioClip clip)</token>
    <scope>viva.SoundManager.AudioSourceHandle</scope>
    <params>
      <clip>AudioClip</clip>
    </params>
  </viva.SoundManager.AudioSourceHandle.PlayOneShot_x0028_AudioClip_x0029_>
  <viva.SoundManager.AudioSourceHandle.Play_x0028_AudioClip_x0029_>
    <signature>viva.SoundManager.AudioSourceHandle.Play(AudioClip)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>Play</name>
    <token>public void Play(AudioClip clip)</token>
    <scope>viva.SoundManager.AudioSourceHandle</scope>
    <params>
      <clip>AudioClip</clip>
    </params>
  </viva.SoundManager.AudioSourceHandle.Play_x0028_AudioClip_x0029_>
  <viva.SoundManager.AudioSourceHandle.PlayDelayed_x0028_AudioClip_x002C__x0020_float_x0029_>
    <signature>viva.SoundManager.AudioSourceHandle.PlayDelayed(AudioClip, float)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>PlayDelayed</name>
    <token>public void PlayDelayed(AudioClip clip, float delay)</token>
    <scope>viva.SoundManager.AudioSourceHandle</scope>
    <params>
      <clip>AudioClip</clip>
      <delay>float</delay>
    </params>
  </viva.SoundManager.AudioSourceHandle.PlayDelayed_x0028_AudioClip_x002C__x0020_float_x0029_>
  <viva.SoundManager.AudioSourceHandle.Stop_x0028__x0029_>
    <signature>viva.SoundManager.AudioSourceHandle.Stop()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>Stop</name>
    <token>public void Stop()</token>
    <scope>viva.SoundManager.AudioSourceHandle</scope>
  </viva.SoundManager.AudioSourceHandle.Stop_x0028__x0029_>
  <viva.SoundManager.RequestHandle_x0028_Vector3_x002C__x0020_Transform_x0029_>
    <signature>viva.SoundManager.RequestHandle(Vector3, Transform)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>RequestHandle</name>
    <token>public AudioSourceHandle RequestHandle(Vector3 localPosition, Transform parent=null)</token>
    <scope>viva.SoundManager</scope>
    <params>
      <localPosition>Vector3</localPosition>
      <parent>Transform</parent>
    </params>
  </viva.SoundManager.RequestHandle_x0028_Vector3_x002C__x0020_Transform_x0029_>
  <viva.TextureBinding>
    <signature>viva.TextureBinding</signature>
    <childcount>15</childcount>
    <type>Class</type>
    <name>TextureBinding</name>
    <token>public class TextureBinding : VivaEditable </token>
    <scope>viva</scope>
  </viva.TextureBinding>
  <viva.TextureBinding.root>
    <signature>viva.TextureBinding.root</signature>
    <childcount>0</childcount>
    <type>Property</type>
    <name>root</name>
    <token>public static string root { get; }</token>
    <scope>viva.TextureBinding</scope>
  </viva.TextureBinding.root>
  <viva.TextureBinding.GetTextureBinding_x0028_string_x0029_>
    <signature>viva.TextureBinding.GetTextureBinding(string)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>GetTextureBinding</name>
    <token>public static TextureBinding GetTextureBinding(string filepath)</token>
    <scope>viva.TextureBinding</scope>
    <params>
      <filepath>string</filepath>
    </params>
  </viva.TextureBinding.GetTextureBinding_x0028_string_x0029_>
  <viva.TextureBinding.texture>
    <signature>viva.TextureBinding.texture</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>texture</name>
    <token>public readonly Texture2D texture = </token>
    <scope>viva.TextureBinding</scope>
  </viva.TextureBinding.texture>
  <viva.TextureBinding.sourceRequest>
    <signature>viva.TextureBinding.sourceRequest</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>sourceRequest</name>
    <token>public readonly TextureRequest sourceRequest = </token>
    <scope>viva.TextureBinding</scope>
  </viva.TextureBinding.sourceRequest>
  <viva.TextureBinding.material>
    <signature>viva.TextureBinding.material</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>material</name>
    <token>public Material material </token>
    <scope>viva.TextureBinding</scope>
  </viva.TextureBinding.material>
  <viva.TextureBinding.onReloaded>
    <signature>viva.TextureBinding.onReloaded</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>onReloaded</name>
    <token>public GenericCallback onReloaded </token>
    <scope>viva.TextureBinding</scope>
  </viva.TextureBinding.onReloaded>
  <viva.TextureBinding.binding>
    <signature>viva.TextureBinding.binding</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>binding</name>
    <token>public string binding </token>
    <scope>viva.TextureBinding</scope>
  </viva.TextureBinding.binding>
  <viva.TextureBinding.transparent>
    <signature>viva.TextureBinding.transparent</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>transparent</name>
    <token>public bool transparent </token>
    <scope>viva.TextureBinding</scope>
  </viva.TextureBinding.transparent>
  <viva.TextureBinding.TextureBinding_x0028_Texture2D_x002C__x0020_TextureRequest_x0029_>
    <signature>viva.TextureBinding.TextureBinding(Texture2D, TextureRequest)</signature>
    <childcount>0</childcount>
    <type>Constructor</type>
    <name>TextureBinding</name>
    <token>public  TextureBinding(Texture2D _texture, TextureRequest _sourceRequest)</token>
    <scope>viva.TextureBinding</scope>
    <params>
      <_texture>Texture2D</_texture>
      <_sourceRequest>TextureRequest</_sourceRequest>
    </params>
  </viva.TextureBinding.TextureBinding_x0028_Texture2D_x002C__x0020_TextureRequest_x0029_>
  <viva.TextureBinding.GetInfoHeaderTitleText_x0028__x0029_>
    <signature>viva.TextureBinding.GetInfoHeaderTitleText()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>GetInfoHeaderTitleText</name>
    <token>public override string GetInfoHeaderTitleText()</token>
    <scope>viva.TextureBinding</scope>
  </viva.TextureBinding.GetInfoHeaderTitleText_x0028__x0029_>
  <viva.TextureBinding.GetInfoHeaderText_x0028__x0029_>
    <signature>viva.TextureBinding.GetInfoHeaderText()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>GetInfoHeaderText</name>
    <token>public override string GetInfoHeaderText()</token>
    <scope>viva.TextureBinding</scope>
  </viva.TextureBinding.GetInfoHeaderText_x0028__x0029_>
  <viva.TextureBinding.GetInfoBodyContentText_x0028__x0029_>
    <signature>viva.TextureBinding.GetInfoBodyContentText()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>GetInfoBodyContentText</name>
    <token>public override string GetInfoBodyContentText()</token>
    <scope>viva.TextureBinding</scope>
  </viva.TextureBinding.GetInfoBodyContentText_x0028__x0029_>
  <viva.TextureBinding.GenerateThumbnail_x0028_Thumbnail_x0029_>
    <signature>viva.TextureBinding.GenerateThumbnail(Thumbnail)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>GenerateThumbnail</name>
    <token>public override void GenerateThumbnail(Thumbnail thumbnail)</token>
    <scope>viva.TextureBinding</scope>
    <params>
      <thumbnail>Thumbnail</thumbnail>
    </params>
  </viva.TextureBinding.GenerateThumbnail_x0028_Thumbnail_x0029_>
  <viva.TextureBinding.Save_x0028_string_x0029_>
    <signature>viva.TextureBinding.Save(string)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>Save</name>
    <token>public void Save(string subfolder)</token>
    <scope>viva.TextureBinding</scope>
    <params>
      <subfolder>string</subfolder>
    </params>
  </viva.TextureBinding.Save_x0028_string_x0029_>
  <viva.TextureBindings>
    <signature>viva.TextureBindings</signature>
    <childcount>11</childcount>
    <type>Class</type>
    <name>TextureBindings</name>
    <token>public class TextureBindings </token>
    <scope>viva</scope>
  </viva.TextureBindings>
  <viva.TextureBindings.Count>
    <signature>viva.TextureBindings.Count</signature>
    <childcount>0</childcount>
    <type>Property</type>
    <name>Count</name>
    <token>public int Count { get; }</token>
    <scope>viva.TextureBindings</scope>
  </viva.TextureBindings.Count>
  <viva.TextureBindings.onApplied>
    <signature>viva.TextureBindings.onApplied</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>onApplied</name>
    <token>public GenericCallback onApplied </token>
    <scope>viva.TextureBindings</scope>
  </viva.TextureBindings.onApplied>
  <viva.TextureBindings.TextureBindings_x0028_Model_x0029_>
    <signature>viva.TextureBindings.TextureBindings(Model)</signature>
    <childcount>0</childcount>
    <type>Constructor</type>
    <name>TextureBindings</name>
    <token>public  TextureBindings(Model _model)</token>
    <scope>viva.TextureBindings</scope>
    <params>
      <_model>Model</_model>
    </params>
  </viva.TextureBindings.TextureBindings_x0028_Model_x0029_>
  <viva.TextureBindings.this_x005B__x0020_int_x0020_index_x0020__x005D_>
    <signature>viva.TextureBindings.this[ int index ]</signature>
    <childcount>0</childcount>
    <type>Property</type>
    <name>this[ int index ]</name>
    <token>public TextureBinding this[ int index ] { get; }</token>
    <scope>viva.TextureBindings</scope>
  </viva.TextureBindings.this_x005B__x0020_int_x0020_index_x0020__x005D_>
  <viva.TextureBindings.DuplicateList_x0028__x0029_>
    <signature>viva.TextureBindings.DuplicateList()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>DuplicateList</name>
    <token>public List&lt;TextureBinding&gt; DuplicateList()</token>
    <scope>viva.TextureBindings</scope>
  </viva.TextureBindings.DuplicateList_x0028__x0029_>
  <viva.TextureBindings.ArchiveAllTextureBindings_x0028__x0029_>
    <signature>viva.TextureBindings.ArchiveAllTextureBindings()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>ArchiveAllTextureBindings</name>
    <token>public void ArchiveAllTextureBindings()</token>
    <scope>viva.TextureBindings</scope>
  </viva.TextureBindings.ArchiveAllTextureBindings_x0028__x0029_>
  <viva.TextureBindings.AutoBind_x0028_TextureBinding_x0029_>
    <signature>viva.TextureBindings.AutoBind(TextureBinding)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>AutoBind</name>
    <token>public bool AutoBind(TextureBinding textureBinding)</token>
    <scope>viva.TextureBindings</scope>
    <params>
      <textureBinding>TextureBinding</textureBinding>
    </params>
  </viva.TextureBindings.AutoBind_x0028_TextureBinding_x0029_>
  <viva.TextureBindings.DiscardAllTextures_x0028__x0029_>
    <signature>viva.TextureBindings.DiscardAllTextures()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>DiscardAllTextures</name>
    <token>public void DiscardAllTextures()</token>
    <scope>viva.TextureBindings</scope>
  </viva.TextureBindings.DiscardAllTextures_x0028__x0029_>
  <viva.TextureBindings.Apply_x0028__x0029_>
    <signature>viva.TextureBindings.Apply()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>Apply</name>
    <token>public void Apply()</token>
    <scope>viva.TextureBindings</scope>
  </viva.TextureBindings.Apply_x0028__x0029_>
  <viva.TextureRequest>
    <signature>viva.TextureRequest</signature>
    <childcount>9</childcount>
    <type>Class</type>
    <name>TextureRequest</name>
    <token>public partial class TextureRequest : ImportRequest </token>
    <scope>viva</scope>
  </viva.TextureRequest>
  <viva.TextureRequest.textureBinding>
    <signature>viva.TextureRequest.textureBinding</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>textureBinding</name>
    <token>public TextureBinding textureBinding </token>
    <scope>viva.TextureRequest</scope>
  </viva.TextureRequest.textureBinding>
  <viva.TextureRequest.TextureRequest_x0028_string_x0029_>
    <signature>viva.TextureRequest.TextureRequest(string)</signature>
    <childcount>0</childcount>
    <type>Constructor</type>
    <name>TextureRequest</name>
    <token>public  TextureRequest(string _filepath):base( _filepath, RequestType.TEXTURE )</token>
    <scope>viva.TextureRequest</scope>
    <params>
      <_filepath>string</_filepath>
    </params>
  </viva.TextureRequest.TextureRequest_x0028_string_x0029_>
  <viva.TextureRequest.GenerateThumbnail_x0028_Thumbnail_x0029_>
    <signature>viva.TextureRequest.GenerateThumbnail(Thumbnail)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>GenerateThumbnail</name>
    <token>public override void GenerateThumbnail(Thumbnail thumbnail)</token>
    <scope>viva.TextureRequest</scope>
    <params>
      <thumbnail>Thumbnail</thumbnail>
    </params>
  </viva.TextureRequest.GenerateThumbnail_x0028_Thumbnail_x0029_>
  <viva.TextureRequest.GetInfoHeaderText_x0028__x0029_>
    <signature>viva.TextureRequest.GetInfoHeaderText()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>GetInfoHeaderText</name>
    <token>public override string GetInfoHeaderText()</token>
    <scope>viva.TextureRequest</scope>
  </viva.TextureRequest.GetInfoHeaderText_x0028__x0029_>
  <viva.TextureRequest.GetInfoBodyContentText_x0028__x0029_>
    <signature>viva.TextureRequest.GetInfoBodyContentText()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>GetInfoBodyContentText</name>
    <token>public override string GetInfoBodyContentText()</token>
    <scope>viva.TextureRequest</scope>
  </viva.TextureRequest.GetInfoBodyContentText_x0028__x0029_>
  <viva.TextureRequest.Import_x0028__x0029_>
    <signature>viva.TextureRequest.Import()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>Import</name>
    <token>public override void Import()</token>
    <scope>viva.TextureRequest</scope>
  </viva.TextureRequest.Import_x0028__x0029_>
  <viva.ThumbnailGenerator>
    <signature>viva.ThumbnailGenerator</signature>
    <childcount>13</childcount>
    <type>Class</type>
    <name>ThumbnailGenerator</name>
    <token>public class ThumbnailGenerator : MonoBehaviour </token>
    <scope>viva</scope>
  </viva.ThumbnailGenerator>
  <viva.ThumbnailGenerator.main>
    <signature>viva.ThumbnailGenerator.main</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>main</name>
    <token>public static ThumbnailGenerator main </token>
    <scope>viva.ThumbnailGenerator</scope>
  </viva.ThumbnailGenerator.main>
  <viva.ThumbnailGenerator.lastSelectedModel>
    <signature>viva.ThumbnailGenerator.lastSelectedModel</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>lastSelectedModel</name>
    <token>public Model lastSelectedModel </token>
    <scope>viva.ThumbnailGenerator</scope>
  </viva.ThumbnailGenerator.lastSelectedModel>
  <viva.ThumbnailGenerator.Awake_x0028__x0029_>
    <signature>viva.ThumbnailGenerator.Awake()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>Awake</name>
    <token>public void Awake()</token>
    <scope>viva.ThumbnailGenerator</scope>
  </viva.ThumbnailGenerator.Awake_x0028__x0029_>
  <viva.ThumbnailGenerator.GenerateAnimationThumbnailTexture_x0028_Animation_x002C__x0020_Thumbnail_x0029_>
    <signature>viva.ThumbnailGenerator.GenerateAnimationThumbnailTexture(Animation, Thumbnail)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>GenerateAnimationThumbnailTexture</name>
    <token>public void GenerateAnimationThumbnailTexture(Animation animation, Thumbnail thumbnail)</token>
    <scope>viva.ThumbnailGenerator</scope>
    <params>
      <animation>Animation</animation>
      <thumbnail>Thumbnail</thumbnail>
    </params>
  </viva.ThumbnailGenerator.GenerateAnimationThumbnailTexture_x0028_Animation_x002C__x0020_Thumbnail_x0029_>
  <viva.ThumbnailGenerator.GenerateModelThumbnailTexture_x0028_Model_x002C__x0020_Thumbnail_x0029_>
    <signature>viva.ThumbnailGenerator.GenerateModelThumbnailTexture(Model, Thumbnail)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>GenerateModelThumbnailTexture</name>
    <token>public void GenerateModelThumbnailTexture(Model model, Thumbnail thumbnail)</token>
    <scope>viva.ThumbnailGenerator</scope>
    <params>
      <model>Model</model>
      <thumbnail>Thumbnail</thumbnail>
    </params>
  </viva.ThumbnailGenerator.GenerateModelThumbnailTexture_x0028_Model_x002C__x0020_Thumbnail_x0029_>
  <viva.Vector3Extensions>
    <signature>viva.Vector3Extensions</signature>
    <childcount>1</childcount>
    <type>Class</type>
    <name>Vector3Extensions</name>
    <token>public static class Vector3Extensions </token>
    <scope>viva</scope>
  </viva.Vector3Extensions>
  <viva.Vector3Extensions.Multiply_x0028_Vector3_x002C__x0020_Vector3_x0029_>
    <signature>viva.Vector3Extensions.Multiply(Vector3, Vector3)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>Multiply</name>
    <token>public static Vector3 Multiply(this Vector3 a, Vector3 b)</token>
    <scope>viva.Vector3Extensions</scope>
    <params>
      <a>Vector3</a>
      <b>Vector3</b>
    </params>
  </viva.Vector3Extensions.Multiply_x0028_Vector3_x002C__x0020_Vector3_x0029_>
  <viva.FlagField>
    <signature>viva.FlagField</signature>
    <childcount>3</childcount>
    <type>Class</type>
    <name>FlagField</name>
    <token>public static class FlagField </token>
    <scope>viva</scope>
  </viva.FlagField>
  <viva.FlagField.IsSet_x003C_T_x003E__x0028_T_x002C__x0020_T_x0029_>
    <signature>viva.FlagField.IsSet&lt;T&gt;(T, T)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>IsSet&lt;T&gt;</name>
    <token>public static bool IsSet&lt;T&gt;(T flags, T flag)where T : struct</token>
    <scope>viva.FlagField</scope>
    <params>
      <flags>T</flags>
      <flag>T</flag>
    </params>
  </viva.FlagField.IsSet_x003C_T_x003E__x0028_T_x002C__x0020_T_x0029_>
  <viva.FlagField.Set_x003C_T_x003E__x0028_T_x002C__x0020_T_x0029_>
    <signature>viva.FlagField.Set&lt;T&gt;(T, T)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>Set&lt;T&gt;</name>
    <token>public static void Set&lt;T&gt;(ref T flags, T flag)where T : struct</token>
    <scope>viva.FlagField</scope>
    <params>
      <flags>T</flags>
      <flag>T</flag>
    </params>
  </viva.FlagField.Set_x003C_T_x003E__x0028_T_x002C__x0020_T_x0029_>
  <viva.FlagField.Unset_x003C_T_x003E__x0028_T_x002C__x0020_T_x0029_>
    <signature>viva.FlagField.Unset&lt;T&gt;(T, T)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>Unset&lt;T&gt;</name>
    <token>public static void Unset&lt;T&gt;(ref T flags, T flag)where T : struct</token>
    <scope>viva.FlagField</scope>
    <params>
      <flags>T</flags>
      <flag>T</flag>
    </params>
  </viva.FlagField.Unset_x003C_T_x003E__x0028_T_x002C__x0020_T_x0029_>
  <viva.Set_x003C_T_x003E_>
    <signature>viva.Set&lt;T&gt;</signature>
    <childcount>6</childcount>
    <type>Class</type>
    <name>Set&lt;T&gt;</name>
    <token>public class Set&lt;T&gt; </token>
    <scope>viva</scope>
  </viva.Set_x003C_T_x003E_>
  <viva.Set_x003C_T_x003E_.objects>
    <signature>viva.Set&lt;T&gt;.objects</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>objects</name>
    <token>public readonly List&lt;T&gt; objects = new List&lt;T&gt;();</token>
    <scope>viva.Set&lt;T&gt;</scope>
  </viva.Set_x003C_T_x003E_.objects>
  <viva.Set_x003C_T_x003E_.Count>
    <signature>viva.Set&lt;T&gt;.Count</signature>
    <childcount>0</childcount>
    <type>Property</type>
    <name>Count</name>
    <token>public int Count { get; }</token>
    <scope>viva.Set&lt;T&gt;</scope>
  </viva.Set_x003C_T_x003E_.Count>
  <viva.Set_x003C_T_x003E_.Add_x0028_T_x0029_>
    <signature>viva.Set&lt;T&gt;.Add(T)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>Add</name>
    <token>public void Add(T obj)</token>
    <scope>viva.Set&lt;T&gt;</scope>
    <params>
      <obj>T</obj>
    </params>
  </viva.Set_x003C_T_x003E_.Add_x0028_T_x0029_>
  <viva.Set_x003C_T_x003E_.Add_x0028_T_x005B__x005D__x002C__x0020_float_x0029_>
    <signature>viva.Set&lt;T&gt;.Add(T[], float)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>Add</name>
    <token>public void Add(T[] array, float length)</token>
    <scope>viva.Set&lt;T&gt;</scope>
    <params>
      <array>T[]</array>
      <length>float</length>
    </params>
  </viva.Set_x003C_T_x003E_.Add_x0028_T_x005B__x005D__x002C__x0020_float_x0029_>
  <viva.Set_x003C_T_x003E_.Contains_x0028_T_x0029_>
    <signature>viva.Set&lt;T&gt;.Contains(T)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>Contains</name>
    <token>public bool Contains(T obj)</token>
    <scope>viva.Set&lt;T&gt;</scope>
    <params>
      <obj>T</obj>
    </params>
  </viva.Set_x003C_T_x003E_.Contains_x0028_T_x0029_>
  <viva.Set_x003C_T_x003E_.Remove_x0028_T_x0029_>
    <signature>viva.Set&lt;T&gt;.Remove(T)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>Remove</name>
    <token>public void Remove(T obj)</token>
    <scope>viva.Set&lt;T&gt;</scope>
    <params>
      <obj>T</obj>
    </params>
  </viva.Set_x003C_T_x003E_.Remove_x0028_T_x0029_>
  <viva.CountedSet_x003C_T_x003E_>
    <signature>viva.CountedSet&lt;T&gt;</signature>
    <childcount>7</childcount>
    <type>Class</type>
    <name>CountedSet&lt;T&gt;</name>
    <token>public class CountedSet&lt;T&gt; </token>
    <scope>viva</scope>
  </viva.CountedSet_x003C_T_x003E_>
  <viva.CountedSet_x003C_T_x003E_.Count>
    <signature>viva.CountedSet&lt;T&gt;.Count</signature>
    <childcount>0</childcount>
    <type>Property</type>
    <name>Count</name>
    <token>public int Count { get; }</token>
    <scope>viva.CountedSet&lt;T&gt;</scope>
  </viva.CountedSet_x003C_T_x003E_.Count>
  <viva.CountedSet_x003C_T_x003E_.Add_x0028_T_x0029_>
    <signature>viva.CountedSet&lt;T&gt;.Add(T)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>Add</name>
    <token>public void Add(T obj)</token>
    <scope>viva.CountedSet&lt;T&gt;</scope>
    <params>
      <obj>T</obj>
    </params>
  </viva.CountedSet_x003C_T_x003E_.Add_x0028_T_x0029_>
  <viva.CountedSet_x003C_T_x003E_.this_x005B_int_x0020_index_x005D_>
    <signature>viva.CountedSet&lt;T&gt;.this[int index]</signature>
    <childcount>0</childcount>
    <type>Property</type>
    <name>this[int index]</name>
    <token>public T this[int index] { get; }</token>
    <scope>viva.CountedSet&lt;T&gt;</scope>
  </viva.CountedSet_x003C_T_x003E_.this_x005B_int_x0020_index_x005D_>
  <viva.CountedSet_x003C_T_x003E_.Contains_x0028_T_x0029_>
    <signature>viva.CountedSet&lt;T&gt;.Contains(T)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>Contains</name>
    <token>public bool Contains(T obj)</token>
    <scope>viva.CountedSet&lt;T&gt;</scope>
    <params>
      <obj>T</obj>
    </params>
  </viva.CountedSet_x003C_T_x003E_.Contains_x0028_T_x0029_>
  <viva.CountedSet_x003C_T_x003E_.Remove_x0028_T_x0029_>
    <signature>viva.CountedSet&lt;T&gt;.Remove(T)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>Remove</name>
    <token>public void Remove(T obj)</token>
    <scope>viva.CountedSet&lt;T&gt;</scope>
    <params>
      <obj>T</obj>
    </params>
  </viva.CountedSet_x003C_T_x003E_.Remove_x0028_T_x0029_>
  <viva.TransformBlend>
    <signature>viva.TransformBlend</signature>
    <childcount>11</childcount>
    <type>Class</type>
    <name>TransformBlend</name>
    <token>public class TransformBlend </token>
    <scope>viva</scope>
  </viva.TransformBlend>
  <viva.TransformBlend.cacheTransform>
    <signature>viva.TransformBlend.cacheTransform</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>cacheTransform</name>
    <token>public bool cacheTransform </token>
    <scope>viva.TransformBlend</scope>
  </viva.TransformBlend.cacheTransform>
  <viva.TransformBlend.localPosBlend>
    <signature>viva.TransformBlend.localPosBlend</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>localPosBlend</name>
    <token>public bool localPosBlend </token>
    <scope>viva.TransformBlend</scope>
  </viva.TransformBlend.localPosBlend>
  <viva.TransformBlend.localRotBlend>
    <signature>viva.TransformBlend.localRotBlend</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>localRotBlend</name>
    <token>public bool localRotBlend </token>
    <scope>viva.TransformBlend</scope>
  </viva.TransformBlend.localRotBlend>
  <viva.TransformBlend.target>
    <signature>viva.TransformBlend.target</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>target</name>
    <token>public Transform target </token>
    <scope>viva.TransformBlend</scope>
  </viva.TransformBlend.target>
  <viva.TransformBlend.startPos>
    <signature>viva.TransformBlend.startPos</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>startPos</name>
    <token>public Vector3 startPos </token>
    <scope>viva.TransformBlend</scope>
  </viva.TransformBlend.startPos>
  <viva.TransformBlend.startRot>
    <signature>viva.TransformBlend.startRot</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>startRot</name>
    <token>public Quaternion startRot </token>
    <scope>viva.TransformBlend</scope>
  </viva.TransformBlend.startRot>
  <viva.TransformBlend.blend>
    <signature>viva.TransformBlend.blend</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>blend</name>
    <token>public readonly Tools.EaseBlend blend = new Tools.EaseBlend();</token>
    <scope>viva.TransformBlend</scope>
  </viva.TransformBlend.blend>
  <viva.TransformBlend.LocalBlend_x0028_Transform_x002C__x0020_Vector3_x002C__x0020_Quaternion_x002C__x0020_float_x0029_>
    <signature>viva.TransformBlend.LocalBlend(Transform, Vector3, Quaternion, float)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>LocalBlend</name>
    <token>public static void LocalBlend(Transform target, Vector3 pos, Quaternion rot, float blend)</token>
    <scope>viva.TransformBlend</scope>
    <params>
      <target>Transform</target>
      <pos>Vector3</pos>
      <rot>Quaternion</rot>
      <blend>float</blend>
    </params>
  </viva.TransformBlend.LocalBlend_x0028_Transform_x002C__x0020_Vector3_x002C__x0020_Quaternion_x002C__x0020_float_x0029_>
  <viva.TransformBlend.WorldBlend_x0028_Transform_x002C__x0020_Vector3_x002C__x0020_Quaternion_x002C__x0020_float_x0029_>
    <signature>viva.TransformBlend.WorldBlend(Transform, Vector3, Quaternion, float)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>WorldBlend</name>
    <token>public static void WorldBlend(Transform target, Vector3 pos, Quaternion rot, float blend)</token>
    <scope>viva.TransformBlend</scope>
    <params>
      <target>Transform</target>
      <pos>Vector3</pos>
      <rot>Quaternion</rot>
      <blend>float</blend>
    </params>
  </viva.TransformBlend.WorldBlend_x0028_Transform_x002C__x0020_Vector3_x002C__x0020_Quaternion_x002C__x0020_float_x0029_>
  <viva.TransformBlend.SetTarget_x0028_bool_x002C__x0020_Transform_x002C__x0020_bool_x002C__x0020_bool_x002C__x0020_float_x002C__x0020_float_x002C__x0020_float_x0029_>
    <signature>viva.TransformBlend.SetTarget(bool, Transform, bool, bool, float, float, float)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>SetTarget</name>
    <token>public void SetTarget(bool _cacheTransform, Transform _target, bool _localPosBlend, bool _localRotBlend, float start, float end, float duration)</token>
    <scope>viva.TransformBlend</scope>
    <params>
      <_cacheTransform>bool</_cacheTransform>
      <_target>Transform</_target>
      <_localPosBlend>bool</_localPosBlend>
      <_localRotBlend>bool</_localRotBlend>
      <start>float</start>
      <end>float</end>
      <duration>float</duration>
    </params>
  </viva.TransformBlend.SetTarget_x0028_bool_x002C__x0020_Transform_x002C__x0020_bool_x002C__x0020_bool_x002C__x0020_float_x002C__x0020_float_x002C__x0020_float_x0029_>
  <viva.TransformBlend.Blend_x0028_Vector3_x002C__x0020_Quaternion_x0029_>
    <signature>viva.TransformBlend.Blend(Vector3, Quaternion)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>Blend</name>
    <token>public void Blend(Vector3 pos, Quaternion rot)</token>
    <scope>viva.TransformBlend</scope>
    <params>
      <pos>Vector3</pos>
      <rot>Quaternion</rot>
    </params>
  </viva.TransformBlend.Blend_x0028_Vector3_x002C__x0020_Quaternion_x0029_>
  <viva.ShapeKey>
    <signature>viva.ShapeKey</signature>
    <childcount>4</childcount>
    <type>Class</type>
    <name>ShapeKey</name>
    <token>public class ShapeKey </token>
    <scope>viva</scope>
  </viva.ShapeKey>
  <viva.ShapeKey.deltaVertices>
    <signature>viva.ShapeKey.deltaVertices</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>deltaVertices</name>
    <token>public Vector3[] deltaVertices </token>
    <scope>viva.ShapeKey</scope>
  </viva.ShapeKey.deltaVertices>
  <viva.ShapeKey.deltaNormals>
    <signature>viva.ShapeKey.deltaNormals</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>deltaNormals</name>
    <token>public Vector3[] deltaNormals </token>
    <scope>viva.ShapeKey</scope>
  </viva.ShapeKey.deltaNormals>
  <viva.ShapeKey.deltaTangents>
    <signature>viva.ShapeKey.deltaTangents</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>deltaTangents</name>
    <token>public Vector3[] deltaTangents </token>
    <scope>viva.ShapeKey</scope>
  </viva.ShapeKey.deltaTangents>
  <viva.ShapeKey.ShapeKey_x0028_int_x0029_>
    <signature>viva.ShapeKey.ShapeKey(int)</signature>
    <childcount>0</childcount>
    <type>Constructor</type>
    <name>ShapeKey</name>
    <token>public  ShapeKey(int size)</token>
    <scope>viva.ShapeKey</scope>
    <params>
      <size>int</size>
    </params>
  </viva.ShapeKey.ShapeKey_x0028_int_x0029_>
  <viva.WriteIfNull_x003C_T_x003E_>
    <signature>viva.WriteIfNull&lt;T&gt;</signature>
    <childcount>5</childcount>
    <type>Class</type>
    <name>WriteIfNull&lt;T&gt;</name>
    <token>public sealed class WriteIfNull&lt;T&gt; </token>
    <scope>viva</scope>
  </viva.WriteIfNull_x003C_T_x003E_>
  <viva.WriteIfNull_x003C_T_x003E_.ToString_x0028__x0029_>
    <signature>viva.WriteIfNull&lt;T&gt;.ToString()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>ToString</name>
    <token>public override string ToString()</token>
    <scope>viva.WriteIfNull&lt;T&gt;</scope>
  </viva.WriteIfNull_x003C_T_x003E_.ToString_x0028__x0029_>
  <viva.WriteIfNull_x003C_T_x003E_.Value>
    <signature>viva.WriteIfNull&lt;T&gt;.Value</signature>
    <childcount>0</childcount>
    <type>Property</type>
    <name>Value</name>
    <token>public T Value { get; set; }</token>
    <scope>viva.WriteIfNull&lt;T&gt;</scope>
  </viva.WriteIfNull_x003C_T_x003E_.Value>
  <viva.WriteIfNull_x003C_T_x003E_.ValueOrDefault>
    <signature>viva.WriteIfNull&lt;T&gt;.ValueOrDefault</signature>
    <childcount>0</childcount>
    <type>Property</type>
    <name>ValueOrDefault</name>
    <token>public T ValueOrDefault { get; }</token>
    <scope>viva.WriteIfNull&lt;T&gt;</scope>
  </viva.WriteIfNull_x003C_T_x003E_.ValueOrDefault>
  <viva.WriteIfNull_x003C_T_x003E_.operator_x0020_T_x0028_WriteIfNull_x003C_T_x003E__x0029_>
    <signature>viva.WriteIfNull&lt;T&gt;.operator T(WriteIfNull&lt;T&gt;)</signature>
    <childcount>0</childcount>
    <type>Operator</type>
    <name>operator T</name>
    <token>public static implicit operator T(WriteIfNull&lt;T&gt; value)</token>
    <scope>viva.WriteIfNull&lt;T&gt;</scope>
    <params>
      <value>WriteIfNull&lt;T&gt;</value>
    </params>
  </viva.WriteIfNull_x003C_T_x003E_.operator_x0020_T_x0028_WriteIfNull_x003C_T_x003E__x0029_>
  <viva.Tuple_x003C_T1_x002C_T2_x003E_>
    <signature>viva.Tuple&lt;T1,T2&gt;</signature>
    <childcount>3</childcount>
    <type>Class</type>
    <name>Tuple&lt;T1,T2&gt;</name>
    <token>public class Tuple&lt;T1,T2&gt; </token>
    <scope>viva</scope>
  </viva.Tuple_x003C_T1_x002C_T2_x003E_>
  <viva.Tuple_x003C_T1_x002C_T2_x003E_._1>
    <signature>viva.Tuple&lt;T1,T2&gt;._1</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>_1</name>
    <token>public T1 _1 </token>
    <scope>viva.Tuple&lt;T1,T2&gt;</scope>
  </viva.Tuple_x003C_T1_x002C_T2_x003E_._1>
  <viva.Tuple_x003C_T1_x002C_T2_x003E_._2>
    <signature>viva.Tuple&lt;T1,T2&gt;._2</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>_2</name>
    <token>public T2 _2 </token>
    <scope>viva.Tuple&lt;T1,T2&gt;</scope>
  </viva.Tuple_x003C_T1_x002C_T2_x003E_._2>
  <viva.Tuple_x003C_T1_x002C_T2_x003E_.Tuple_x0028_T1_x002C__x0020_T2_x0029_>
    <signature>viva.Tuple&lt;T1,T2&gt;.Tuple(T1, T2)</signature>
    <childcount>0</childcount>
    <type>Constructor</type>
    <name>Tuple</name>
    <token>public  Tuple(T1 T1_, T2 T2_)</token>
    <scope>viva.Tuple&lt;T1,T2&gt;</scope>
    <params>
      <T1_>T1</T1_>
      <T2_>T2</T2_>
    </params>
  </viva.Tuple_x003C_T1_x002C_T2_x003E_.Tuple_x0028_T1_x002C__x0020_T2_x0029_>
  <viva.AverageQuaternion_x0028_Vector4_x002C__x0020_float_x002C__x0020_Quaternion_x002C__x0020_Quaternion_x0029_>
    <signature>viva.AverageQuaternion(Vector4, float, Quaternion, Quaternion)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>AverageQuaternion</name>
    <token>public static void AverageQuaternion(ref Vector4 cumulative, float weight, Quaternion newRotation, Quaternion firstRotation)</token>
    <scope>viva</scope>
    <params>
      <cumulative>Vector4</cumulative>
      <weight>float</weight>
      <newRotation>Quaternion</newRotation>
      <firstRotation>Quaternion</firstRotation>
    </params>
  </viva.AverageQuaternion_x0028_Vector4_x002C__x0020_float_x002C__x0020_Quaternion_x002C__x0020_Quaternion_x0029_>
  <viva.AreQuaternionsClose_x0028_Quaternion_x002C__x0020_Quaternion_x0029_>
    <signature>viva.AreQuaternionsClose(Quaternion, Quaternion)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>AreQuaternionsClose</name>
    <token>public static bool AreQuaternionsClose(Quaternion q1, Quaternion q2)</token>
    <scope>viva</scope>
    <params>
      <q1>Quaternion</q1>
      <q2>Quaternion</q2>
    </params>
  </viva.AreQuaternionsClose_x0028_Quaternion_x002C__x0020_Quaternion_x0029_>
  <viva.UITools>
    <signature>viva.UITools</signature>
    <childcount>2</childcount>
    <type>Class</type>
    <name>UITools</name>
    <token>public class UITools : MonoBehaviour </token>
    <scope>viva</scope>
  </viva.UITools>
  <viva.UITools.GetScreenFitWindowPos_x0028_Vector2_x002C__x0020_Vector2_x002C__x0020_bool_x0029_>
    <signature>viva.UITools.GetScreenFitWindowPos(Vector2, Vector2, bool)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>GetScreenFitWindowPos</name>
    <token>public static Vector2 GetScreenFitWindowPos(Vector2 inputPos, Vector2 windowSize, out bool farX)</token>
    <scope>viva.UITools</scope>
    <params>
      <inputPos>Vector2</inputPos>
      <windowSize>Vector2</windowSize>
      <farX>bool</farX>
    </params>
  </viva.UITools.GetScreenFitWindowPos_x0028_Vector2_x002C__x0020_Vector2_x002C__x0020_bool_x0029_>
  <viva.UITools.ArchiveFile_x0028_string_x002C__x0020_string_x0029_>
    <signature>viva.UITools.ArchiveFile(string, string)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>ArchiveFile</name>
    <token>public static bool ArchiveFile(string filepath, string destFilepath)</token>
    <scope>viva.UITools</scope>
    <params>
      <filepath>string</filepath>
      <destFilepath>string</destFilepath>
    </params>
  </viva.UITools.ArchiveFile_x0028_string_x002C__x0020_string_x0029_>
  <viva.ServerMode>
    <signature>viva.ServerMode</signature>
    <childcount>3</childcount>
    <type>Enum</type>
    <name>ServerMode</name>
    <token>public enum ServerMode </token>
    <scope>viva</scope>
  </viva.ServerMode>
  <viva.ServerMode.SERVER>
    <signature>viva.ServerMode.SERVER</signature>
    <childcount>0</childcount>
    <type>EnumValue</type>
    <name>SERVER</name>
    <token>SERVER</token>
    <scope>viva.ServerMode</scope>
  </viva.ServerMode.SERVER>
  <viva.ServerMode.HOST>
    <signature>viva.ServerMode.HOST</signature>
    <childcount>0</childcount>
    <type>EnumValue</type>
    <name>HOST</name>
    <token>HOST</token>
    <scope>viva.ServerMode</scope>
  </viva.ServerMode.HOST>
  <viva.ServerMode.CLIENT>
    <signature>viva.ServerMode.CLIENT</signature>
    <childcount>0</childcount>
    <type>EnumValue</type>
    <name>CLIENT</name>
    <token>CLIENT</token>
    <scope>viva.ServerMode</scope>
  </viva.ServerMode.CLIENT>
  <viva.Viva>
    <signature>viva.Viva</signature>
    <childcount>16</childcount>
    <type>Class</type>
    <name>Viva</name>
    <token>public class Viva : NetworkingManager </token>
    <scope>viva</scope>
  </viva.Viva>
  <viva.Viva.modelDefaultMaterial>
    <signature>viva.Viva.modelDefaultMaterial</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>modelDefaultMaterial</name>
    <token>[SerializeField]
public Material modelDefaultMaterial </token>
    <scope>viva.Viva</scope>
  </viva.Viva.modelDefaultMaterial>
  <viva.Viva.defaultRagdollPrefab>
    <signature>viva.Viva.defaultRagdollPrefab</signature>
    <childcount>0</childcount>
    <type>Property</type>
    <name>defaultRagdollPrefab</name>
    <token>public static GameObject defaultRagdollPrefab { get; set; }</token>
    <scope>viva.Viva</scope>
  </viva.Viva.defaultRagdollPrefab>
  <viva.Viva.contentFolder>
    <signature>viva.Viva.contentFolder</signature>
    <childcount>0</childcount>
    <type>Property</type>
    <name>contentFolder</name>
    <token>public static string contentFolder { get; set; }</token>
    <scope>viva.Viva</scope>
  </viva.Viva.contentFolder>
  <viva.Viva.main>
    <signature>viva.Viva.main</signature>
    <childcount>0</childcount>
    <type>Property</type>
    <name>main</name>
    <token>public static Viva main { get; set; }</token>
    <scope>viva.Viva</scope>
  </viva.Viva.main>
  <viva.Viva.user>
    <signature>viva.Viva.user</signature>
    <childcount>0</childcount>
    <type>Property</type>
    <name>user</name>
    <token>public static VivaPlayer user { get; set; }</token>
    <scope>viva.Viva</scope>
  </viva.Viva.user>
  <viva.Viva.Awake_x0028__x0029_>
    <signature>viva.Viva.Awake()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>Awake</name>
    <token>public void Awake()</token>
    <scope>viva.Viva</scope>
  </viva.Viva.Awake_x0028__x0029_>
  <viva.Viva.Start_x0028__x0029_>
    <signature>viva.Viva.Start()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>Start</name>
    <token>public void Start()</token>
    <scope>viva.Viva</scope>
  </viva.Viva.Start_x0028__x0029_>
  <viva.Viva.InitializeNetworking_x0028__x0029_>
    <signature>viva.Viva.InitializeNetworking()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>InitializeNetworking</name>
    <token>public void InitializeNetworking()</token>
    <scope>viva.Viva</scope>
  </viva.Viva.InitializeNetworking_x0028__x0029_>
  <viva.VivaEditable>
    <signature>viva.VivaEditable</signature>
    <childcount>12</childcount>
    <type>Class</type>
    <name>VivaEditable</name>
    <token>public abstract class VivaEditable </token>
    <scope>viva</scope>
  </viva.VivaEditable>
  <viva.VivaEditable.Usage>
    <signature>viva.VivaEditable.Usage</signature>
    <childcount>5</childcount>
    <type>Class</type>
    <name>Usage</name>
    <token>public class Usage </token>
    <scope>viva.VivaEditable</scope>
  </viva.VivaEditable.Usage>
  <viva.VivaEditable.Usage.onDiscarded>
    <signature>viva.VivaEditable.Usage.onDiscarded</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>onDiscarded</name>
    <token>public GenericCallback onDiscarded </token>
    <scope>viva.VivaEditable.Usage</scope>
  </viva.VivaEditable.Usage.onDiscarded>
  <viva.VivaEditable.Usage.operator_x0020_--_x0028_Usage_x0029_>
    <signature>viva.VivaEditable.Usage.operator --(Usage)</signature>
    <childcount>0</childcount>
    <type>Operator</type>
    <name>operator --</name>
    <token>public static Usage operator --(Usage a)</token>
    <scope>viva.VivaEditable.Usage</scope>
    <params>
      <a>Usage</a>
    </params>
  </viva.VivaEditable.Usage.operator_x0020_--_x0028_Usage_x0029_>
  <viva.VivaEditable.Usage.operator_x0020__x002B__x002B__x0028_Usage_x0029_>
    <signature>viva.VivaEditable.Usage.operator ++(Usage)</signature>
    <childcount>0</childcount>
    <type>Operator</type>
    <name>operator ++</name>
    <token>public static Usage operator ++(Usage a)</token>
    <scope>viva.VivaEditable.Usage</scope>
    <params>
      <a>Usage</a>
    </params>
  </viva.VivaEditable.Usage.operator_x0020__x002B__x002B__x0028_Usage_x0029_>
  <viva.VivaEditable.usage>
    <signature>viva.VivaEditable.usage</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>usage</name>
    <token>public Usage usage </token>
    <scope>viva.VivaEditable</scope>
  </viva.VivaEditable.usage>
  <viva.VivaEditable.VivaObject_x0028__x0029_>
    <signature>viva.VivaEditable.VivaEditable()</signature>
    <childcount>0</childcount>
    <type>Constructor</type>
    <name>VivaEditable</name>
    <token>public  VivaEditable()</token>
    <scope>viva.VivaEditable</scope>
  </viva.VivaEditable.VivaObject_x0028__x0029_>
  <viva.VivaEditable.OnCreateMenuSelected_x0028__x0029_>
    <signature>viva.VivaEditable.OnCreateMenuSelected()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>OnCreateMenuSelected</name>
    <token>public virtual void OnCreateMenuSelected()</token>
    <scope>viva.VivaEditable</scope>
  </viva.VivaEditable.OnCreateMenuSelected_x0028__x0029_>
  <viva.VivaEditable.OnCreateMenuDeselected_x0028__x0029_>
    <signature>viva.VivaEditable.OnCreateMenuDeselected()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>OnCreateMenuDeselected</name>
    <token>public virtual void OnCreateMenuDeselected()</token>
    <scope>viva.VivaEditable</scope>
  </viva.VivaEditable.OnCreateMenuDeselected_x0028__x0029_>
  <viva.VivaEditable.GetInfoHeaderTitleText_x0028__x0029_>
    <signature>viva.VivaEditable.GetInfoHeaderTitleText()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>GetInfoHeaderTitleText</name>
    <token>public abstract string GetInfoHeaderTitleText()</token>
    <scope>viva.VivaEditable</scope>
  </viva.VivaEditable.GetInfoHeaderTitleText_x0028__x0029_>
  <viva.VivaEditable.GetInfoHeaderText_x0028__x0029_>
    <signature>viva.VivaEditable.GetInfoHeaderText()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>GetInfoHeaderText</name>
    <token>public abstract string GetInfoHeaderText()</token>
    <scope>viva.VivaEditable</scope>
  </viva.VivaEditable.GetInfoHeaderText_x0028__x0029_>
  <viva.VivaEditable.GetInfoBodyContentText_x0028__x0029_>
    <signature>viva.VivaEditable.GetInfoBodyContentText()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>GetInfoBodyContentText</name>
    <token>public abstract string GetInfoBodyContentText()</token>
    <scope>viva.VivaEditable</scope>
  </viva.VivaEditable.GetInfoBodyContentText_x0028__x0029_>
  <viva.VivaEditable.GenerateThumbnail_x0028_Thumbnail_x0029_>
    <signature>viva.VivaEditable.GenerateThumbnail(Thumbnail)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>GenerateThumbnail</name>
    <token>public abstract void GenerateThumbnail(Thumbnail thumbnail)</token>
    <scope>viva.VivaEditable</scope>
    <params>
      <thumbnail>Thumbnail</thumbnail>
    </params>
  </viva.VivaEditable.GenerateThumbnail_x0028_Thumbnail_x0029_>
  <viva.VivaEditable.GetThumbnail_x0028__x0029_>
    <signature>viva.VivaEditable.GetThumbnail()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>GetThumbnail</name>
    <token>public Thumbnail GetThumbnail()</token>
    <scope>viva.VivaEditable</scope>
  </viva.VivaEditable.GetThumbnail_x0028__x0029_>
  <viva.VivaEditable.GenerateThumbnail_x0028__x0029_>
    <signature>viva.VivaEditable.GenerateThumbnail()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>GenerateThumbnail</name>
    <token>public void GenerateThumbnail()</token>
    <scope>viva.VivaEditable</scope>
  </viva.VivaEditable.GenerateThumbnail_x0028__x0029_>
  <viva.Thumbnail>
    <signature>viva.Thumbnail</signature>
    <childcount>4</childcount>
    <type>Class</type>
    <name>Thumbnail</name>
    <token>public class Thumbnail </token>
    <scope>viva</scope>
  </viva.Thumbnail>
  <viva.Thumbnail.texture>
    <signature>viva.Thumbnail.texture</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>texture</name>
    <token>public Texture2D texture </token>
    <scope>viva.Thumbnail</scope>
  </viva.Thumbnail.texture>
  <viva.Thumbnail.animatedFrameWidth>
    <signature>viva.Thumbnail.animatedFrameWidth</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>animatedFrameWidth</name>
    <token>public int animatedFrameWidth </token>
    <scope>viva.Thumbnail</scope>
  </viva.Thumbnail.animatedFrameWidth>
  <viva.Thumbnail.animatedDuration>
    <signature>viva.Thumbnail.animatedDuration</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>animatedDuration</name>
    <token>public float animatedDuration </token>
    <scope>viva.Thumbnail</scope>
  </viva.Thumbnail.animatedDuration>
  <viva.Thumbnail.Thumbnail_x0028_Texture2D_x0029_>
    <signature>viva.Thumbnail.Thumbnail(Texture2D)</signature>
    <childcount>0</childcount>
    <type>Constructor</type>
    <name>Thumbnail</name>
    <token>public  Thumbnail(Texture2D _texture=null)</token>
    <scope>viva.Thumbnail</scope>
    <params>
      <_texture>Texture2D</_texture>
    </params>
  </viva.Thumbnail.Thumbnail_x0028_Texture2D_x0029_>
  <viva.BodySet>
    <signature>viva.BodySet</signature>
    <childcount>9</childcount>
    <type>Class</type>
    <name>BodySet</name>
    <token>public class BodySet </token>
    <scope>viva</scope>
  </viva.BodySet>
  <viva.BodySet.name>
    <signature>viva.BodySet.name</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>name</name>
    <token>public readonly string name = </token>
    <scope>viva.BodySet</scope>
  </viva.BodySet.name>
  <viva.BodySet.Count>
    <signature>viva.BodySet.Count</signature>
    <childcount>0</childcount>
    <type>Property</type>
    <name>Count</name>
    <token>public int Count { get; }</token>
    <scope>viva.BodySet</scope>
  </viva.BodySet.Count>
  <viva.BodySet.this_x005B__x0020_int_x0020_index_x0020__x005D_>
    <signature>viva.BodySet.this[ int index ]</signature>
    <childcount>0</childcount>
    <type>Property</type>
    <name>this[ int index ]</name>
    <token>public AnimationState this[ int index ] { get; }</token>
    <scope>viva.BodySet</scope>
  </viva.BodySet.this_x005B__x0020_int_x0020_index_x0020__x005D_>
  <viva.BodySet.this_x005B__x0020_string_x0020_key_x0020__x005D_>
    <signature>viva.BodySet.this[ string key ]</signature>
    <childcount>0</childcount>
    <type>Property</type>
    <name>this[ string key ]</name>
    <token>public AnimationState this[ string key ] { get; }</token>
    <scope>viva.BodySet</scope>
  </viva.BodySet.this_x005B__x0020_string_x0020_key_x0020__x005D_>
  <viva.BodySet.ContainsAnimationState_x0028_AnimationState_x0029_>
    <signature>viva.BodySet.ContainsAnimationState(AnimationState)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>ContainsAnimationState</name>
    <token>public bool ContainsAnimationState(AnimationState animationState)</token>
    <scope>viva.BodySet</scope>
    <params>
      <animationState>AnimationState</animationState>
    </params>
  </viva.BodySet.ContainsAnimationState_x0028_AnimationState_x0029_>
  <viva.BodySet.transitions>
    <signature>viva.BodySet.transitions</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>transitions</name>
    <token>public Dictionary&lt;BodySet, AnimationState&gt; transitions </token>
    <scope>viva.BodySet</scope>
  </viva.BodySet.transitions>
  <viva.BodySet.BodySet_x0028_string_x0029_>
    <signature>viva.BodySet.BodySet(string)</signature>
    <childcount>0</childcount>
    <type>Constructor</type>
    <name>BodySet</name>
    <token>public  BodySet(string _name)</token>
    <scope>viva.BodySet</scope>
    <params>
      <_name>string</_name>
    </params>
  </viva.BodySet.BodySet_x0028_string_x0029_>
  <viva.BodySet.AddAnimationState_x0028_AnimationState_x0029_>
    <signature>viva.BodySet.AddAnimationState(AnimationState)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>AddAnimationState</name>
    <token>public bool AddAnimationState(AnimationState state)</token>
    <scope>viva.BodySet</scope>
    <params>
      <state>AnimationState</state>
    </params>
  </viva.BodySet.AddAnimationState_x0028_AnimationState_x0029_>
  <viva.AnimationSet>
    <signature>viva.AnimationSet</signature>
    <childcount>9</childcount>
    <type>Class</type>
    <name>AnimationSet</name>
    <token>public class AnimationSet </token>
    <scope>viva</scope>
  </viva.AnimationSet>
  <viva.AnimationSet.AnimationSet_x0028_Model_x0029_>
    <signature>viva.AnimationSet.AnimationSet(Model)</signature>
    <childcount>0</childcount>
    <type>Constructor</type>
    <name>AnimationSet</name>
    <token>public  AnimationSet(Model model)</token>
    <scope>viva.AnimationSet</scope>
    <params>
      <model>Model</model>
    </params>
  </viva.AnimationSet.AnimationSet_x0028_Model_x0029_>
  <viva.AnimationSet.AnimationSet_x0028_AnimationSet_x0029_>
    <signature>viva.AnimationSet.AnimationSet(AnimationSet)</signature>
    <childcount>0</childcount>
    <type>Constructor</type>
    <name>AnimationSet</name>
    <token>public  AnimationSet(AnimationSet copy)</token>
    <scope>viva.AnimationSet</scope>
    <params>
      <copy>AnimationSet</copy>
    </params>
  </viva.AnimationSet.AnimationSet_x0028_AnimationSet_x0029_>
  <viva.AnimationSet.FindParentBodySet_x0028_AnimationState_x0029_>
    <signature>viva.AnimationSet.FindParentBodySet(AnimationState)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>FindParentBodySet</name>
    <token>public BodySet FindParentBodySet(AnimationState animationState)</token>
    <scope>viva.AnimationSet</scope>
    <params>
      <animationState>AnimationState</animationState>
    </params>
  </viva.AnimationSet.FindParentBodySet_x0028_AnimationState_x0029_>
  <viva.AnimationSet.this_x005B__x0020_int_x0020_index_x0020__x005D_>
    <signature>viva.AnimationSet.this[ int index ]</signature>
    <childcount>0</childcount>
    <type>Property</type>
    <name>this[ int index ]</name>
    <token>public BodySet this[ int index ] { get; set; }</token>
    <scope>viva.AnimationSet</scope>
  </viva.AnimationSet.this_x005B__x0020_int_x0020_index_x0020__x005D_>
  <viva.AnimationSet.this_x005B__x0020_string_x0020_key_x0020__x005D_>
    <signature>viva.AnimationSet.this[ string key ]</signature>
    <childcount>0</childcount>
    <type>Property</type>
    <name>this[ string key ]</name>
    <token>public BodySet this[ string key ] { get; }</token>
    <scope>viva.AnimationSet</scope>
  </viva.AnimationSet.this_x005B__x0020_string_x0020_key_x0020__x005D_>
  <viva.AnimationSet.GetBodySet_x0028_string_x0029_>
    <signature>viva.AnimationSet.GetBodySet(string)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>GetBodySet</name>
    <token>public BodySet GetBodySet(string name)</token>
    <scope>viva.AnimationSet</scope>
    <params>
      <name>string</name>
    </params>
  </viva.AnimationSet.GetBodySet_x0028_string_x0029_>
  <viva.AnimationSet.FindBodyStatePath_x0028_List_x003C_AnimationState_x003E__x002C__x0020_BodySet_x002C__x0020_BodySet_x0029_>
    <signature>viva.AnimationSet.FindBodyStatePath(List&lt;AnimationState&gt;, BodySet, BodySet)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>FindBodyStatePath</name>
    <token>public bool FindBodyStatePath(List&lt;AnimationState&gt; path, BodySet startSet, BodySet endSet)</token>
    <scope>viva.AnimationSet</scope>
    <params>
      <path>List&lt;AnimationState&gt;</path>
      <startSet>BodySet</startSet>
      <endSet>BodySet</endSet>
    </params>
  </viva.AnimationSet.FindBodyStatePath_x0028_List_x003C_AnimationState_x003E__x002C__x0020_BodySet_x002C__x0020_BodySet_x0029_>
  <viva.Autonomy>
    <signature>viva.Autonomy</signature>
    <childcount>15</childcount>
    <type>Class</type>
    <name>Autonomy</name>
    <token>public class Autonomy : MonoBehaviour </token>
    <scope>viva</scope>
  </viva.Autonomy>
  <viva.Autonomy.self>
    <signature>viva.Autonomy.self</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>self</name>
    <token>public Character self </token>
    <scope>viva.Autonomy</scope>
  </viva.Autonomy.self>
  <viva.Autonomy.onFixedUpdate>
    <signature>viva.Autonomy.onFixedUpdate</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>onFixedUpdate</name>
    <token>public GenericCallback onFixedUpdate </token>
    <scope>viva.Autonomy</scope>
  </viva.Autonomy.onFixedUpdate>
  <viva.Autonomy.onUpdate>
    <signature>viva.Autonomy.onUpdate</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>onUpdate</name>
    <token>public GenericCallback onUpdate </token>
    <scope>viva.Autonomy</scope>
  </viva.Autonomy.onUpdate>
  <viva.Autonomy.onLateUpdate>
    <signature>viva.Autonomy.onLateUpdate</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>onLateUpdate</name>
    <token>public GenericCallback onLateUpdate </token>
    <scope>viva.Autonomy</scope>
  </viva.Autonomy.onLateUpdate>
  <viva.Autonomy.AddTask_x0028_Task_x0029_>
    <signature>viva.Autonomy.AddTask(Task)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>AddTask</name>
    <token>public void AddTask(Task task)</token>
    <scope>viva.Autonomy</scope>
    <params>
      <task>Task</task>
    </params>
  </viva.Autonomy.AddTask_x0028_Task_x0029_>
  <viva.Autonomy.ClearAllTasks_x0028__x0029_>
    <signature>viva.Autonomy.ClearAllTasks()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>ClearAllTasks</name>
    <token>public void ClearAllTasks()</token>
    <scope>viva.Autonomy</scope>
  </viva.Autonomy.ClearAllTasks_x0028__x0029_>
  <viva.Autonomy.RemoveTask_x0028_string_x0029_>
    <signature>viva.Autonomy.RemoveTask(string)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>RemoveTask</name>
    <token>public void RemoveTask(string taskName)</token>
    <scope>viva.Autonomy</scope>
    <params>
      <taskName>string</taskName>
    </params>
  </viva.Autonomy.RemoveTask_x0028_string_x0029_>
  <viva.Autonomy.InsertTask_x0028_Task_x002C__x0020_int_x0029_>
    <signature>viva.Autonomy.InsertTask(Task, int)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>InsertTask</name>
    <token>public void InsertTask(Task task, int index)</token>
    <scope>viva.Autonomy</scope>
    <params>
      <task>Task</task>
      <index>int</index>
    </params>
  </viva.Autonomy.InsertTask_x0028_Task_x002C__x0020_int_x0029_>
  <viva.Autonomy.Validate_x0028__x0029_>
    <signature>viva.Autonomy.Validate()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>Validate</name>
    <token>public void Validate()</token>
    <scope>viva.Autonomy</scope>
  </viva.Autonomy.Validate_x0028__x0029_>
  <viva.Autonomy.UnregisterTask_x0028_Task_x0029_>
    <signature>viva.Autonomy.UnregisterTask(Task)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>UnregisterTask</name>
    <token>public void UnregisterTask(Task task)</token>
    <scope>viva.Autonomy</scope>
    <params>
      <task>Task</task>
    </params>
  </viva.Autonomy.UnregisterTask_x0028_Task_x0029_>
  <viva.Autonomy.RegisterTask_x0028_Task_x0029_>
    <signature>viva.Autonomy.RegisterTask(Task)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>RegisterTask</name>
    <token>public void RegisterTask(Task task)</token>
    <scope>viva.Autonomy</scope>
    <params>
      <task>Task</task>
    </params>
  </viva.Autonomy.RegisterTask_x0028_Task_x0029_>
  <viva.TaskTarget>
    <signature>viva.TaskTarget</signature>
    <childcount>8</childcount>
    <type>Class</type>
    <name>TaskTarget</name>
    <token>public class TaskTarget </token>
    <scope>viva</scope>
  </viva.TaskTarget>
  <viva.TaskTarget.TargetType>
    <signature>viva.TaskTarget.TargetType</signature>
    <childcount>3</childcount>
    <type>Enum</type>
    <name>TargetType</name>
    <token>public enum TargetType </token>
    <scope>viva.TaskTarget</scope>
  </viva.TaskTarget.TargetType>
  <viva.TaskTarget.TargetType.WORLD_POSITION>
    <signature>viva.TaskTarget.TargetType.WORLD_POSITION</signature>
    <childcount>0</childcount>
    <type>EnumValue</type>
    <name>WORLD_POSITION</name>
    <token>WORLD_POSITION</token>
    <scope>viva.TaskTarget.TargetType</scope>
  </viva.TaskTarget.TargetType.WORLD_POSITION>
  <viva.TaskTarget.TargetType.TRANSFORM>
    <signature>viva.TaskTarget.TargetType.TRANSFORM</signature>
    <childcount>0</childcount>
    <type>EnumValue</type>
    <name>TRANSFORM</name>
    <token>TRANSFORM</token>
    <scope>viva.TaskTarget.TargetType</scope>
  </viva.TaskTarget.TargetType.TRANSFORM>
  <viva.TaskTarget.TargetType.IN_HIERARCHY>
    <signature>viva.TaskTarget.TargetType.IN_HIERARCHY</signature>
    <childcount>0</childcount>
    <type>EnumValue</type>
    <name>IN_HIERARCHY</name>
    <token>IN_HIERARCHY</token>
    <scope>viva.TaskTarget.TargetType</scope>
  </viva.TaskTarget.TargetType.IN_HIERARCHY>
  <viva.TaskTarget.targetTransform>
    <signature>viva.TaskTarget.targetTransform</signature>
    <childcount>0</childcount>
    <type>Property</type>
    <name>targetTransform</name>
    <token>public Transform targetTransform { get; set; }</token>
    <scope>viva.TaskTarget</scope>
  </viva.TaskTarget.targetTransform>
  <viva.TaskTarget.type>
    <signature>viva.TaskTarget.type</signature>
    <childcount>0</childcount>
    <type>Property</type>
    <name>type</name>
    <token>public TargetType type { get; set; }</token>
    <scope>viva.TaskTarget</scope>
  </viva.TaskTarget.type>
  <viva.TaskTarget.TaskTarget_x0028__x0029_>
    <signature>viva.TaskTarget.TaskTarget()</signature>
    <childcount>0</childcount>
    <type>Constructor</type>
    <name>TaskTarget</name>
    <token>public  TaskTarget()</token>
    <scope>viva.TaskTarget</scope>
  </viva.TaskTarget.TaskTarget_x0028__x0029_>
  <viva.TaskTarget.SetTargetPosition_x0028_Vector3_x003F__x0029_>
    <signature>viva.TaskTarget.SetTargetPosition(Vector3?)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>SetTargetPosition</name>
    <token>public void SetTargetPosition(Vector3? pos)</token>
    <scope>viva.TaskTarget</scope>
    <params>
      <pos>Vector3?</pos>
    </params>
  </viva.TaskTarget.SetTargetPosition_x0028_Vector3_x003F__x0029_>
  <viva.TaskTarget.SetTargetTransform_x0028_Transform_x0029_>
    <signature>viva.TaskTarget.SetTargetTransform(Transform)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>SetTargetTransform</name>
    <token>public void SetTargetTransform(Transform newTargetTransform)</token>
    <scope>viva.TaskTarget</scope>
    <params>
      <newTargetTransform>Transform</newTargetTransform>
    </params>
  </viva.TaskTarget.SetTargetTransform_x0028_Transform_x0029_>
  <viva.TaskTarget.Read_x0028__x0029_>
    <signature>viva.TaskTarget.Read()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>Read</name>
    <token>public Vector3? Read()</token>
    <scope>viva.TaskTarget</scope>
  </viva.TaskTarget.Read_x0028__x0029_>
  <viva.FaceTargetBody>
    <signature>viva.FaceTargetBody</signature>
    <childcount>10</childcount>
    <type>Class</type>
    <name>FaceTargetBody</name>
    <token>public class FaceTargetBody : Task </token>
    <scope>viva</scope>
  </viva.FaceTargetBody>
  <viva.FaceTargetBody.target>
    <signature>viva.FaceTargetBody.target</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>target</name>
    <token>public readonly TaskTarget target = new TaskTarget();</token>
    <scope>viva.FaceTargetBody</scope>
  </viva.FaceTargetBody.target>
  <viva.OnFixedUpdate_x0028__x0029_>
    <signature>viva.OnFixedUpdate()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>OnFixedUpdate</name>
    <token>public void OnFixedUpdate()</token>
    <scope>viva</scope>
  </viva.OnFixedUpdate_x0028__x0029_>
  <viva.OnModifyAnimation_x0028__x0029_>
    <signature>viva.OnModifyAnimation()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>OnModifyAnimation</name>
    <token>public void OnModifyAnimation()</token>
    <scope>viva</scope>
  </viva.OnModifyAnimation_x0028__x0029_>
  <viva.FaceTargetEyes>
    <signature>viva.FaceTargetEyes</signature>
    <childcount>8</childcount>
    <type>Class</type>
    <name>FaceTargetEyes</name>
    <token>public class FaceTargetEyes : Task </token>
    <scope>viva</scope>
  </viva.FaceTargetEyes>
  <viva.FaceTargetEyes.target>
    <signature>viva.FaceTargetEyes.target</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>target</name>
    <token>public readonly TaskTarget target = new TaskTarget();</token>
    <scope>viva.FaceTargetEyes</scope>
  </viva.FaceTargetEyes.target>
  <viva.FaceTargetEyes.FaceTargetEyes_x0028_Autonomy_x002C__x0020_string_x0029_>
    <signature>viva.FaceTargetEyes.FaceTargetEyes(Autonomy, string)</signature>
    <childcount>0</childcount>
    <type>Constructor</type>
    <name>FaceTargetEyes</name>
    <token>public  FaceTargetEyes(Autonomy _autonomy, string _name):base(_autonomy,_name)</token>
    <scope>viva.FaceTargetEyes</scope>
    <params>
      <_autonomy>Autonomy</_autonomy>
      <_name>string</_name>
    </params>
  </viva.FaceTargetEyes.FaceTargetEyes_x0028_Autonomy_x002C__x0020_string_x0029_>
  <viva.FaceTargetEyes.OnModifyAnimation_x0028__x0029_>
    <signature>viva.FaceTargetEyes.OnModifyAnimation()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>OnModifyAnimation</name>
    <token>public void OnModifyAnimation()</token>
    <scope>viva.FaceTargetEyes</scope>
  </viva.FaceTargetEyes.OnModifyAnimation_x0028__x0029_>
  <viva.MoveTo>
    <signature>viva.MoveTo</signature>
    <childcount>20</childcount>
    <type>Class</type>
    <name>MoveTo</name>
    <token>public partial class MoveTo : Task </token>
    <scope>viva</scope>
  </viva.MoveTo>
  <viva.MoveTo.path>
    <signature>viva.MoveTo.path</signature>
    <childcount>0</childcount>
    <type>Property</type>
    <name>path</name>
    <token>public Vector3[] path { get; set; }</token>
    <scope>viva.MoveTo</scope>
  </viva.MoveTo.path>
  <viva.MoveTo.currentPathNode>
    <signature>viva.MoveTo.currentPathNode</signature>
    <childcount>0</childcount>
    <type>Property</type>
    <name>currentPathNode</name>
    <token>public int currentPathNode { get; set; }</token>
    <scope>viva.MoveTo</scope>
  </viva.MoveTo.currentPathNode>
  <viva.MoveTo.target>
    <signature>viva.MoveTo.target</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>target</name>
    <token>public readonly TaskTarget target = new TaskTarget();</token>
    <scope>viva.MoveTo</scope>
  </viva.MoveTo.target>
  <viva.MoveTo.defaultMinDist>
    <signature>viva.MoveTo.defaultMinDist</signature>
    <childcount>0</childcount>
    <type>Property</type>
    <name>defaultMinDist</name>
    <token>public static float defaultMinDist { get; set; }</token>
    <scope>viva.MoveTo</scope>
  </viva.MoveTo.defaultMinDist>
  <viva.MoveTo.defaultMinSqDist>
    <signature>viva.MoveTo.defaultMinSqDist</signature>
    <childcount>0</childcount>
    <type>Property</type>
    <name>defaultMinSqDist</name>
    <token>public static float defaultMinSqDist { get; }</token>
    <scope>viva.MoveTo</scope>
  </viva.MoveTo.defaultMinSqDist>
  <viva.MoveTo.MoveTo_x0028_Autonomy_x002C__x0020_string_x0029_>
    <signature>viva.MoveTo.MoveTo(Autonomy, string)</signature>
    <childcount>0</childcount>
    <type>Constructor</type>
    <name>MoveTo</name>
    <token>public  MoveTo(Autonomy _autonomy, string name):base(_autonomy,name)</token>
    <scope>viva.MoveTo</scope>
    <params>
      <_autonomy>Autonomy</_autonomy>
      <name>string</name>
    </params>
  </viva.MoveTo.MoveTo_x0028_Autonomy_x002C__x0020_string_x0029_>
  <viva.MoveTo.DoubleCheckSuccess_x0028__x0029_>
    <signature>viva.MoveTo.DoubleCheckSuccess()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>DoubleCheckSuccess</name>
    <token>public override bool DoubleCheckSuccess()</token>
    <scope>viva.MoveTo</scope>
  </viva.MoveTo.DoubleCheckSuccess_x0028__x0029_>
  <viva.MoveTo.ApplyMovement_x0028__x0029_>
    <signature>viva.MoveTo.ApplyMovement()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>ApplyMovement</name>
    <token>public void ApplyMovement()</token>
    <scope>viva.MoveTo</scope>
  </viva.MoveTo.ApplyMovement_x0028__x0029_>
  <viva.MoveTo.Stop_x0028__x0029_>
    <signature>viva.MoveTo.Stop()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>Stop</name>
    <token>public void Stop()</token>
    <scope>viva.MoveTo</scope>
  </viva.MoveTo.Stop_x0028__x0029_>
  <viva.MoveTo.isMoveToActive_x0028__x0029_>
    <signature>viva.MoveTo.isMoveToActive()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>isMoveToActive</name>
    <token>public bool isMoveToActive()</token>
    <scope>viva.MoveTo</scope>
  </viva.MoveTo.isMoveToActive_x0028__x0029_>
  <viva.MoveTo.GetCurrentDestination_x0028__x0029_>
    <signature>viva.MoveTo.GetCurrentDestination()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>GetCurrentDestination</name>
    <token>public Vector3? GetCurrentDestination()</token>
    <scope>viva.MoveTo</scope>
  </viva.MoveTo.GetCurrentDestination_x0028__x0029_>
  <viva.PlayAnimation>
    <signature>viva.PlayAnimation</signature>
    <childcount>6</childcount>
    <type>Class</type>
    <name>PlayAnimation</name>
    <token>public class PlayAnimation : Task </token>
    <scope>viva</scope>
  </viva.PlayAnimation>
  <viva.PlayAnimation.targetAnimState>
    <signature>viva.PlayAnimation.targetAnimState</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>targetAnimState</name>
    <token>public AnimationState targetAnimState </token>
    <scope>viva.PlayAnimation</scope>
  </viva.PlayAnimation.targetAnimState>
  <viva.PlayAnimation.PlayAnimation_x0028_Autonomy_x002C__x0020_string_x002C__x0020_AnimationState_x002C__x0020_bool_x0029_>
    <signature>viva.PlayAnimation.PlayAnimation(Autonomy, string, AnimationState, bool)</signature>
    <childcount>0</childcount>
    <type>Constructor</type>
    <name>PlayAnimation</name>
    <token>public  PlayAnimation(Autonomy _autonomy, string _name, AnimationState _targetAnimState, bool _enforceCorrectBodySet=true):base(_autonomy,_name)</token>
    <scope>viva.PlayAnimation</scope>
    <params>
      <_autonomy>Autonomy</_autonomy>
      <_name>string</_name>
      <_targetAnimState>AnimationState</_targetAnimState>
      <_enforceCorrectBodySet>bool</_enforceCorrectBodySet>
    </params>
  </viva.PlayAnimation.PlayAnimation_x0028_Autonomy_x002C__x0020_string_x002C__x0020_AnimationState_x002C__x0020_bool_x0029_>
  <viva.Task>
    <signature>viva.Task</signature>
    <childcount>53</childcount>
    <type>Class</type>
    <name>Task</name>
    <token>public class Task </token>
    <scope>viva</scope>
  </viva.Task>
  <viva.Task.name>
    <signature>viva.Task.name</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>name</name>
    <token>public readonly string name = </token>
    <scope>viva.Task</scope>
  </viva.Task.name>
  <viva.Task.autonomy>
    <signature>viva.Task.autonomy</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>autonomy</name>
    <token>public readonly Autonomy autonomy = </token>
    <scope>viva.Task</scope>
  </viva.Task.autonomy>
  <viva.Task.self>
    <signature>viva.Task.self</signature>
    <childcount>0</childcount>
    <type>Property</type>
    <name>self</name>
    <token>public Character self { get; }</token>
    <scope>viva.Task</scope>
  </viva.Task.self>
  <viva.Task.onFail>
    <signature>viva.Task.onFail</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>onFail</name>
    <token>public GenericCallback onFail </token>
    <scope>viva.Task</scope>
  </viva.Task.onFail>
  <viva.Task.onSuccess>
    <signature>viva.Task.onSuccess</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>onSuccess</name>
    <token>public GenericCallback onSuccess </token>
    <scope>viva.Task</scope>
  </viva.Task.onSuccess>
  <viva.Task.onRemovedFromQueue>
    <signature>viva.Task.onRemovedFromQueue</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>onRemovedFromQueue</name>
    <token>public GenericCallback onRemovedFromQueue </token>
    <scope>viva.Task</scope>
  </viva.Task.onRemovedFromQueue>
  <viva.Task.failed>
    <signature>viva.Task.failed</signature>
    <childcount>0</childcount>
    <type>Property</type>
    <name>failed</name>
    <token>public bool failed { get; }</token>
    <scope>viva.Task</scope>
  </viva.Task.failed>
  <viva.Task.succeeded>
    <signature>viva.Task.succeeded</signature>
    <childcount>0</childcount>
    <type>Property</type>
    <name>succeeded</name>
    <token>public bool succeeded { get; }</token>
    <scope>viva.Task</scope>
  </viva.Task.succeeded>
  <viva.Task.finished>
    <signature>viva.Task.finished</signature>
    <childcount>0</childcount>
    <type>Property</type>
    <name>finished</name>
    <token>public bool finished { get; }</token>
    <scope>viva.Task</scope>
  </viva.Task.finished>
  <viva.Task.registered>
    <signature>viva.Task.registered</signature>
    <childcount>0</childcount>
    <type>Property</type>
    <name>registered</name>
    <token>public bool registered { get; set; }</token>
    <scope>viva.Task</scope>
  </viva.Task.registered>
  <viva.Task.isAPassive>
    <signature>viva.Task.isAPassive</signature>
    <childcount>0</childcount>
    <type>Property</type>
    <name>isAPassive</name>
    <token>public bool isAPassive { get; set; }</token>
    <scope>viva.Task</scope>
  </viva.Task.isAPassive>
  <viva.Task.isARequirement>
    <signature>viva.Task.isARequirement</signature>
    <childcount>0</childcount>
    <type>Property</type>
    <name>isARequirement</name>
    <token>public bool isARequirement { get; set; }</token>
    <scope>viva.Task</scope>
  </viva.Task.isARequirement>
  <viva.Task.passiveCount>
    <signature>viva.Task.passiveCount</signature>
    <childcount>0</childcount>
    <type>Property</type>
    <name>passiveCount</name>
    <token>public int passiveCount { get; }</token>
    <scope>viva.Task</scope>
  </viva.Task.passiveCount>
  <viva.Task.requirementCount>
    <signature>viva.Task.requirementCount</signature>
    <childcount>0</childcount>
    <type>Property</type>
    <name>requirementCount</name>
    <token>public int requirementCount { get; }</token>
    <scope>viva.Task</scope>
  </viva.Task.requirementCount>
  <viva.Task.Task_x0028_Autonomy_x002C__x0020_string_x0029_>
    <signature>viva.Task.Task(Autonomy, string)</signature>
    <childcount>0</childcount>
    <type>Constructor</type>
    <name>Task</name>
    <token>public  Task(Autonomy _autonomy, string _name)</token>
    <scope>viva.Task</scope>
    <params>
      <_autonomy>Autonomy</_autonomy>
      <_name>string</_name>
    </params>
  </viva.Task.Task_x0028_Autonomy_x002C__x0020_string_x0029_>
  <viva.Task.onFixedUpdate>
    <signature>viva.Task.onFixedUpdate</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>onFixedUpdate</name>
    <token>public GenericCallback onFixedUpdate </token>
    <scope>viva.Task</scope>
  </viva.Task.onFixedUpdate>
  <viva.Task.onUpdate>
    <signature>viva.Task.onUpdate</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>onUpdate</name>
    <token>public GenericCallback onUpdate </token>
    <scope>viva.Task</scope>
  </viva.Task.onUpdate>
  <viva.Task.onLateUpdate>
    <signature>viva.Task.onLateUpdate</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>onLateUpdate</name>
    <token>public GenericCallback onLateUpdate </token>
    <scope>viva.Task</scope>
  </viva.Task.onLateUpdate>
  <viva.Task.onModifyAnimation>
    <signature>viva.Task.onModifyAnimation</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>onModifyAnimation</name>
    <token>public GenericCallback onModifyAnimation </token>
    <scope>viva.Task</scope>
  </viva.Task.onModifyAnimation>
  <viva.Task.onAnimationChange>
    <signature>viva.Task.onAnimationChange</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>onAnimationChange</name>
    <token>public GenericCallback onAnimationChange </token>
    <scope>viva.Task</scope>
  </viva.Task.onAnimationChange>
  <viva.Task.onRegistered>
    <signature>viva.Task.onRegistered</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>onRegistered</name>
    <token>public GenericCallback onRegistered </token>
    <scope>viva.Task</scope>
  </viva.Task.onRegistered>
  <viva.Task.onUnregistered>
    <signature>viva.Task.onUnregistered</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>onUnregistered</name>
    <token>public GenericCallback onUnregistered </token>
    <scope>viva.Task</scope>
  </viva.Task.onUnregistered>
  <viva.Task.FixedUpdate_x0028__x0029_>
    <signature>viva.Task.FixedUpdate()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>FixedUpdate</name>
    <token>public void FixedUpdate()</token>
    <scope>viva.Task</scope>
  </viva.Task.FixedUpdate_x0028__x0029_>
  <viva.Task.Update_x0028__x0029_>
    <signature>viva.Task.Update()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>Update</name>
    <token>public void Update()</token>
    <scope>viva.Task</scope>
  </viva.Task.Update_x0028__x0029_>
  <viva.Task.LateUpdate_x0028__x0029_>
    <signature>viva.Task.LateUpdate()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>LateUpdate</name>
    <token>public void LateUpdate()</token>
    <scope>viva.Task</scope>
  </viva.Task.LateUpdate_x0028__x0029_>
  <viva.Task.ModifyAnimation_x0028__x0029_>
    <signature>viva.Task.ModifyAnimation()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>ModifyAnimation</name>
    <token>public void ModifyAnimation()</token>
    <scope>viva.Task</scope>
  </viva.Task.ModifyAnimation_x0028__x0029_>
  <viva.Task.AnimationChange_x0028__x0029_>
    <signature>viva.Task.AnimationChange()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>AnimationChange</name>
    <token>public void AnimationChange()</token>
    <scope>viva.Task</scope>
  </viva.Task.AnimationChange_x0028__x0029_>
  <viva.Task.AddPassive_x0028_Task_x0029_>
    <signature>viva.Task.AddPassive(Task)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>AddPassive</name>
    <token>public void AddPassive(Task passive)</token>
    <scope>viva.Task</scope>
    <params>
      <passive>Task</passive>
    </params>
  </viva.Task.AddPassive_x0028_Task_x0029_>
  <viva.Task.RemovePassive_x0028_Task_x0029_>
    <signature>viva.Task.RemovePassive(Task)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>RemovePassive</name>
    <token>public void RemovePassive(Task passive)</token>
    <scope>viva.Task</scope>
    <params>
      <passive>Task</passive>
    </params>
  </viva.Task.RemovePassive_x0028_Task_x0029_>
  <viva.Task.AddRequirement_x0028_Task_x0029_>
    <signature>viva.Task.AddRequirement(Task)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>AddRequirement</name>
    <token>public void AddRequirement(Task requirement)</token>
    <scope>viva.Task</scope>
    <params>
      <requirement>Task</requirement>
    </params>
  </viva.Task.AddRequirement_x0028_Task_x0029_>
  <viva.Task.PrependRequirement_x0028_Task_x0029_>
    <signature>viva.Task.PrependRequirement(Task)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>PrependRequirement</name>
    <token>public void PrependRequirement(Task requirement)</token>
    <scope>viva.Task</scope>
    <params>
      <requirement>Task</requirement>
    </params>
  </viva.Task.PrependRequirement_x0028_Task_x0029_>
  <viva.Task.RemoveRequirement_x0028_Task_x0029_>
    <signature>viva.Task.RemoveRequirement(Task)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>RemoveRequirement</name>
    <token>public void RemoveRequirement(Task requirement)</token>
    <scope>viva.Task</scope>
    <params>
      <requirement>Task</requirement>
    </params>
  </viva.Task.RemoveRequirement_x0028_Task_x0029_>
  <viva.Task.GetPassive_x0028_int_x0029_>
    <signature>viva.Task.GetPassive(int)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>GetPassive</name>
    <token>public Task GetPassive(int index)</token>
    <scope>viva.Task</scope>
    <params>
      <index>int</index>
    </params>
  </viva.Task.GetPassive_x0028_int_x0029_>
  <viva.Task.GetRequirement_x0028_int_x0029_>
    <signature>viva.Task.GetRequirement(int)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>GetRequirement</name>
    <token>public Task GetRequirement(int index)</token>
    <scope>viva.Task</scope>
    <params>
      <index>int</index>
    </params>
  </viva.Task.GetRequirement_x0028_int_x0029_>
  <viva.Task.UnregisterInProgress_x0028__x0029_>
    <signature>viva.Task.UnregisterInProgress()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>UnregisterInProgress</name>
    <token>public void UnregisterInProgress()</token>
    <scope>viva.Task</scope>
  </viva.Task.UnregisterInProgress_x0028__x0029_>
  <viva.Task.RegisterInProgress_x0028_Task_x0029_>
    <signature>viva.Task.RegisterInProgress(Task)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>RegisterInProgress</name>
    <token>public void RegisterInProgress(Task task)</token>
    <scope>viva.Task</scope>
    <params>
      <task>Task</task>
    </params>
  </viva.Task.RegisterInProgress_x0028_Task_x0029_>
  <viva.Task.Fail_x0028__x0029_>
    <signature>viva.Task.Fail()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>Fail</name>
    <token>public void Fail()</token>
    <scope>viva.Task</scope>
  </viva.Task.Fail_x0028__x0029_>
  <viva.Task.Succeed_x0028__x0029_>
    <signature>viva.Task.Succeed()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>Succeed</name>
    <token>public void Succeed()</token>
    <scope>viva.Task</scope>
  </viva.Task.Succeed_x0028__x0029_>
  <viva.Task.FireOnRegistered_x0028__x0029_>
    <signature>viva.Task.FireOnRegistered()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>FireOnRegistered</name>
    <token>public void FireOnRegistered()</token>
    <scope>viva.Task</scope>
  </viva.Task.FireOnRegistered_x0028__x0029_>
  <viva.Task.FireOnUnregistered_x0028__x0029_>
    <signature>viva.Task.FireOnUnregistered()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>FireOnUnregistered</name>
    <token>public void FireOnUnregistered()</token>
    <scope>viva.Task</scope>
  </viva.Task.FireOnUnregistered_x0028__x0029_>
  <viva.Task.DoubleCheckSuccess_x0028__x0029_>
    <signature>viva.Task.DoubleCheckSuccess()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>DoubleCheckSuccess</name>
    <token>public virtual bool DoubleCheckSuccess()</token>
    <scope>viva.Task</scope>
  </viva.Task.DoubleCheckSuccess_x0028__x0029_>
  <viva.Task.ValidateHierarchy_x0028_Task_x0029_>
    <signature>viva.Task.ValidateHierarchy(Task)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>ValidateHierarchy</name>
    <token>public bool? ValidateHierarchy(Task branch)</token>
    <scope>viva.Task</scope>
    <params>
      <branch>Task</branch>
    </params>
  </viva.Task.ValidateHierarchy_x0028_Task_x0029_>
  <B83.Win32>
    <signature>B83.Win32</signature>
    <childcount>9</childcount>
    <type>Namespace</type>
    <name>B83.Win32</name>
    <token>namespace B83.Win32</token>
    <scope></scope>
  </B83.Win32>
  <B83.Win32.CWPSTRUCT>
    <signature>B83.Win32.CWPSTRUCT</signature>
    <childcount>4</childcount>
    <type>Struct</type>
    <name>CWPSTRUCT</name>
    <token>[StructLayout(LayoutKind.Sequential)]
public struct CWPSTRUCT </token>
    <scope>B83.Win32</scope>
  </B83.Win32.CWPSTRUCT>
  <B83.Win32.CWPSTRUCT.lParam>
    <signature>B83.Win32.CWPSTRUCT.lParam</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>lParam</name>
    <token>public IntPtr lParam </token>
    <scope>B83.Win32.CWPSTRUCT</scope>
  </B83.Win32.CWPSTRUCT.lParam>
  <B83.Win32.CWPSTRUCT.wParam>
    <signature>B83.Win32.CWPSTRUCT.wParam</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>wParam</name>
    <token>public IntPtr wParam </token>
    <scope>B83.Win32.CWPSTRUCT</scope>
  </B83.Win32.CWPSTRUCT.wParam>
  <B83.Win32.CWPSTRUCT.message>
    <signature>B83.Win32.CWPSTRUCT.message</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>message</name>
    <token>public WM message </token>
    <scope>B83.Win32.CWPSTRUCT</scope>
  </B83.Win32.CWPSTRUCT.message>
  <B83.Win32.CWPSTRUCT.hwnd>
    <signature>B83.Win32.CWPSTRUCT.hwnd</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>hwnd</name>
    <token>public IntPtr hwnd </token>
    <scope>B83.Win32.CWPSTRUCT</scope>
  </B83.Win32.CWPSTRUCT.hwnd>
  <B83.Win32.POINT>
    <signature>B83.Win32.POINT</signature>
    <childcount>2</childcount>
    <type>Struct</type>
    <name>POINT</name>
    <token>[StructLayout(LayoutKind.Sequential)]
public struct POINT </token>
    <scope>B83.Win32</scope>
  </B83.Win32.POINT>
  <B83.Win32.POINT.POINT_x0028_int_x002C__x0020_int_x0029_>
    <signature>B83.Win32.POINT.POINT(int, int)</signature>
    <childcount>0</childcount>
    <type>Constructor</type>
    <name>POINT</name>
    <token>public  POINT(int aX, int aY)</token>
    <scope>B83.Win32.POINT</scope>
    <params>
      <aX>int</aX>
      <aY>int</aY>
    </params>
  </B83.Win32.POINT.POINT_x0028_int_x002C__x0020_int_x0029_>
  <B83.Win32.POINT.ToString_x0028__x0029_>
    <signature>B83.Win32.POINT.ToString()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>ToString</name>
    <token>public override string ToString()</token>
    <scope>B83.Win32.POINT</scope>
  </B83.Win32.POINT.ToString_x0028__x0029_>
  <B83.Win32.MSG>
    <signature>B83.Win32.MSG</signature>
    <childcount>6</childcount>
    <type>Struct</type>
    <name>MSG</name>
    <token>[StructLayout(LayoutKind.Sequential)]
public struct MSG </token>
    <scope>B83.Win32</scope>
  </B83.Win32.MSG>
  <B83.Win32.MSG.hwnd>
    <signature>B83.Win32.MSG.hwnd</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>hwnd</name>
    <token>public IntPtr hwnd </token>
    <scope>B83.Win32.MSG</scope>
  </B83.Win32.MSG.hwnd>
  <B83.Win32.MSG.message>
    <signature>B83.Win32.MSG.message</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>message</name>
    <token>public WM message </token>
    <scope>B83.Win32.MSG</scope>
  </B83.Win32.MSG.message>
  <B83.Win32.MSG.wParam>
    <signature>B83.Win32.MSG.wParam</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>wParam</name>
    <token>public IntPtr wParam </token>
    <scope>B83.Win32.MSG</scope>
  </B83.Win32.MSG.wParam>
  <B83.Win32.MSG.lParam>
    <signature>B83.Win32.MSG.lParam</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>lParam</name>
    <token>public IntPtr lParam </token>
    <scope>B83.Win32.MSG</scope>
  </B83.Win32.MSG.lParam>
  <B83.Win32.MSG.time>
    <signature>B83.Win32.MSG.time</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>time</name>
    <token>public ushort time </token>
    <scope>B83.Win32.MSG</scope>
  </B83.Win32.MSG.time>
  <B83.Win32.MSG.pt>
    <signature>B83.Win32.MSG.pt</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>pt</name>
    <token>public POINT pt </token>
    <scope>B83.Win32.MSG</scope>
  </B83.Win32.MSG.pt>
  <B83.Win32.RECT>
    <signature>B83.Win32.RECT</signature>
    <childcount>2</childcount>
    <type>Struct</type>
    <name>RECT</name>
    <token>[StructLayout(LayoutKind.Sequential)]
public struct RECT </token>
    <scope>B83.Win32</scope>
  </B83.Win32.RECT>
  <B83.Win32.RECT.RECT_x0028_int_x002C__x0020_int_x002C__x0020_int_x002C__x0020_int_x0029_>
    <signature>B83.Win32.RECT.RECT(int, int, int, int)</signature>
    <childcount>0</childcount>
    <type>Constructor</type>
    <name>RECT</name>
    <token>public  RECT(int left, int top, int right, int bottom)</token>
    <scope>B83.Win32.RECT</scope>
    <params>
      <left>int</left>
      <top>int</top>
      <right>int</right>
      <bottom>int</bottom>
    </params>
  </B83.Win32.RECT.RECT_x0028_int_x002C__x0020_int_x002C__x0020_int_x002C__x0020_int_x0029_>
  <B83.Win32.RECT.ToString_x0028__x0029_>
    <signature>B83.Win32.RECT.ToString()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>ToString</name>
    <token>public override string ToString()</token>
    <scope>B83.Win32.RECT</scope>
  </B83.Win32.RECT.ToString_x0028__x0029_>
  <B83.Win32.HookProc_x0028_int_x002C__x0020_IntPtr_x002C__x0020_MSG_x0029_>
    <signature>B83.Win32.HookProc(int, IntPtr, MSG)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>HookProc</name>
    <token>public delegate IntPtr HookProc(int code, IntPtr wParam, ref MSG lParam)</token>
    <scope>B83.Win32</scope>
    <params>
      <code>int</code>
      <wParam>IntPtr</wParam>
      <lParam>MSG</lParam>
    </params>
  </B83.Win32.HookProc_x0028_int_x002C__x0020_IntPtr_x002C__x0020_MSG_x0029_>
  <B83.Win32.EnumThreadDelegate_x0028_IntPtr_x002C__x0020_IntPtr_x0029_>
    <signature>B83.Win32.EnumThreadDelegate(IntPtr, IntPtr)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>EnumThreadDelegate</name>
    <token>public delegate bool EnumThreadDelegate(IntPtr Hwnd, IntPtr lParam)</token>
    <scope>B83.Win32</scope>
    <params>
      <Hwnd>IntPtr</Hwnd>
      <lParam>IntPtr</lParam>
    </params>
  </B83.Win32.EnumThreadDelegate_x0028_IntPtr_x002C__x0020_IntPtr_x0029_>
  <B83.Win32.Window>
    <signature>B83.Win32.Window</signature>
    <childcount>8</childcount>
    <type>Class</type>
    <name>Window</name>
    <token>public static class Window </token>
    <scope>B83.Win32</scope>
  </B83.Win32.Window>
  <B83.Win32.Window.EnumThreadWindows_x0028_uint_x002C__x0020_EnumThreadDelegate_x002C__x0020_IntPtr_x0029_>
    <signature>B83.Win32.Window.EnumThreadWindows(uint, EnumThreadDelegate, IntPtr)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>EnumThreadWindows</name>
    <token>[DllImport("user32.dll")]
public static extern bool EnumThreadWindows(uint dwThreadId, EnumThreadDelegate lpfn, IntPtr lParam)</token>
    <scope>B83.Win32.Window</scope>
    <params>
      <dwThreadId>uint</dwThreadId>
      <lpfn>EnumThreadDelegate</lpfn>
      <lParam>IntPtr</lParam>
    </params>
  </B83.Win32.Window.EnumThreadWindows_x0028_uint_x002C__x0020_EnumThreadDelegate_x002C__x0020_IntPtr_x0029_>
  <B83.Win32.Window.GetWindowRect_x0028_IntPtr_x002C__x0020_RECT_x0029_>
    <signature>B83.Win32.Window.GetWindowRect(IntPtr, RECT)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>GetWindowRect</name>
    <token>[DllImport("user32.dll", SetLastError = true)]
public static extern bool GetWindowRect(IntPtr hwnd, out RECT lpRect)</token>
    <scope>B83.Win32.Window</scope>
    <params>
      <hwnd>IntPtr</hwnd>
      <lpRect>RECT</lpRect>
    </params>
  </B83.Win32.Window.GetWindowRect_x0028_IntPtr_x002C__x0020_RECT_x0029_>
  <B83.Win32.Window.IsWindowVisible_x0028_IntPtr_x0029_>
    <signature>B83.Win32.Window.IsWindowVisible(IntPtr)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>IsWindowVisible</name>
    <token>[DllImport("user32.dll")]
public static extern bool IsWindowVisible(IntPtr hWnd)</token>
    <scope>B83.Win32.Window</scope>
    <params>
      <hWnd>IntPtr</hWnd>
    </params>
  </B83.Win32.Window.IsWindowVisible_x0028_IntPtr_x0029_>
  <B83.Win32.Window.GetClassName_x0028_IntPtr_x0029_>
    <signature>B83.Win32.Window.GetClassName(IntPtr)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>GetClassName</name>
    <token>public static string GetClassName(IntPtr hWnd)</token>
    <scope>B83.Win32.Window</scope>
    <params>
      <hWnd>IntPtr</hWnd>
    </params>
  </B83.Win32.Window.GetClassName_x0028_IntPtr_x0029_>
  <B83.Win32.Window.GetWindowText_x0028_IntPtr_x0029_>
    <signature>B83.Win32.Window.GetWindowText(IntPtr)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>GetWindowText</name>
    <token>public static string GetWindowText(IntPtr hWnd)</token>
    <scope>B83.Win32.Window</scope>
    <params>
      <hWnd>IntPtr</hWnd>
    </params>
  </B83.Win32.Window.GetWindowText_x0028_IntPtr_x0029_>
  <B83.Win32.WinAPI>
    <signature>B83.Win32.WinAPI</signature>
    <childcount>9</childcount>
    <type>Class</type>
    <name>WinAPI</name>
    <token>public static class WinAPI </token>
    <scope>B83.Win32</scope>
  </B83.Win32.WinAPI>
  <B83.Win32.WinAPI.GetModuleHandle_x0028_string_x0029_>
    <signature>B83.Win32.WinAPI.GetModuleHandle(string)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>GetModuleHandle</name>
    <token>[DllImport("kernel32.dll", CharSet = CharSet.Auto)]
public static extern IntPtr GetModuleHandle(string lpModuleName)</token>
    <scope>B83.Win32.WinAPI</scope>
    <params>
      <lpModuleName>string</lpModuleName>
    </params>
  </B83.Win32.WinAPI.GetModuleHandle_x0028_string_x0029_>
  <B83.Win32.WinAPI.GetCurrentThreadId_x0028__x0029_>
    <signature>B83.Win32.WinAPI.GetCurrentThreadId()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>GetCurrentThreadId</name>
    <token>[DllImport("kernel32.dll")]
public static extern uint GetCurrentThreadId()</token>
    <scope>B83.Win32.WinAPI</scope>
  </B83.Win32.WinAPI.GetCurrentThreadId_x0028__x0029_>
  <B83.Win32.WinAPI.SetWindowsHookEx_x0028_HookType_x002C__x0020_HookProc_x002C__x0020_IntPtr_x002C__x0020_uint_x0029_>
    <signature>B83.Win32.WinAPI.SetWindowsHookEx(HookType, HookProc, IntPtr, uint)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>SetWindowsHookEx</name>
    <token>[DllImport("user32.dll", SetLastError = true)]
public static extern IntPtr SetWindowsHookEx(HookType hookType, HookProc lpfn, IntPtr hMod, uint dwThreadId)</token>
    <scope>B83.Win32.WinAPI</scope>
    <params>
      <hookType>HookType</hookType>
      <lpfn>HookProc</lpfn>
      <hMod>IntPtr</hMod>
      <dwThreadId>uint</dwThreadId>
    </params>
  </B83.Win32.WinAPI.SetWindowsHookEx_x0028_HookType_x002C__x0020_HookProc_x002C__x0020_IntPtr_x002C__x0020_uint_x0029_>
  <B83.Win32.WinAPI.UnhookWindowsHookEx_x0028_IntPtr_x0029_>
    <signature>B83.Win32.WinAPI.UnhookWindowsHookEx(IntPtr)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>UnhookWindowsHookEx</name>
    <token>[DllImport("user32.dll", SetLastError = true)]
public static extern bool UnhookWindowsHookEx(IntPtr hhk)</token>
    <scope>B83.Win32.WinAPI</scope>
    <params>
      <hhk>IntPtr</hhk>
    </params>
  </B83.Win32.WinAPI.UnhookWindowsHookEx_x0028_IntPtr_x0029_>
  <B83.Win32.WinAPI.CallNextHookEx_x0028_IntPtr_x002C__x0020_int_x002C__x0020_IntPtr_x002C__x0020_MSG_x0029_>
    <signature>B83.Win32.WinAPI.CallNextHookEx(IntPtr, int, IntPtr, MSG)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>CallNextHookEx</name>
    <token>[DllImport("user32.dll")]
public static extern IntPtr CallNextHookEx(IntPtr hhk, int nCode, IntPtr wParam, ref MSG lParam)</token>
    <scope>B83.Win32.WinAPI</scope>
    <params>
      <hhk>IntPtr</hhk>
      <nCode>int</nCode>
      <wParam>IntPtr</wParam>
      <lParam>MSG</lParam>
    </params>
  </B83.Win32.WinAPI.CallNextHookEx_x0028_IntPtr_x002C__x0020_int_x002C__x0020_IntPtr_x002C__x0020_MSG_x0029_>
  <B83.Win32.WinAPI.DragAcceptFiles_x0028_IntPtr_x002C__x0020_bool_x0029_>
    <signature>B83.Win32.WinAPI.DragAcceptFiles(IntPtr, bool)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>DragAcceptFiles</name>
    <token>[DllImport("shell32.dll")]
public static extern void DragAcceptFiles(IntPtr hwnd, bool fAccept)</token>
    <scope>B83.Win32.WinAPI</scope>
    <params>
      <hwnd>IntPtr</hwnd>
      <fAccept>bool</fAccept>
    </params>
  </B83.Win32.WinAPI.DragAcceptFiles_x0028_IntPtr_x002C__x0020_bool_x0029_>
  <B83.Win32.WinAPI.DragQueryFile_x0028_IntPtr_x002C__x0020_uint_x002C__x0020_System.Text.StringBuilder_x002C__x0020_uint_x0029_>
    <signature>B83.Win32.WinAPI.DragQueryFile(IntPtr, uint, System.Text.StringBuilder, uint)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>DragQueryFile</name>
    <token>[DllImport("shell32.dll", CharSet = CharSet.Unicode)]
public static extern uint DragQueryFile(IntPtr hDrop, uint iFile, System.Text.StringBuilder lpszFile, uint cch)</token>
    <scope>B83.Win32.WinAPI</scope>
    <params>
      <hDrop>IntPtr</hDrop>
      <iFile>uint</iFile>
      <lpszFile>System.Text.StringBuilder</lpszFile>
      <cch>uint</cch>
    </params>
  </B83.Win32.WinAPI.DragQueryFile_x0028_IntPtr_x002C__x0020_uint_x002C__x0020_System.Text.StringBuilder_x002C__x0020_uint_x0029_>
  <B83.Win32.WinAPI.DragFinish_x0028_IntPtr_x0029_>
    <signature>B83.Win32.WinAPI.DragFinish(IntPtr)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>DragFinish</name>
    <token>[DllImport("shell32.dll")]
public static extern void DragFinish(IntPtr hDrop)</token>
    <scope>B83.Win32.WinAPI</scope>
    <params>
      <hDrop>IntPtr</hDrop>
    </params>
  </B83.Win32.WinAPI.DragFinish_x0028_IntPtr_x0029_>
  <B83.Win32.WinAPI.DragQueryPoint_x0028_IntPtr_x002C__x0020_POINT_x0029_>
    <signature>B83.Win32.WinAPI.DragQueryPoint(IntPtr, POINT)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>DragQueryPoint</name>
    <token>[DllImport("shell32.dll")]
public static extern void DragQueryPoint(IntPtr hDrop, out POINT pos)</token>
    <scope>B83.Win32.WinAPI</scope>
    <params>
      <hDrop>IntPtr</hDrop>
      <pos>POINT</pos>
    </params>
  </B83.Win32.WinAPI.DragQueryPoint_x0028_IntPtr_x002C__x0020_POINT_x0029_>
  <B83.Win32.UnityDragAndDropHook>
    <signature>B83.Win32.UnityDragAndDropHook</signature>
    <childcount>11</childcount>
    <type>Class</type>
    <name>UnityDragAndDropHook</name>
    <token>public class UnityDragAndDropHook </token>
    <scope>B83.Win32</scope>
  </B83.Win32.UnityDragAndDropHook>
  <B83.Win32.UnityDragAndDropHook.DroppedFilesEvent_x0028_List_x003C_string_x003E__x002C__x0020_POINT_x0029_>
    <signature>B83.Win32.UnityDragAndDropHook.DroppedFilesEvent(List&lt;string&gt;, POINT)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>DroppedFilesEvent</name>
    <token>public delegate void DroppedFilesEvent(List&lt;string&gt; aPathNames, POINT aDropPoint)</token>
    <scope>B83.Win32.UnityDragAndDropHook</scope>
    <params>
      <aPathNames>List&lt;string&gt;</aPathNames>
      <aDropPoint>POINT</aDropPoint>
    </params>
  </B83.Win32.UnityDragAndDropHook.DroppedFilesEvent_x0028_List_x003C_string_x003E__x002C__x0020_POINT_x0029_>
  <B83.Win32.UnityDragAndDropHook.OnDroppedFiles>
    <signature>B83.Win32.UnityDragAndDropHook.OnDroppedFiles</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>OnDroppedFiles</name>
    <token>public event DroppedFilesEvent OnDroppedFiles </token>
    <scope>B83.Win32.UnityDragAndDropHook</scope>
  </B83.Win32.UnityDragAndDropHook.OnDroppedFiles>
  <B83.Win32.UnityDragAndDropHook.UnityDragAndDropHook_x0028__x0029_>
    <signature>B83.Win32.UnityDragAndDropHook.UnityDragAndDropHook()</signature>
    <childcount>0</childcount>
    <type>Constructor</type>
    <name>UnityDragAndDropHook</name>
    <token>public  UnityDragAndDropHook()</token>
    <scope>B83.Win32.UnityDragAndDropHook</scope>
  </B83.Win32.UnityDragAndDropHook.UnityDragAndDropHook_x0028__x0029_>
  <B83.Win32.UnityDragAndDropHook.GetMainWindow_x0028_uint_x002C__x0020_string_x0029_>
    <signature>B83.Win32.UnityDragAndDropHook.GetMainWindow(uint, string)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>GetMainWindow</name>
    <token>public static IntPtr GetMainWindow(uint aThreadId, string aClassName = null)</token>
    <scope>B83.Win32.UnityDragAndDropHook</scope>
    <params>
      <aThreadId>uint</aThreadId>
      <aClassName>string</aClassName>
    </params>
  </B83.Win32.UnityDragAndDropHook.GetMainWindow_x0028_uint_x002C__x0020_string_x0029_>
  <B83.Win32.UnityDragAndDropHook.InstallHook_x0028__x0029_>
    <signature>B83.Win32.UnityDragAndDropHook.InstallHook()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>InstallHook</name>
    <token>public void InstallHook()</token>
    <scope>B83.Win32.UnityDragAndDropHook</scope>
  </B83.Win32.UnityDragAndDropHook.InstallHook_x0028__x0029_>
  <B83.Win32.UnityDragAndDropHook.UninstallHook_x0028__x0029_>
    <signature>B83.Win32.UnityDragAndDropHook.UninstallHook()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>UninstallHook</name>
    <token>public void UninstallHook()</token>
    <scope>B83.Win32.UnityDragAndDropHook</scope>
  </B83.Win32.UnityDragAndDropHook.UninstallHook_x0028__x0029_>
  <ConfigurableJointExtensions>
    <signature>ConfigurableJointExtensions</signature>
    <childcount>3</childcount>
    <type>Class</type>
    <name>ConfigurableJointExtensions</name>
    <token>public static class ConfigurableJointExtensions </token>
    <scope></scope>
  </ConfigurableJointExtensions>
  <ConfigurableJointExtensions.SetTargetRotationLocal_x0028_ConfigurableJoint_x002C__x0020_Quaternion_x002C__x0020_Quaternion_x0029_>
    <signature>ConfigurableJointExtensions.SetTargetRotationLocal(ConfigurableJoint, Quaternion, Quaternion)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>SetTargetRotationLocal</name>
    <token>public static void SetTargetRotationLocal(this ConfigurableJoint joint, Quaternion targetLocalRotation, Quaternion startLocalRotation)</token>
    <scope>ConfigurableJointExtensions</scope>
    <comments>
      <summary>Sets a joint's targetRotation to match a given local rotation.
	 The joint transform's local rotation must be cached on Start and passed into this method.</summary>
    </comments>
    <params>
      <joint>ConfigurableJoint</joint>
      <targetLocalRotation>Quaternion</targetLocalRotation>
      <startLocalRotation>Quaternion</startLocalRotation>
    </params>
  </ConfigurableJointExtensions.SetTargetRotationLocal_x0028_ConfigurableJoint_x002C__x0020_Quaternion_x002C__x0020_Quaternion_x0029_>
  <ConfigurableJointExtensions.SetTargetRotation_x0028_ConfigurableJoint_x002C__x0020_Quaternion_x002C__x0020_Quaternion_x0029_>
    <signature>ConfigurableJointExtensions.SetTargetRotation(ConfigurableJoint, Quaternion, Quaternion)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>SetTargetRotation</name>
    <token>public static void SetTargetRotation(this ConfigurableJoint joint, Quaternion targetWorldRotation, Quaternion startWorldRotation)</token>
    <scope>ConfigurableJointExtensions</scope>
    <comments>
      <summary>Sets a joint's targetRotation to match a given world rotation.
	 The joint transform's world rotation must be cached on Start and passed into this method.</summary>
    </comments>
    <params>
      <joint>ConfigurableJoint</joint>
      <targetWorldRotation>Quaternion</targetWorldRotation>
      <startWorldRotation>Quaternion</startWorldRotation>
    </params>
  </ConfigurableJointExtensions.SetTargetRotation_x0028_ConfigurableJoint_x002C__x0020_Quaternion_x002C__x0020_Quaternion_x0029_>
  <LoadingDots>
    <signature>LoadingDots</signature>
    <childcount>1</childcount>
    <type>Class</type>
    <name>LoadingDots</name>
    <token>public class LoadingDots : MonoBehaviour </token>
    <scope></scope>
  </LoadingDots>
  <ShowHidePanel>
    <signature>ShowHidePanel</signature>
    <childcount>2</childcount>
    <type>Class</type>
    <name>ShowHidePanel</name>
    <token>public class ShowHidePanel : MonoBehaviour </token>
    <scope></scope>
  </ShowHidePanel>
  <ShowHidePanel.Show_x0028__x0029_>
    <signature>ShowHidePanel.Show()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>Show</name>
    <token>public void Show()</token>
    <scope>ShowHidePanel</scope>
  </ShowHidePanel.Show_x0028__x0029_>
  <ShowHidePanel.Hide_x0028__x0029_>
    <signature>ShowHidePanel.Hide()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>Hide</name>
    <token>public void Hide()</token>
    <scope>ShowHidePanel</scope>
  </ShowHidePanel.Hide_x0028__x0029_>
  <MuscleLite>
    <signature>MuscleLite</signature>
    <childcount>47</childcount>
    <type>Class</type>
    <name>MuscleLite</name>
    <token>public class MuscleLite </token>
    <scope></scope>
  </MuscleLite>
  <MuscleLite.joint>
    <signature>MuscleLite.joint</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>joint</name>
    <token>public ConfigurableJoint joint </token>
    <scope>MuscleLite</scope>
  </MuscleLite.joint>
  <MuscleLite.target>
    <signature>MuscleLite.target</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>target</name>
    <token>public Transform target </token>
    <scope>MuscleLite</scope>
  </MuscleLite.target>
  <MuscleLite.pinWeightMlp>
    <signature>MuscleLite.pinWeightMlp</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>pinWeightMlp</name>
    <token>public float pinWeightMlp </token>
    <scope>MuscleLite</scope>
  </MuscleLite.pinWeightMlp>
  <MuscleLite.muscleWeightMlp>
    <signature>MuscleLite.muscleWeightMlp</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>muscleWeightMlp</name>
    <token>public float muscleWeightMlp </token>
    <scope>MuscleLite</scope>
  </MuscleLite.muscleWeightMlp>
  <MuscleLite.muscleDamperMlp>
    <signature>MuscleLite.muscleDamperMlp</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>muscleDamperMlp</name>
    <token>public float muscleDamperMlp </token>
    <scope>MuscleLite</scope>
  </MuscleLite.muscleDamperMlp>
  <MuscleLite.mappingWeightMlp>
    <signature>MuscleLite.mappingWeightMlp</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>mappingWeightMlp</name>
    <token>public float mappingWeightMlp </token>
    <scope>MuscleLite</scope>
  </MuscleLite.mappingWeightMlp>
  <MuscleLite.transform>
    <signature>MuscleLite.transform</signature>
    <childcount>0</childcount>
    <type>Property</type>
    <name>transform</name>
    <token>public Transform transform { get; set; }</token>
    <scope>MuscleLite</scope>
  </MuscleLite.transform>
  <MuscleLite.rigidBody>
    <signature>MuscleLite.rigidBody</signature>
    <childcount>0</childcount>
    <type>Property</type>
    <name>rigidBody</name>
    <token>public Rigidbody rigidBody { get; set; }</token>
    <scope>MuscleLite</scope>
  </MuscleLite.rigidBody>
  <MuscleLite.positionOffset>
    <signature>MuscleLite.positionOffset</signature>
    <childcount>0</childcount>
    <type>Property</type>
    <name>positionOffset</name>
    <token>public Vector3 positionOffset { get; set; }</token>
    <scope>MuscleLite</scope>
  </MuscleLite.positionOffset>
  <MuscleLite.index>
    <signature>MuscleLite.index</signature>
    <childcount>0</childcount>
    <type>Property</type>
    <name>index</name>
    <token>public int index { get; set; }</token>
    <scope>MuscleLite</scope>
  </MuscleLite.index>
  <MuscleLite.MuscleLite_x0028_ConfigurableJoint_x002C__x0020_Rigidbody_x002C__x0020_Transform_x0029_>
    <signature>MuscleLite.MuscleLite(ConfigurableJoint, Rigidbody, Transform)</signature>
    <childcount>0</childcount>
    <type>Constructor</type>
    <name>MuscleLite</name>
    <token>public  MuscleLite(ConfigurableJoint _joint, Rigidbody _rigidBody, Transform _target)</token>
    <scope>MuscleLite</scope>
    <params>
      <_joint>ConfigurableJoint</_joint>
      <_rigidBody>Rigidbody</_rigidBody>
      <_target>Transform</_target>
    </params>
  </MuscleLite.MuscleLite_x0028_ConfigurableJoint_x002C__x0020_Rigidbody_x002C__x0020_Transform_x0029_>
  <MuscleLite.Initiate_x0028_MuscleLite_x005B__x005D__x0029_>
    <signature>MuscleLite.Initiate(MuscleLite[])</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>Initiate</name>
    <token>public void Initiate(MuscleLite[] colleagues)</token>
    <scope>MuscleLite</scope>
    <params>
      <colleagues>MuscleLite[]</colleagues>
    </params>
  </MuscleLite.Initiate_x0028_MuscleLite_x005B__x005D__x0029_>
  <MuscleLite.FixTargetTransforms_x0028__x0029_>
    <signature>MuscleLite.FixTargetTransforms()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>FixTargetTransforms</name>
    <token>public void FixTargetTransforms()</token>
    <scope>MuscleLite</scope>
  </MuscleLite.FixTargetTransforms_x0028__x0029_>
  <MuscleLite.Reset_x0028__x0029_>
    <signature>MuscleLite.Reset()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>Reset</name>
    <token>public void Reset()</token>
    <scope>MuscleLite</scope>
  </MuscleLite.Reset_x0028__x0029_>
  <MuscleLite.MoveToTarget_x0028__x0029_>
    <signature>MuscleLite.MoveToTarget()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>MoveToTarget</name>
    <token>public void MoveToTarget()</token>
    <scope>MuscleLite</scope>
  </MuscleLite.MoveToTarget_x0028__x0029_>
  <MuscleLite.ClearVelocities_x0028__x0029_>
    <signature>MuscleLite.ClearVelocities()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>ClearVelocities</name>
    <token>public void ClearVelocities()</token>
    <scope>MuscleLite</scope>
  </MuscleLite.ClearVelocities_x0028__x0029_>
  <MuscleLite.Read_x0028__x0029_>
    <signature>MuscleLite.Read()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>Read</name>
    <token>public void Read()</token>
    <scope>MuscleLite</scope>
  </MuscleLite.Read_x0028__x0029_>
  <MuscleLite.Update_x0028_float_x002C__x0020_float_x002C__x0020_float_x002C__x0020_float_x002C__x0020_bool_x0029_>
    <signature>MuscleLite.Update(float, float, float, float, bool)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>Update</name>
    <token>public void Update(float pinWeightMaster, float muscleWeightMaster, float muscleSpring, float muscleDamper, bool angularPinning)</token>
    <scope>MuscleLite</scope>
    <params>
      <pinWeightMaster>float</pinWeightMaster>
      <muscleWeightMaster>float</muscleWeightMaster>
      <muscleSpring>float</muscleSpring>
      <muscleDamper>float</muscleDamper>
      <angularPinning>bool</angularPinning>
    </params>
  </MuscleLite.Update_x0028_float_x002C__x0020_float_x002C__x0020_float_x002C__x0020_float_x002C__x0020_bool_x0029_>
  <MuscleLite.Pin_x0028_float_x002C__x0020_float_x002C__x0020_float_x002C__x0020_bool_x0029_>
    <signature>MuscleLite.Pin(float, float, float, bool)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>Pin</name>
    <token>public void Pin(float pinWeightMaster, float pinPow, float pinDistanceFalloff, bool angularPinning)</token>
    <scope>MuscleLite</scope>
    <params>
      <pinWeightMaster>float</pinWeightMaster>
      <pinPow>float</pinPow>
      <pinDistanceFalloff>float</pinDistanceFalloff>
      <angularPinning>bool</angularPinning>
    </params>
  </MuscleLite.Pin_x0028_float_x002C__x0020_float_x002C__x0020_float_x002C__x0020_bool_x0029_>
  <MuscleLite.MuscleRotation_x0028_float_x002C__x0020_float_x002C__x0020_float_x0029_>
    <signature>MuscleLite.MuscleRotation(float, float, float)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>MuscleRotation</name>
    <token>public void MuscleRotation(float muscleWeightMaster, float muscleSpring, float muscleDamper)</token>
    <scope>MuscleLite</scope>
    <params>
      <muscleWeightMaster>float</muscleWeightMaster>
      <muscleSpring>float</muscleSpring>
      <muscleDamper>float</muscleDamper>
    </params>
  </MuscleLite.MuscleRotation_x0028_float_x002C__x0020_float_x002C__x0020_float_x0029_>
  <MuscleLite.Map_x0028_float_x0029_>
    <signature>MuscleLite.Map(float)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>Map</name>
    <token>public void Map(float masterWeight)</token>
    <scope>MuscleLite</scope>
    <params>
      <masterWeight>float</masterWeight>
    </params>
  </MuscleLite.Map_x0028_float_x0029_>
  <MuscleLite.UpdateAnchor_x0028_bool_x0029_>
    <signature>MuscleLite.UpdateAnchor(bool)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>UpdateAnchor</name>
    <token>public void UpdateAnchor(bool supportTranslationAnimation)</token>
    <scope>MuscleLite</scope>
    <params>
      <supportTranslationAnimation>bool</supportTranslationAnimation>
    </params>
  </MuscleLite.UpdateAnchor_x0028_bool_x0029_>
</members>